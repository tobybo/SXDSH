!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
) error	skynet/service/service_cell.lua	/^	skynet.dispatch("lua", function() error("No dispatch function")	end)$/;"	f
) print	skynet/test/testtimer.lua	/^	skynet.timeout(10, function() print("test timeout 10") end)$/;"	f
) skynet.exit	skynet/service/cmemory.lua	/^skynet.start(function() skynet.exit() end)$/;"	f
+  m.P(function (s, i) return i%2 ~	skynet/3rd/lpeg/test.lua	/^  +  m.P(function (s, i) return i%2 ~= 0 and i + 2 <= s:len() and i end) * 3)^0$/;"	f
+ "	skynet/3rd/lpeg/re.lua	/^            + "=" * name \/ function (n) return mm.Cmt(mm.Cb(n), equalcap) end$/;"	f
+ m.P(function (s,i) if i <	skynet/3rd/lpeg/test.lua	/^  + m.P(function (s,i) if i <= #s then return i, "aaa" end end) * 1)^0$/;"	f
ABSLINEINFO	skynet/3rd/lua/ldebug.h	27;"	d
ABSTKEYCONSTANT	skynet/3rd/lua/lobject.h	221;"	d
AGAIN_WOULDBLOCK	skynet/skynet-src/socket_server.c	55;"	d	file:
AGAIN_WOULDBLOCK	skynet/skynet-src/socket_server.c	57;"	d	file:
AGEBITS	skynet/3rd/lua/lgc.h	115;"	d
ALL	skynet/3rd/lua/makefile	/^ALL= all$/;"	m
ALL_A	skynet/3rd/lua/makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	skynet/3rd/lua/makefile	/^ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	skynet/3rd/lua/makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALPHABIT	skynet/3rd/lua/lctype.h	39;"	d
AR	skynet/3rd/lua/makefile	/^AR= ar rcu$/;"	m
ATOMIC_FLAG_INIT_	skynet/skynet-src/spinlock.h	14;"	d
ATOM_CAS	skynet/skynet-src/atomic.h	/^ATOM_CAS(STD_ atomic_int *ptr, int oval, int nval) {$/;"	f
ATOM_CAS	skynet/skynet-src/atomic.h	16;"	d
ATOM_CAS_POINTER	skynet/skynet-src/atomic.h	/^ATOM_CAS_POINTER(STD_ atomic_uintptr_t *ptr, uintptr_t oval, uintptr_t nval) {$/;"	f
ATOM_CAS_POINTER	skynet/skynet-src/atomic.h	19;"	d
ATOM_CAS_SIZET	skynet/skynet-src/atomic.h	/^ATOM_CAS_SIZET(STD_ atomic_size_t *ptr, size_t oval, size_t nval) {$/;"	f
ATOM_CAS_SIZET	skynet/skynet-src/atomic.h	18;"	d
ATOM_CAS_ULONG	skynet/skynet-src/atomic.h	/^ATOM_CAS_ULONG(STD_ atomic_ulong *ptr, unsigned long oval, unsigned long nval) {$/;"	f
ATOM_CAS_ULONG	skynet/skynet-src/atomic.h	17;"	d
ATOM_FADD	skynet/skynet-src/atomic.h	22;"	d
ATOM_FADD	skynet/skynet-src/atomic.h	68;"	d
ATOM_FAND	skynet/skynet-src/atomic.h	24;"	d
ATOM_FAND	skynet/skynet-src/atomic.h	70;"	d
ATOM_FDEC	skynet/skynet-src/atomic.h	21;"	d
ATOM_FDEC	skynet/skynet-src/atomic.h	67;"	d
ATOM_FINC	skynet/skynet-src/atomic.h	20;"	d
ATOM_FINC	skynet/skynet-src/atomic.h	66;"	d
ATOM_FSUB	skynet/skynet-src/atomic.h	23;"	d
ATOM_FSUB	skynet/skynet-src/atomic.h	69;"	d
ATOM_INIT	skynet/skynet-src/atomic.h	13;"	d
ATOM_INIT	skynet/skynet-src/atomic.h	42;"	d
ATOM_INT	skynet/skynet-src/atomic.h	38;"	d
ATOM_INT	skynet/skynet-src/atomic.h	9;"	d
ATOM_LOAD	skynet/skynet-src/atomic.h	14;"	d
ATOM_LOAD	skynet/skynet-src/atomic.h	43;"	d
ATOM_POINTER	skynet/skynet-src/atomic.h	10;"	d
ATOM_POINTER	skynet/skynet-src/atomic.h	39;"	d
ATOM_SIZET	skynet/skynet-src/atomic.h	11;"	d
ATOM_SIZET	skynet/skynet-src/atomic.h	40;"	d
ATOM_STORE	skynet/skynet-src/atomic.h	15;"	d
ATOM_STORE	skynet/skynet-src/atomic.h	44;"	d
ATOM_ULONG	skynet/skynet-src/atomic.h	12;"	d
ATOM_ULONG	skynet/skynet-src/atomic.h	41;"	d
AbsLineInfo	skynet/3rd/lua/lobject.h	/^typedef struct AbsLineInfo {$/;"	s
AbsLineInfo	skynet/3rd/lua/lobject.h	/^} AbsLineInfo;$/;"	t	typeref:struct:AbsLineInfo
Aux	skynet/3rd/lua/ltests.c	/^struct Aux { jmp_buf jb; const char *paniccode; lua_State *L; };$/;"	s	file:
B	skynet/3rd/lua/lstrlib.c	/^  luaL_Buffer B;$/;"	m	struct:str_Writer	file:
BACKLOG	skynet/lualib-src/lua-socket.c	23;"	d	file:
BACKLOG	skynet/service-src/service_gate.c	13;"	d	file:
BASE_O	skynet/3rd/lua/makefile	/^BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)$/;"	m
BASIC_STACK_SIZE	skynet/3rd/lua/lstate.h	145;"	d
BITRAS	skynet/3rd/lua/lobject.h	734;"	d
BITSPERCHAR	skynet/3rd/lpeg/lptypes.h	89;"	d
BIT_ISCOLLECTABLE	skynet/3rd/lua/lobject.h	298;"	d
BLACKBIT	skynet/3rd/lua/lgc.h	77;"	d
BLOCKSIZE	skynet/3rd/lua-md5/md5lib.c	63;"	d	file:
BLOCKSIZE	skynet/lualib-src/lsha1.c	263;"	d	file:
BLOCK_SIZE	skynet/lualib-src/lua-seri.c	37;"	d	file:
BSON_ARRAY	skynet/lualib-src/lua-bson.c	23;"	d	file:
BSON_BINARY	skynet/lualib-src/lua-bson.c	24;"	d	file:
BSON_BOOLEAN	skynet/lualib-src/lua-bson.c	27;"	d	file:
BSON_CODEWS	skynet/lualib-src/lua-bson.c	34;"	d	file:
BSON_DATE	skynet/lualib-src/lua-bson.c	28;"	d	file:
BSON_DBPOINTER	skynet/lualib-src/lua-bson.c	31;"	d	file:
BSON_DOCUMENT	skynet/lualib-src/lua-bson.c	22;"	d	file:
BSON_INT32	skynet/lualib-src/lua-bson.c	35;"	d	file:
BSON_INT64	skynet/lualib-src/lua-bson.c	37;"	d	file:
BSON_JSCODE	skynet/lualib-src/lua-bson.c	32;"	d	file:
BSON_MAXKEY	skynet/lualib-src/lua-bson.c	39;"	d	file:
BSON_MINKEY	skynet/lualib-src/lua-bson.c	38;"	d	file:
BSON_NULL	skynet/lualib-src/lua-bson.c	29;"	d	file:
BSON_OBJECTID	skynet/lualib-src/lua-bson.c	26;"	d	file:
BSON_REAL	skynet/lualib-src/lua-bson.c	20;"	d	file:
BSON_REGEX	skynet/lualib-src/lua-bson.c	30;"	d	file:
BSON_STRING	skynet/lualib-src/lua-bson.c	21;"	d	file:
BSON_SYMBOL	skynet/lualib-src/lua-bson.c	33;"	d	file:
BSON_TIMESTAMP	skynet/lualib-src/lua-bson.c	36;"	d	file:
BSON_TYPE_SHIFT	skynet/lualib-src/lua-bson.c	41;"	d	file:
BSON_UNDEFINED	skynet/lualib-src/lua-bson.c	25;"	d	file:
BUFFER_LIMIT	skynet/lualib-src/lua-socket.c	27;"	d	file:
BUFVFS	skynet/3rd/lua/lobject.c	394;"	d	file:
BinOpr	skynet/3rd/lua/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	skynet/3rd/lua/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	skynet/3rd/lua/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	skynet/3rd/lua/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BuffFS	skynet/3rd/lua/lobject.c	/^typedef struct BuffFS {$/;"	s	file:
BuffFS	skynet/3rd/lua/lobject.c	/^} BuffFS;$/;"	t	typeref:struct:BuffFS	file:
CACHE_EXIST	skynet/3rd/lua/lauxlib.c	1191;"	d	file:
CACHE_OFF	skynet/3rd/lua/lauxlib.c	1190;"	d	file:
CACHE_ON	skynet/3rd/lua/lauxlib.c	1192;"	d	file:
CACHE_SIZE	skynet/lualib-src/lua-clientsocket.c	22;"	d	file:
CAP_POSITION	skynet/3rd/lua/lstrlib.c	355;"	d	file:
CAP_UNFINISHED	skynet/3rd/lua/lstrlib.c	354;"	d	file:
CC	skynet/3rd/lpeg/makefile	/^CC = gcc$/;"	m
CC	skynet/3rd/lua/lauxlib.c	/^static struct codecache CC;$/;"	v	typeref:struct:codecache	file:
CC	skynet/3rd/lua/makefile	/^CC= gcc -std=gnu99$/;"	m
CC	skynet/platform.mk	/^CC ?= gcc$/;"	m
CClosure	skynet/3rd/lua/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	skynet/3rd/lua/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFLAGS	skynet/3rd/lpeg/makefile	/^CFLAGS = $(CWARNS) $(COPT) -std=c99 -I$(LUADIR) -fPIC$/;"	m
CFLAGS	skynet/3rd/lua/makefile	/^CFLAGS= -O2 -Wall -Wextra $(SYSCFLAGS) $(MYCFLAGS)$/;"	m
CFLAGS	skynet/Makefile	/^CFLAGS = -g -O2 -Wall -I$(LUA_INC) $(MYCFLAGS)$/;"	m
CHARSETINSTSIZE	skynet/3rd/lpeg/lptypes.h	139;"	d
CHARSETSIZE	skynet/3rd/lpeg/lptypes.h	91;"	d
CHECKCALLING_BEGIN	skynet/skynet-src/skynet_server.c	26;"	d	file:
CHECKCALLING_BEGIN	skynet/skynet-src/skynet_server.c	34;"	d	file:
CHECKCALLING_DECL	skynet/skynet-src/skynet_server.c	30;"	d	file:
CHECKCALLING_DECL	skynet/skynet-src/skynet_server.c	38;"	d	file:
CHECKCALLING_DESTROY	skynet/skynet-src/skynet_server.c	29;"	d	file:
CHECKCALLING_DESTROY	skynet/skynet-src/skynet_server.c	37;"	d	file:
CHECKCALLING_END	skynet/skynet-src/skynet_server.c	27;"	d	file:
CHECKCALLING_END	skynet/skynet-src/skynet_server.c	35;"	d	file:
CHECKCALLING_INIT	skynet/skynet-src/skynet_server.c	28;"	d	file:
CHECKCALLING_INIT	skynet/skynet-src/skynet_server.c	36;"	d	file:
CHECK_ABORT	skynet/skynet-src/skynet_start.c	45;"	d	file:
CHUNK_SIZE	skynet/lualib-src/sproto/sproto.c	9;"	d	file:
CIST_C	skynet/3rd/lua/lstate.h	211;"	d
CIST_CLSRET	skynet/3rd/lua/lstate.h	219;"	d
CIST_FIN	skynet/3rd/lua/lstate.h	217;"	d
CIST_FRESH	skynet/3rd/lua/lstate.h	212;"	d
CIST_HOOKED	skynet/3rd/lua/lstate.h	213;"	d
CIST_HOOKYIELD	skynet/3rd/lua/lstate.h	216;"	d
CIST_LEQ	skynet/3rd/lua/lstate.h	223;"	d
CIST_OAH	skynet/3rd/lua/lstate.h	210;"	d
CIST_RECST	skynet/3rd/lua/lstate.h	221;"	d
CIST_TAIL	skynet/3rd/lua/lstate.h	215;"	d
CIST_TRAN	skynet/3rd/lua/lstate.h	218;"	d
CIST_YPCALL	skynet/3rd/lua/lstate.h	214;"	d
CLIBS	skynet/3rd/lua/loadlib.c	/^static const char *const CLIBS = "_CLIBS";$/;"	v	file:
CLOSEKTOP	skynet/3rd/lua/lfunc.h	47;"	d
CMCFLAGS	skynet/3rd/lua/makefile	/^CMCFLAGS= $/;"	m
CMD.accept	skynet/service/gate.lua	/^function CMD.accept(source, fd)$/;"	f
CMD.afk	skynet/examples/login/msgagent.lua	/^function CMD.afk(source)$/;"	f
CMD.blackhole	skynet/test/testoverload.lua	/^function CMD.blackhole()$/;"	f
CMD.close	game/myservice/luagate.lua	/^function CMD.close(source, fd)$/;"	f
CMD.close	skynet/examples/watchdog.lua	/^function CMD.close(fd)$/;"	f
CMD.close	skynet/lualib/snax/gateserver.lua	/^	function CMD.close()$/;"	f
CMD.cmd	skynet/service/debug_agent.lua	/^function CMD.cmd(cmdline)$/;"	f
CMD.confirm	skynet/service/sharedatad.lua	/^function CMD.confirm(cobj)$/;"	f
CMD.delete	skynet/service/sharedatad.lua	/^function CMD.delete(name)$/;"	f
CMD.disconnect	game/myservice/player_agent.lua	/^function CMD.disconnect()$/;"	f
CMD.disconnect	skynet/examples/agent.lua	/^function CMD.disconnect()$/;"	f
CMD.forward	skynet/service/gate.lua	/^function CMD.forward(source, fd, client, address)$/;"	f
CMD.kick	skynet/service/gate.lua	/^function CMD.kick(source, fd)$/;"	f
CMD.login	skynet/examples/login/msgagent.lua	/^function CMD.login(source, uid, sid, secret)$/;"	f
CMD.logout	skynet/examples/login/logind.lua	/^function CMD.logout(uid, subid)$/;"	f
CMD.logout	skynet/examples/login/msgagent.lua	/^function CMD.logout(source)$/;"	f
CMD.monitor	skynet/service/sharedatad.lua	/^function CMD.monitor(name, obj)$/;"	f
CMD.new	skynet/service/sharedatad.lua	/^function CMD.new(name, t, ...)$/;"	f
CMD.open	skynet/lualib/snax/gateserver.lua	/^	function CMD.open( source, conf )$/;"	f
CMD.ping	skynet/service/debug_agent.lua	/^function CMD.ping()$/;"	f
CMD.query	skynet/service/sharedatad.lua	/^function CMD.query(name)$/;"	f
CMD.register_gate	skynet/examples/login/logind.lua	/^function CMD.register_gate(server, address)$/;"	f
CMD.start	game/myservice/luagate.lua	/^function CMD.start(source, conf)$/;"	f
CMD.start	game/myservice/player_agent.lua	/^function CMD.start(conf)$/;"	f
CMD.start	skynet/examples/agent.lua	/^function CMD.start(conf)$/;"	f
CMD.start	skynet/examples/watchdog.lua	/^function CMD.start(conf)$/;"	f
CMD.start	skynet/service/debug_agent.lua	/^function CMD.start(address, fd)$/;"	f
CMD.sum	skynet/test/testoverload.lua	/^function CMD.sum(n)$/;"	f
CMD.update	skynet/service/sharedatad.lua	/^function CMD.update(name, t, ...)$/;"	f
COMBINE_TYPE	skynet/lualib-src/lua-seri.c	35;"	d	file:
COMMAND.clearcache	skynet/service/debug_console.lua	/^function COMMAND.clearcache()$/;"	f
COMMAND.cmem	skynet/service/debug_console.lua	/^function COMMAND.cmem()$/;"	f
COMMAND.dbgcmd	skynet/service/debug_console.lua	/^function COMMAND.dbgcmd(address, cmd, ...)$/;"	f
COMMAND.dumpheap	skynet/service/debug_console.lua	/^function COMMAND.dumpheap()$/;"	f
COMMAND.error	skynet/test/testselect.lua	/^function COMMAND.error()$/;"	f
COMMAND.exit	skynet/service/debug_console.lua	/^function COMMAND.exit(address)$/;"	f
COMMAND.exit	skynet/test/testselect.lua	/^function COMMAND.exit()$/;"	f
COMMAND.gc	skynet/service/debug_console.lua	/^function COMMAND.gc(ti)$/;"	f
COMMAND.help	skynet/service/debug_console.lua	/^function COMMAND.help()$/;"	f
COMMAND.info	skynet/service/debug_console.lua	/^function COMMAND.info(address, ...)$/;"	f
COMMAND.inject	skynet/service/debug_console.lua	/^function COMMAND.inject(address, filename, ...)$/;"	f
COMMAND.jmem	skynet/service/debug_console.lua	/^function COMMAND.jmem()$/;"	f
COMMAND.kill	skynet/service/debug_console.lua	/^function COMMAND.kill(address)$/;"	f
COMMAND.killtask	skynet/service/debug_console.lua	/^function COMMAND.killtask(address, threadname)$/;"	f
COMMAND.list	skynet/service/debug_console.lua	/^function COMMAND.list()$/;"	f
COMMAND.log	skynet/service/debug_console.lua	/^function COMMAND.log(...)$/;"	f
COMMAND.logoff	skynet/service/debug_console.lua	/^function COMMAND.logoff(address)$/;"	f
COMMAND.logon	skynet/service/debug_console.lua	/^function COMMAND.logon(address)$/;"	f
COMMAND.mem	skynet/service/debug_console.lua	/^function COMMAND.mem(ti)$/;"	f
COMMAND.netstat	skynet/service/debug_console.lua	/^function COMMAND.netstat()$/;"	f
COMMAND.ping	skynet/service/debug_console.lua	/^function COMMAND.ping(address)$/;"	f
COMMAND.ping	skynet/test/testselect.lua	/^function COMMAND.ping(ti, str)$/;"	f
COMMAND.profactive	skynet/service/debug_console.lua	/^function COMMAND.profactive(flag)$/;"	f
COMMAND.service	skynet/service/debug_console.lua	/^function COMMAND.service()$/;"	f
COMMAND.signal	skynet/service/debug_console.lua	/^function COMMAND.signal(address, sig)$/;"	f
COMMAND.snax	skynet/service/debug_console.lua	/^function COMMAND.snax(...)$/;"	f
COMMAND.start	skynet/service/debug_console.lua	/^function COMMAND.start(...)$/;"	f
COMMAND.stat	skynet/service/debug_console.lua	/^function COMMAND.stat(ti)$/;"	f
COMMAND.task	skynet/service/debug_console.lua	/^function COMMAND.task(address)$/;"	f
COMMAND.trace	skynet/service/debug_console.lua	/^function COMMAND.trace(address, proto, flag)$/;"	f
COMMAND.uniqtask	skynet/service/debug_console.lua	/^function COMMAND.uniqtask(address)$/;"	f
COMMANDX.call	skynet/service/debug_console.lua	/^function COMMANDX.call(cmd)$/;"	f
COMMANDX.debug	skynet/service/debug_console.lua	/^function COMMANDX.debug(cmd)$/;"	f
COMMENT	skynet/3rd/lua/luac.c	329;"	d	file:
COPT	skynet/3rd/lpeg/makefile	/^COPT = -O2 -DNDEBUG$/;"	m
CORE_O	skynet/3rd/lua/makefile	/^CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o$/;"	m
COS_DEAD	skynet/3rd/lua/lcorolib.c	118;"	d	file:
COS_NORM	skynet/3rd/lua/lcorolib.c	120;"	d	file:
COS_RUN	skynet/3rd/lua/lcorolib.c	117;"	d	file:
COS_YIELD	skynet/3rd/lua/lcorolib.c	119;"	d	file:
CREATE_ABCk	skynet/3rd/lua/lopcodes.h	156;"	d
CREATE_ABx	skynet/3rd/lua/lopcodes.h	162;"	d
CREATE_Ax	skynet/3rd/lua/lopcodes.h	166;"	d
CREATE_sJ	skynet/3rd/lua/lopcodes.h	169;"	d
CSERVICE	skynet/Makefile	/^CSERVICE = snlua logger gate harbor$/;"	m
CSERVICE_PATH	skynet/Makefile	/^CSERVICE_PATH ?= cservice$/;"	m
CSERVICE_TEMP	skynet/Makefile	/^define CSERVICE_TEMP$/;"	m
CSV	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="CSV"><\/a>Comma-Separated Values (CSV)<\/h3>$/;"	a
CWARNS	skynet/3rd/lpeg/makefile	/^CWARNS = -Wall -Wextra -pedantic \\$/;"	m
Cacc	skynet/3rd/lpeg/lpcap.h	/^  Cacc,  \/* ktable[key] is function; next node is pattern *\/$/;"	e	enum:CapKind
CallInfo	skynet/3rd/lua/lstate.h	/^struct CallInfo {$/;"	s
CallInfo	skynet/3rd/lua/lstate.h	/^typedef struct CallInfo CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	skynet/3rd/lua/lapi.c	/^struct CallS {  \/* data to 'f_call' *\/$/;"	s	file:
CapKind	skynet/3rd/lpeg/lpcap.h	/^typedef enum CapKind {$/;"	g
CapKind	skynet/3rd/lpeg/lpcap.h	/^} CapKind;$/;"	t	typeref:enum:CapKind
CapState	skynet/3rd/lpeg/lpcap.h	/^typedef struct CapState {$/;"	s
CapState	skynet/3rd/lpeg/lpcap.h	/^} CapState;$/;"	t	typeref:struct:CapState
Capture	skynet/3rd/lpeg/lpcap.h	/^typedef struct Capture {$/;"	s
Capture	skynet/3rd/lpeg/lpcap.h	/^} Capture;$/;"	t	typeref:struct:Capture
Carg	skynet/3rd/lpeg/lpcap.h	/^  Carg,  \/* 'key' is arg's number *\/$/;"	e	enum:CapKind
Cbackref	skynet/3rd/lpeg/lpcap.h	/^  Cbackref,  \/* ktable[key] is "name" of group to get capture *\/$/;"	e	enum:CapKind
Cclose	skynet/3rd/lpeg/lpcap.h	/^  Cclose,  \/* not used in trees *\/$/;"	e	enum:CapKind
Cconst	skynet/3rd/lpeg/lpcap.h	/^  Cconst,  \/* ktable[key] is Lua constant *\/$/;"	e	enum:CapKind
Cfold	skynet/3rd/lpeg/lpcap.h	/^  Cfold,  \/* ktable[key] is function; next node is pattern *\/$/;"	e	enum:CapKind
Cfunc	skynet/3rd/lua/ltests.c	/^static int Cfunc (lua_State *L) {$/;"	f	file:
Cfunck	skynet/3rd/lua/ltests.c	/^static int Cfunck (lua_State *L, int status, lua_KContext ctx) {$/;"	f	file:
Cfunction	skynet/3rd/lpeg/lpcap.h	/^  Cfunction,  \/* ktable[key] is function; next node is pattern *\/$/;"	e	enum:CapKind
Cgroup	skynet/3rd/lpeg/lpcap.h	/^  Cgroup  \/* ktable[key] is group's "name" *\/$/;"	e	enum:CapKind
Charset	skynet/3rd/lpeg/lptypes.h	/^typedef struct Charset {$/;"	s
Charset	skynet/3rd/lpeg/lptypes.h	/^} Charset;$/;"	t	typeref:struct:Charset
Chook	skynet/3rd/lua/ltests.c	/^static void Chook (lua_State *L, lua_Debug *ar) {$/;"	f	file:
CloseP	skynet/3rd/lua/ldo.c	/^struct CloseP {$/;"	s	file:
Closure	skynet/3rd/lua/lobject.h	/^typedef union Closure {$/;"	u
Closure	skynet/3rd/lua/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	skynet/3rd/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	skynet/3rd/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	skynet/3rd/lua/lobject.h	647;"	d
Cnum	skynet/3rd/lpeg/lpcap.h	/^  Cnum,  \/* numbered capture; 'key' is number of value to return *\/$/;"	e	enum:CapKind
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:TString
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata0
CommonHeader	skynet/3rd/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	skynet/3rd/lua/lobject.h	288;"	d
CommonHeader	skynet/3rd/lua/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
CompileState	skynet/3rd/lpeg/lpcode.c	/^typedef struct CompileState {$/;"	s	file:
CompileState	skynet/3rd/lpeg/lpcode.c	/^} CompileState;$/;"	t	typeref:struct:CompileState	file:
ConsControl	skynet/3rd/lua/lparser.c	/^typedef struct ConsControl {$/;"	s	file:
ConsControl	skynet/3rd/lua/lparser.c	/^} ConsControl;$/;"	t	typeref:struct:ConsControl	file:
Cposition	skynet/3rd/lpeg/lpcap.h	/^  Cposition,$/;"	e	enum:CapKind
Cquery	skynet/3rd/lpeg/lpcap.h	/^  Cquery,  \/* ktable[key] is table; next node is pattern *\/$/;"	e	enum:CapKind
Cruntime	skynet/3rd/lpeg/lpcap.h	/^  Cruntime,  \/* not used in trees (is uses another type for tree) *\/$/;"	e	enum:CapKind
Csimple	skynet/3rd/lpeg/lpcap.h	/^  Csimple,  \/* next node is pattern *\/$/;"	e	enum:CapKind
Cstring	skynet/3rd/lpeg/lpcap.h	/^  Cstring,  \/* ktable[key] is string; next node is pattern *\/$/;"	e	enum:CapKind
Csubst	skynet/3rd/lpeg/lpcap.h	/^  Csubst,  \/* substitution capture; next node is pattern *\/$/;"	e	enum:CapKind
Ctable	skynet/3rd/lpeg/lpcap.h	/^  Ctable,  \/* next node is pattern *\/$/;"	e	enum:CapKind
DEFAULT_CAP	skynet/lualib-src/lua-bson.c	15;"	d	file:
DEFAULT_CAP	skynet/lualib-src/lua-mongo.c	23;"	d	file:
DEFAULT_QUEUE_SIZE	skynet/service-src/service_harbor.c	25;"	d	file:
DEFAULT_QUEUE_SIZE	skynet/skynet-src/skynet_mq.c	12;"	d	file:
DEFAULT_SLOT_SIZE	skynet/skynet-src/skynet_handle.c	11;"	d	file:
DES_FP	skynet/lualib-src/lua-crypt.c	221;"	d	file:
DES_IP	skynet/lualib-src/lua-crypt.c	208;"	d	file:
DES_ROUND	skynet/lualib-src/lua-crypt.c	234;"	d	file:
DIBS	skynet/3rd/lua/ldump.c	63;"	d	file:
DIGITBIT	skynet/3rd/lua/lctype.h	40;"	d
DLMSG	skynet/3rd/lua/loadlib.c	237;"	d	file:
DirectoryOfThisScript	skynet/.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
DumpState	skynet/3rd/lua/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon9	file:
Dyndata	skynet/3rd/lua/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	skynet/3rd/lua/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
E	skynet/skynet-src/skynet_env.c	/^static struct skynet_env *E = NULL;$/;"	v	typeref:struct:skynet_env	file:
ENCODE_BUFFERSIZE	skynet/lualib-src/sproto/lsproto.c	13;"	d	file:
ENCODE_DEEPLEVEL	skynet/lualib-src/sproto/lsproto.c	16;"	d	file:
ENCODE_MAXSIZE	skynet/lualib-src/sproto/lsproto.c	15;"	d	file:
EOFMARK	skynet/3rd/lua/lua.c	471;"	d	file:
EOZ	skynet/3rd/lua/lzio.h	16;"	d
EQ	skynet/3rd/lua/ltests.c	1378;"	d	file:
ERRFUNC	skynet/3rd/lua/loadlib.c	377;"	d	file:
ERRLIB	skynet/3rd/lua/loadlib.c	376;"	d	file:
ERRORSTACKSIZE	skynet/3rd/lua/ldo.c	199;"	d	file:
EXPORT	skynet/platform.mk	/^EXPORT := -Wl,-E$/;"	m
EXPORT	skynet/platform.mk	/^macosx : EXPORT :=$/;"	m
EXTRAARG	skynet/3rd/lua/luac.c	330;"	d	file:
EXTRAARGC	skynet/3rd/lua/luac.c	331;"	d	file:
EXTRA_STACK	skynet/3rd/lua/lstate.h	142;"	d
F	skynet/3rd/lua-md5/md5.c	41;"	d	file:
F2Iceil	skynet/3rd/lua/lvm.h	/^  F2Iceil    \/* takes the ceil of the number *\/$/;"	e	enum:__anon38
F2Ieq	skynet/3rd/lua/lvm.h	/^  F2Ieq,     \/* no rounding; accepts only integral values *\/$/;"	e	enum:__anon38
F2Ifloor	skynet/3rd/lua/lvm.h	/^  F2Ifloor,  \/* takes the floor of the number *\/$/;"	e	enum:__anon38
F2Imod	skynet/3rd/lua/lvm.h	/^} F2Imod;$/;"	t	typeref:enum:__anon38
FALSE 	game/myservice/define.lua	/^FALSE = setmetatable({},{__index = function()$/;"	f
FIGS	skynet/3rd/lua/lmathlib.c	253;"	d	file:
FIGS	skynet/3rd/lua/lmathlib.c	257;"	d	file:
FIGS	skynet/3rd/lua/lmathlib.c	258;"	d	file:
FILES	skynet/3rd/lpeg/makefile	/^FILES = lpvm.o lpcap.o lptree.o lpcode.o lpprint.o lpcset.o$/;"	m
FINALIZEDBIT	skynet/3rd/lua/lgc.h	78;"	d
FIRST_RESERVED	skynet/3rd/lua/llex.h	20;"	d
FIXEDARGS	skynet/3rd/lpeg/lptypes.h	71;"	d
FREE	skynet/skynet-src/socket_server.c	242;"	d	file:
FUNCTION	skynet/3rd/lua/luac.c	124;"	d	file:
FuncState	skynet/3rd/lua/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	skynet/3rd/lua/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
G	skynet/3rd/lua-md5/md5.c	42;"	d	file:
G	skynet/3rd/lua/lstate.h	334;"	d
G	skynet/lualib-src/lua-crypt.c	868;"	d	file:
GCFINALIZECOST	skynet/3rd/lua/lgc.c	46;"	d	file:
GCFINMAX	skynet/3rd/lua/lgc.c	40;"	d	file:
GCObject	skynet/3rd/lua/lobject.h	/^typedef struct GCObject {$/;"	s
GCObject	skynet/3rd/lua/lobject.h	/^} GCObject;$/;"	t	typeref:struct:GCObject
GCSTPCLS	skynet/3rd/lua/lgc.h	162;"	d
GCSTPGC	skynet/3rd/lua/lgc.h	161;"	d
GCSTPUSR	skynet/3rd/lua/lgc.h	160;"	d
GCSWEEPMAX	skynet/3rd/lua/lgc.c	35;"	d	file:
GCSatomic	skynet/3rd/lua/lgc.h	33;"	d
GCScallfin	skynet/3rd/lua/lgc.h	38;"	d
GCSenteratomic	skynet/3rd/lua/lgc.h	32;"	d
GCSpause	skynet/3rd/lua/lgc.h	39;"	d
GCSpropagate	skynet/3rd/lua/lgc.h	31;"	d
GCSswpallgc	skynet/3rd/lua/lgc.h	34;"	d
GCSswpend	skynet/3rd/lua/lgc.h	37;"	d
GCSswpfinobj	skynet/3rd/lua/lgc.h	35;"	d
GCSswptobefnz	skynet/3rd/lua/lgc.h	36;"	d
GCTM	skynet/3rd/lua/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GCUnion	skynet/3rd/lua/lstate.h	/^union GCUnion {$/;"	u
GCdebt	skynet/3rd/lua/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	skynet/3rd/lua/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GETARG_A	skynet/3rd/lua/lopcodes.h	125;"	d
GETARG_Ax	skynet/3rd/lua/lopcodes.h	143;"	d
GETARG_B	skynet/3rd/lua/lopcodes.h	128;"	d
GETARG_Bx	skynet/3rd/lua/lopcodes.h	140;"	d
GETARG_C	skynet/3rd/lua/lopcodes.h	132;"	d
GETARG_k	skynet/3rd/lua/lopcodes.h	137;"	d
GETARG_sB	skynet/3rd/lua/lopcodes.h	129;"	d
GETARG_sBx	skynet/3rd/lua/lopcodes.h	146;"	d
GETARG_sC	skynet/3rd/lua/lopcodes.h	133;"	d
GETARG_sJ	skynet/3rd/lua/lopcodes.h	150;"	d
GET_OPCODE	skynet/3rd/lua/lopcodes.h	114;"	d
GET_UINT32	skynet/lualib-src/lua-crypt.c	190;"	d	file:
GLOBALNAME_LENGTH	skynet/skynet-src/skynet_harbor.h	7;"	d
GMatchState	skynet/3rd/lua/lstrlib.c	/^typedef struct GMatchState {$/;"	s	file:
GMatchState	skynet/3rd/lua/lstrlib.c	/^} GMatchState;$/;"	t	typeref:struct:GMatchState	file:
G_NEW	skynet/3rd/lua/lgc.h	106;"	d
G_NODE	skynet/skynet-src/skynet_server.c	/^static struct skynet_node G_NODE;$/;"	v	typeref:struct:skynet_node	file:
G_OLD	skynet/3rd/lua/lgc.h	110;"	d
G_OLD0	skynet/3rd/lua/lgc.h	108;"	d
G_OLD1	skynet/3rd/lua/lgc.h	109;"	d
G_SHARED	skynet/3rd/lua/lgc.h	113;"	d
G_SURVIVAL	skynet/3rd/lua/lgc.h	107;"	d
G_TOUCHED1	skynet/3rd/lua/lgc.h	111;"	d
G_TOUCHED2	skynet/3rd/lua/lgc.h	112;"	d
G_sproto	skynet/lualib-src/sproto/lsproto.c	/^static struct sproto * G_sproto[MAX_GLOBALSPROTO];$/;"	v	typeref:struct:sproto	file:
GetCompilationInfoForFile	skynet/.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
H	skynet/3rd/lua-md5/md5.c	43;"	d	file:
H	skynet/skynet-src/skynet_handle.c	/^static struct handle_storage *H = NULL;$/;"	v	typeref:struct:handle_storage	file:
HANDLE_MASK	skynet/skynet-src/skynet_handle.h	7;"	d
HANDLE_REMOTE_SHIFT	skynet/skynet-src/skynet_handle.h	8;"	d
HARBOR	skynet/skynet-src/skynet_harbor.c	/^static unsigned int HARBOR = ~0; \/* toby@2022-03-10): 全1表示非集群节点，禁止远程调用 *\/$/;"	v	file:
HASHSIZE	skynet/3rd/lua-md5/md5.h	14;"	d
HASHSIZE	skynet/lualib-src/lua-netpack.c	16;"	d	file:
HASH_ID	skynet/skynet-src/socket_server.c	41;"	d	file:
HASH_SIZE	skynet/service-src/service_harbor.c	24;"	d	file:
HEADER_COOKIE_LENGTH	skynet/service-src/service_harbor.c	28;"	d	file:
HEX	skynet/lualib-src/lua-crypt.c	572;"	d	file:
HOOKKEY	skynet/3rd/lua/ldblib.c	/^static const char *const HOOKKEY = "_HOOKKEY";$/;"	v	file:
HOOKKEY	skynet/lualib-src/lua-debugchannel.c	/^static const int HOOKKEY = 0;$/;"	v	file:
Hash	skynet/lualib-src/lua-crypt.c	/^Hash(const char * str, int sz, uint8_t key[8]) {$/;"	f	file:
Header	skynet/3rd/lua/lstrlib.c	/^typedef struct Header {$/;"	s	file:
Header	skynet/3rd/lua/lstrlib.c	/^} Header;$/;"	t	typeref:struct:Header	file:
Header	skynet/3rd/lua/ltests.c	/^typedef union Header {$/;"	u	file:
Header	skynet/3rd/lua/ltests.c	/^} Header;$/;"	t	typeref:union:Header	file:
I	skynet/3rd/lua-md5/md5.c	44;"	d	file:
I2UInt	skynet/3rd/lua/lmathlib.c	/^static lua_Unsigned I2UInt (Rand64 x) {$/;"	f	file:
I2UInt	skynet/3rd/lua/lmathlib.c	342;"	d	file:
I2d	skynet/3rd/lua/lmathlib.c	/^static lua_Number I2d (Rand64 x) {$/;"	f	file:
IAny	skynet/3rd/lpeg/lpvm.h	/^  IAny, \/* if no char, fail *\/$/;"	e	enum:Opcode
IBackCommit	skynet/3rd/lpeg/lpvm.h	/^  IBackCommit,  \/* backtrack like "fail" but jump to its own 'offset' *\/$/;"	e	enum:Opcode
IBehind	skynet/3rd/lpeg/lpvm.h	/^  IBehind,  \/* walk back 'aux1' characters (fail if not possible) *\/$/;"	e	enum:Opcode
ICall	skynet/3rd/lpeg/lpvm.h	/^  ICall,  \/* call rule at 'offset' *\/$/;"	e	enum:Opcode
IChar	skynet/3rd/lpeg/lpvm.h	/^  IChar,  \/* if char != aux1, fail *\/$/;"	e	enum:Opcode
IChoice	skynet/3rd/lpeg/lpvm.h	/^  IChoice,  \/* stack a choice; next fail will jump to 'offset' *\/$/;"	e	enum:Opcode
ICloseCapture	skynet/3rd/lpeg/lpvm.h	/^  ICloseCapture,$/;"	e	enum:Opcode
ICloseRunTime	skynet/3rd/lpeg/lpvm.h	/^  ICloseRunTime,$/;"	e	enum:Opcode
ICommit	skynet/3rd/lpeg/lpvm.h	/^  ICommit,  \/* pop choice and jump to 'offset' *\/$/;"	e	enum:Opcode
ID_TAG16	skynet/skynet-src/socket_server.c	42;"	d	file:
IEmpty	skynet/3rd/lpeg/lpvm.h	/^  IEmpty  \/* to fill empty slots left by optimizations *\/$/;"	e	enum:Opcode
IEnd	skynet/3rd/lpeg/lpvm.h	/^  IEnd,  \/* end of pattern *\/$/;"	e	enum:Opcode
IFail	skynet/3rd/lpeg/lpvm.h	/^  IFail,  \/* go back to saved state on choice and jump to saved offset *\/$/;"	e	enum:Opcode
IFailTwice	skynet/3rd/lpeg/lpvm.h	/^  IFailTwice,  \/* pop one choice and then fail *\/$/;"	e	enum:Opcode
IFullCapture	skynet/3rd/lpeg/lpvm.h	/^  IFullCapture,  \/* complete capture of last 'off' chars *\/$/;"	e	enum:Opcode
IGiveup	skynet/3rd/lpeg/lpvm.h	/^  IGiveup,  \/* internal use *\/$/;"	e	enum:Opcode
IJmp	skynet/3rd/lpeg/lpvm.h	/^  IJmp,  \/* jump to 'offset' *\/$/;"	e	enum:Opcode
INITBACK	skynet/3rd/lpeg/lpvm.c	17;"	d	file:
INITCAPSIZE	skynet/3rd/lpeg/lptypes.h	64;"	d
INVALID_OFFSET	skynet/lualib-src/lua-datasheet.c	17;"	d	file:
IOPREF_LEN	skynet/3rd/lua/liolib.c	150;"	d	file:
IO_INPUT	skynet/3rd/lua/liolib.c	151;"	d	file:
IO_OUTPUT	skynet/3rd/lua/liolib.c	152;"	d	file:
IO_PREFIX	skynet/3rd/lua/liolib.c	149;"	d	file:
IOpenCall	skynet/3rd/lpeg/lpvm.h	/^  IOpenCall,  \/* call rule number 'key' (must be closed to a ICall) *\/$/;"	e	enum:Opcode
IOpenCapture	skynet/3rd/lpeg/lpvm.h	/^  IOpenCapture,  \/* start a capture *\/$/;"	e	enum:Opcode
IPartialCommit	skynet/3rd/lpeg/lpvm.h	/^  IPartialCommit,  \/* update top choice to current position and jump *\/$/;"	e	enum:Opcode
IRet	skynet/3rd/lpeg/lpvm.h	/^  IRet,  \/* return from a rule *\/$/;"	e	enum:Opcode
IS	skynet/3rd/lua/luac.c	74;"	d	file:
ISK	skynet/3rd/lua/luac.c	332;"	d	file:
ISet	skynet/3rd/lpeg/lpvm.h	/^  ISet,  \/* if char not in set, fail *\/$/;"	e	enum:Opcode
ISpan	skynet/3rd/lpeg/lpvm.h	/^  ISpan,  \/* read a span of chars in set *\/$/;"	e	enum:Opcode
ITestAny	skynet/3rd/lpeg/lpvm.h	/^  ITestAny,  \/* in no char, jump to 'offset' *\/$/;"	e	enum:Opcode
ITestChar	skynet/3rd/lpeg/lpvm.h	/^  ITestChar,  \/* if char != aux1, jump to 'offset' *\/$/;"	e	enum:Opcode
ITestSet	skynet/3rd/lpeg/lpvm.h	/^  ITestSet,  \/* if char not in set, jump to 'offset' *\/$/;"	e	enum:Opcode
IUTFR	skynet/3rd/lpeg/lpvm.h	/^  IUTFR,  \/* if codepoint not in range [offset, utf_to], fail *\/$/;"	e	enum:Opcode
Iadd	skynet/3rd/lua/lmathlib.c	/^static Rand64 Iadd (Rand64 i1, Rand64 i2) {$/;"	f	file:
IdxT	skynet/3rd/lua/ltablib.c	/^typedef unsigned int IdxT;$/;"	t	file:
IndexModel	skynet/lualib/skynet/db/mongo.lua	/^local function IndexModel(option)$/;"	f
Index_t	skynet/3rd/lpeg/lpcap.h	/^typedef uint Index_t;$/;"	t
Inst	skynet/3rd/lpeg/lpvm.h	/^  struct Inst {$/;"	s	union:Instruction
Instruction	skynet/3rd/lpeg/lpvm.h	/^typedef union Instruction {$/;"	u
Instruction	skynet/3rd/lpeg/lpvm.h	/^} Instruction;$/;"	t	typeref:union:Instruction
Instruction	skynet/3rd/lua/llimits.h	/^typedef l_uint32 Instruction;$/;"	t
Int2I	skynet/3rd/lua/lmathlib.c	/^static Rand64 Int2I (lua_Unsigned n) {$/;"	f	file:
Int2I	skynet/3rd/lua/lmathlib.c	345;"	d	file:
IsHeaderFile	skynet/.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
Ishl	skynet/3rd/lua/lmathlib.c	/^static Rand64 Ishl (Rand64 i, int n) {$/;"	f	file:
Ixor	skynet/3rd/lua/lmathlib.c	/^static void Ixor (Rand64 *i1, Rand64 i2) {$/;"	f	file:
JEMALLOC_INC	skynet/Makefile	/^JEMALLOC_INC := 3rd\/jemalloc\/include\/jemalloc$/;"	m
JEMALLOC_STATICLIB	skynet/Makefile	/^JEMALLOC_STATICLIB := 3rd\/jemalloc\/lib\/libjemalloc_pic.a$/;"	m
KB	skynet/3rd/lua/lvm.c	1064;"	d	file:
KC	skynet/3rd/lua/lvm.c	1067;"	d	file:
KEYTYPE_INTEGER	skynet/lualib-src/lua-sharedata.c	11;"	d	file:
KEYTYPE_STRING	skynet/lualib-src/lua-sharedata.c	12;"	d	file:
KGC_GEN	skynet/3rd/lua/lstate.h	152;"	d
KGC_INC	skynet/3rd/lua/lstate.h	151;"	d
KNRM	skynet/lualib-src/lua-skynet.c	6;"	d	file:
KOption	skynet/3rd/lua/lstrlib.c	/^typedef enum KOption {$/;"	g	file:
KOption	skynet/3rd/lua/lstrlib.c	/^} KOption;$/;"	t	typeref:enum:KOption	file:
KRED	skynet/lualib-src/lua-skynet.c	7;"	d	file:
Kchar	skynet/3rd/lua/lstrlib.c	/^  Kchar,	\/* fixed-length strings *\/$/;"	e	enum:KOption	file:
Kdouble	skynet/3rd/lua/lstrlib.c	/^  Kdouble,	\/* double-precision floating-point numbers *\/$/;"	e	enum:KOption	file:
Kfloat	skynet/3rd/lua/lstrlib.c	/^  Kfloat,	\/* single-precision floating-point numbers *\/$/;"	e	enum:KOption	file:
Kint	skynet/3rd/lua/lstrlib.c	/^  Kint,		\/* signed integers *\/$/;"	e	enum:KOption	file:
Knop	skynet/3rd/lua/lstrlib.c	/^  Knop		\/* no-op (configuration or spaces) *\/$/;"	e	enum:KOption	file:
Knumber	skynet/3rd/lua/lstrlib.c	/^  Knumber,	\/* Lua "native" floating-point numbers *\/$/;"	e	enum:KOption	file:
Kpaddalign	skynet/3rd/lua/lstrlib.c	/^  Kpaddalign,	\/* padding for alignment *\/$/;"	e	enum:KOption	file:
Kpadding	skynet/3rd/lua/lstrlib.c	/^  Kpadding,	\/* padding *\/$/;"	e	enum:KOption	file:
Kstring	skynet/3rd/lua/lstrlib.c	/^  Kstring,	\/* strings with prefixed length *\/$/;"	e	enum:KOption	file:
Kuint	skynet/3rd/lua/lstrlib.c	/^  Kuint,	\/* unsigned integers *\/$/;"	e	enum:KOption	file:
Kzstr	skynet/3rd/lua/lstrlib.c	/^  Kzstr,	\/* zero-terminated strings *\/$/;"	e	enum:KOption	file:
L	skynet/3rd/lpeg/lpcap.h	/^  lua_State *L;$/;"	m	struct:CapState
L	skynet/3rd/lpeg/lpcode.c	/^  lua_State *L;$/;"	m	struct:CompileState	file:
L	skynet/3rd/lua/lauxlib.c	/^	lua_State *L;$/;"	m	struct:codecache	file:
L	skynet/3rd/lua/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	skynet/3rd/lua/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon9	file:
L	skynet/3rd/lua/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	skynet/3rd/lua/lobject.c	/^  lua_State *L;$/;"	m	struct:BuffFS	file:
L	skynet/3rd/lua/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:
L	skynet/3rd/lua/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	skynet/3rd/lua/ltests.c	/^struct Aux { jmp_buf jb; const char *paniccode; lua_State *L; };$/;"	m	struct:Aux	file:
L	skynet/3rd/lua/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon37	file:
L	skynet/3rd/lua/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
L	skynet/lualib-src/lua-sharedata.c	/^	lua_State * L;$/;"	m	struct:context	file:
L	skynet/lualib-src/lua-sharedata.c	/^	lua_State * L;$/;"	m	struct:table	file:
L	skynet/lualib-src/lua-sharetable.c	/^	lua_State *L;$/;"	m	struct:state_ud	file:
L	skynet/lualib-src/lua-skynet.c	/^	lua_State *L;$/;"	m	struct:callback_context	file:
L	skynet/lualib-src/sproto/lsproto.c	/^	lua_State *L;$/;"	m	struct:decode_ud	file:
L	skynet/lualib-src/sproto/lsproto.c	/^	lua_State *L;$/;"	m	struct:encode_ud	file:
L	skynet/service-src/service_snlua.c	/^	lua_State * L;$/;"	m	struct:snlua	file:
L	skynet/skynet-src/skynet_env.c	/^	lua_State *L;$/;"	m	struct:skynet_env	file:
LARGE_PAGE_NODE	skynet/lualib-src/lua-socket.c	25;"	d	file:
LClosure	skynet/3rd/lua/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	skynet/3rd/lua/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDFLAGS	skynet/3rd/lua/makefile	/^LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)$/;"	m
LEFTROTATE	skynet/lualib-src/lua-crypt.c	626;"	d	file:
LEVELS1	skynet/3rd/lua/lauxlib.c	43;"	d	file:
LEVELS2	skynet/3rd/lua/lauxlib.c	44;"	d	file:
LEfloatint	skynet/3rd/lua/lvm.c	/^l_sinline int LEfloatint (lua_Number f, lua_Integer i) {$/;"	f
LEintfloat	skynet/3rd/lua/lvm.c	/^l_sinline int LEintfloat (lua_Integer i, lua_Number f) {$/;"	f
LEnum	skynet/3rd/lua/lvm.c	/^l_sinline int LEnum (const TValue *l, const TValue *r) {$/;"	f
LFIELDS_PER_FLUSH	skynet/3rd/lua/lopcodes.h	403;"	d
LG	skynet/3rd/lua/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	skynet/3rd/lua/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	skynet/3rd/lua/lparser.c	/^struct LHS_assign {$/;"	s	file:
LHs	skynet/lualib-src/lua-crypt.c	/^static uint32_t LHs[16] = {$/;"	v	file:
LIBNAME	skynet/3rd/lpeg/makefile	/^LIBNAME = lpeg$/;"	m
LIBS	skynet/3rd/lua/makefile	/^LIBS= -lm $(SYSLIBS) $(MYLIBS)$/;"	m
LIB_FAIL	skynet/3rd/lua/loadlib.c	233;"	d	file:
LIB_FAIL	skynet/3rd/lua/loadlib.c	234;"	d	file:
LIB_FAIL	skynet/3rd/lua/loadlib.c	64;"	d	file:
LIB_O	skynet/3rd/lua/makefile	/^LIB_O=	lauxlib.o lbaselib.o lcorolib.o ldblib.o liolib.o lmathlib.o loadlib.o loslib.o lstrlib.o ltablib.o lutf8lib.o linit.o$/;"	m
LIMLINEDIFF	skynet/3rd/lua/lcode.c	319;"	d	file:
LL	skynet/3rd/lua/llimits.h	70;"	d
LOG_MESSAGE_SIZE	skynet/skynet-src/skynet_error.c	11;"	d	file:
LStream	skynet/3rd/lua/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LTfloatint	skynet/3rd/lua/lvm.c	/^l_sinline int LTfloatint (lua_Number f, lua_Integer i) {$/;"	f
LTintfloat	skynet/3rd/lua/lvm.c	/^l_sinline int LTintfloat (lua_Integer i, lua_Number f) {$/;"	f
LTnum	skynet/3rd/lua/lvm.c	/^l_sinline int LTnum (const TValue *l, const TValue *r) {$/;"	f
LUAC_DATA	skynet/3rd/lua/lundump.h	16;"	d
LUAC_FORMAT	skynet/3rd/lua/lundump.h	27;"	d
LUAC_INT	skynet/3rd/lua/lundump.h	18;"	d
LUAC_NUM	skynet/3rd/lua/lundump.h	19;"	d
LUAC_O	skynet/3rd/lua/makefile	/^LUAC_O=	luac.o$/;"	m
LUAC_T	skynet/3rd/lua/makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	skynet/3rd/lua/lundump.h	25;"	d
LUADIR	skynet/3rd/lpeg/makefile	/^LUADIR = ..\/lua\/$/;"	m
LUAI_ASSERT	skynet/3rd/lua/ltests.h	23;"	d
LUAI_DDEC	skynet/3rd/lua/luaconf.h	321;"	d
LUAI_DDEC	skynet/3rd/lua/onelua.c	53;"	d	file:
LUAI_DDEC	skynet/3rd/lua/onelua.c	56;"	d	file:
LUAI_DDEF	skynet/3rd/lua/luaconf.h	322;"	d
LUAI_DDEF	skynet/3rd/lua/onelua.c	54;"	d	file:
LUAI_DDEF	skynet/3rd/lua/onelua.c	57;"	d	file:
LUAI_FUNC	skynet/3rd/lua/luaconf.h	316;"	d
LUAI_FUNC	skynet/3rd/lua/luaconf.h	318;"	d
LUAI_FUNC	skynet/3rd/lua/onelua.c	52;"	d	file:
LUAI_FUNC	skynet/3rd/lua/onelua.c	55;"	d	file:
LUAI_GCMUL	skynet/3rd/lua/lgc.h	143;"	d
LUAI_GCPAUSE	skynet/3rd/lua/lgc.h	134;"	d
LUAI_GCSTEPSIZE	skynet/3rd/lua/lgc.h	146;"	d
LUAI_GENMAJORMUL	skynet/3rd/lua/lgc.h	130;"	d
LUAI_GENMINORMUL	skynet/3rd/lua/lgc.h	131;"	d
LUAI_IS32INT	skynet/3rd/lua/luaconf.h	82;"	d
LUAI_MAXALIGN	skynet/3rd/lua/lauxlib.h	/^    LUAI_MAXALIGN;  \/* ensure maximum alignment for buffer *\/$/;"	m	union:luaL_Buffer::__anon8
LUAI_MAXALIGN	skynet/3rd/lua/lobject.h	/^  LUAI_MAXALIGN;  \/* ensures maximum alignment for udata bytes *\/$/;"	m	union:UValue
LUAI_MAXALIGN	skynet/3rd/lua/lobject.h	/^  union {LUAI_MAXALIGN;} bindata;$/;"	m	union:Udata0::__anon16
LUAI_MAXALIGN	skynet/3rd/lua/ltests.c	/^  LUAI_MAXALIGN;$/;"	m	union:Header	file:
LUAI_MAXALIGN	skynet/3rd/lua/luaconf.h	773;"	d
LUAI_MAXCCALLS	skynet/3rd/lua/llimits.h	255;"	d
LUAI_MAXCCALLS	skynet/3rd/lua/ltests.h	141;"	d
LUAI_MAXCCALLS	skynet/3rd/lua/ltests.h	142;"	d
LUAI_MAXSHORTLEN	skynet/3rd/lua/llimits.h	216;"	d
LUAI_MAXSTACK	skynet/3rd/lua/ltests.h	136;"	d
LUAI_MAXSTACK	skynet/3rd/lua/ltests.h	137;"	d
LUAI_MAXSTACK	skynet/3rd/lua/luaconf.h	740;"	d
LUAI_MAXSTACK	skynet/3rd/lua/luaconf.h	742;"	d
LUAI_THROW	skynet/3rd/lua/ldo.c	58;"	d	file:
LUAI_THROW	skynet/3rd/lua/ldo.c	66;"	d	file:
LUAI_THROW	skynet/3rd/lua/ldo.c	73;"	d	file:
LUAI_TRY	skynet/3rd/lua/ldo.c	59;"	d	file:
LUAI_TRY	skynet/3rd/lua/ldo.c	67;"	d	file:
LUAI_TRY	skynet/3rd/lua/ldo.c	74;"	d	file:
LUAI_UACINT	skynet/3rd/lua/luaconf.h	502;"	d
LUAI_UACNUMBER	skynet/3rd/lua/luaconf.h	437;"	d
LUAI_UACNUMBER	skynet/3rd/lua/luaconf.h	453;"	d
LUAI_UACNUMBER	skynet/3rd/lua/luaconf.h	468;"	d
LUAI_USER_ALIGNMENT_T	skynet/3rd/lua/ltests.h	124;"	d
LUAI_USER_ALIGNMENT_T	skynet/3rd/lua/ltests.h	125;"	d
LUALIB_API	skynet/3rd/lua/luaconf.h	296;"	d
LUAL_BUFFERSIZE	skynet/3rd/lua/ltests.h	116;"	d
LUAL_BUFFERSIZE	skynet/3rd/lua/ltests.h	117;"	d
LUAL_BUFFERSIZE	skynet/3rd/lua/luaconf.h	766;"	d
LUAL_NUMSIZES	skynet/3rd/lua/lauxlib.h	44;"	d
LUAL_PACKPADBYTE	skynet/3rd/lua/lstrlib.c	1392;"	d	file:
LUAMOD_API	skynet/3rd/lua/luaconf.h	297;"	d
LUA_32BITS	skynet/3rd/lua/luaconf.h	125;"	d
LUA_A	skynet/3rd/lua/makefile	/^LUA_A=	liblua.a$/;"	m
LUA_API	skynet/3rd/lua/luaconf.h	281;"	d
LUA_API	skynet/3rd/lua/luaconf.h	283;"	d
LUA_API	skynet/3rd/lua/luaconf.h	288;"	d
LUA_AUTHORS	skynet/3rd/lua/lua.h	29;"	d
LUA_C89_NUMBERS	skynet/3rd/lua/luaconf.h	134;"	d
LUA_C89_NUMBERS	skynet/3rd/lua/luaconf.h	136;"	d
LUA_CACHELIB	skynet/3rd/lua/lualib.h	47;"	d
LUA_CDIR	skynet/3rd/lua/luaconf.h	206;"	d
LUA_CDIR	skynet/3rd/lua/luaconf.h	228;"	d
LUA_CLIB	skynet/Makefile	/^LUA_CLIB = skynet \\$/;"	m
LUA_CLIB_PATH	skynet/Makefile	/^LUA_CLIB_PATH ?= luaclib$/;"	m
LUA_CLIB_SKYNET	skynet/Makefile	/^LUA_CLIB_SKYNET = \\$/;"	m
LUA_COLIBNAME	skynet/3rd/lua/lualib.h	20;"	d
LUA_COMPAT_APIINTCASTS	skynet/3rd/lua/luaconf.h	355;"	d
LUA_COMPAT_LT_LE	skynet/3rd/lua/ltests.h	16;"	d
LUA_COMPAT_LT_LE	skynet/3rd/lua/luaconf.h	362;"	d
LUA_COMPAT_MATHLIB	skynet/3rd/lua/ltests.h	15;"	d
LUA_COMPAT_MATHLIB	skynet/3rd/lua/luaconf.h	346;"	d
LUA_COPYRIGHT	skynet/3rd/lua/lua.h	28;"	d
LUA_CORE	skynet/3rd/lua/lapi.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lcode.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lctype.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ldebug.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ldo.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ldump.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lfunc.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lgc.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/llex.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lmem.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lobject.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lopcodes.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lparser.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lstate.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lstring.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ltable.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ltests.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/ltm.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/luac.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lundump.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lvm.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/lzio.c	8;"	d	file:
LUA_CORE	skynet/3rd/lua/onelua.c	45;"	d	file:
LUA_CPATH_DEFAULT	skynet/3rd/lua/luaconf.h	218;"	d
LUA_CPATH_DEFAULT	skynet/3rd/lua/luaconf.h	238;"	d
LUA_CPATH_VAR	skynet/3rd/lua/loadlib.c	277;"	d	file:
LUA_CSUBSEP	skynet/3rd/lua/loadlib.c	43;"	d	file:
LUA_DBLIBNAME	skynet/3rd/lua/lualib.h	41;"	d
LUA_DEBUG	skynet/3rd/lua/ltests.h	19;"	d
LUA_DIRSEP	skynet/3rd/lua/luaconf.h	253;"	d
LUA_DIRSEP	skynet/3rd/lua/luaconf.h	255;"	d
LUA_DL_DLL	skynet/3rd/lua/luaconf.h	56;"	d
LUA_ENV	skynet/3rd/lua/llex.h	24;"	d
LUA_ERRERR	skynet/3rd/lua/lua.h	54;"	d
LUA_ERRFILE	skynet/3rd/lua/lauxlib.h	27;"	d
LUA_ERRMEM	skynet/3rd/lua/lua.h	53;"	d
LUA_ERRRUN	skynet/3rd/lua/lua.h	51;"	d
LUA_ERRSYNTAX	skynet/3rd/lua/lua.h	52;"	d
LUA_EXEC_DIR	skynet/3rd/lua/luaconf.h	186;"	d
LUA_EXTRASPACE	skynet/3rd/lua/ltests.h	83;"	d
LUA_EXTRASPACE	skynet/3rd/lua/ltests.h	84;"	d
LUA_EXTRASPACE	skynet/3rd/lua/luaconf.h	751;"	d
LUA_FILEHANDLE	skynet/3rd/lua/lauxlib.h	244;"	d
LUA_FLOAT_DEFAULT	skynet/3rd/lua/luaconf.h	119;"	d
LUA_FLOAT_DOUBLE	skynet/3rd/lua/luaconf.h	113;"	d
LUA_FLOAT_FLOAT	skynet/3rd/lua/luaconf.h	112;"	d
LUA_FLOAT_LONGDOUBLE	skynet/3rd/lua/luaconf.h	114;"	d
LUA_FLOAT_TYPE	skynet/3rd/lua/luaconf.h	149;"	d
LUA_FLOAT_TYPE	skynet/3rd/lua/luaconf.h	156;"	d
LUA_FLOAT_TYPE	skynet/3rd/lua/luaconf.h	162;"	d
LUA_FLOORN2I	skynet/3rd/lua/lvm.h	36;"	d
LUA_GCCOLLECT	skynet/3rd/lua/lua.h	336;"	d
LUA_GCCOUNT	skynet/3rd/lua/lua.h	337;"	d
LUA_GCCOUNTB	skynet/3rd/lua/lua.h	338;"	d
LUA_GCGEN	skynet/3rd/lua/lua.h	343;"	d
LUA_GCINC	skynet/3rd/lua/lua.h	344;"	d
LUA_GCISRUNNING	skynet/3rd/lua/lua.h	342;"	d
LUA_GCRESTART	skynet/3rd/lua/lua.h	335;"	d
LUA_GCSETPAUSE	skynet/3rd/lua/lua.h	340;"	d
LUA_GCSETSTEPMUL	skynet/3rd/lua/lua.h	341;"	d
LUA_GCSTEP	skynet/3rd/lua/lua.h	339;"	d
LUA_GCSTOP	skynet/3rd/lua/lua.h	334;"	d
LUA_GNAME	skynet/3rd/lua/lauxlib.h	20;"	d
LUA_HOOKCALL	skynet/3rd/lua/lua.h	445;"	d
LUA_HOOKCOUNT	skynet/3rd/lua/lua.h	448;"	d
LUA_HOOKLINE	skynet/3rd/lua/lua.h	447;"	d
LUA_HOOKRET	skynet/3rd/lua/lua.h	446;"	d
LUA_HOOKTAILCALL	skynet/3rd/lua/lua.h	449;"	d
LUA_IDSIZE	skynet/3rd/lua/luaconf.h	759;"	d
LUA_IGMARK	skynet/3rd/lua/loadlib.c	32;"	d	file:
LUA_INC	skynet/Makefile	/^LUA_INC ?= 3rd\/lua$/;"	m
LUA_INITVARVERSION	skynet/3rd/lua/lua.c	32;"	d	file:
LUA_INIT_VAR	skynet/3rd/lua/lua.c	29;"	d	file:
LUA_INTEGER	skynet/3rd/lua/luaconf.h	518;"	d
LUA_INTEGER	skynet/3rd/lua/luaconf.h	528;"	d
LUA_INTEGER	skynet/3rd/lua/luaconf.h	542;"	d
LUA_INTEGER	skynet/3rd/lua/luaconf.h	553;"	d
LUA_INTEGER_FMT	skynet/3rd/lua/luaconf.h	500;"	d
LUA_INTEGER_FRMLEN	skynet/3rd/lua/luaconf.h	519;"	d
LUA_INTEGER_FRMLEN	skynet/3rd/lua/luaconf.h	529;"	d
LUA_INTEGER_FRMLEN	skynet/3rd/lua/luaconf.h	543;"	d
LUA_INTEGER_FRMLEN	skynet/3rd/lua/luaconf.h	554;"	d
LUA_INT_DEFAULT	skynet/3rd/lua/luaconf.h	118;"	d
LUA_INT_INT	skynet/3rd/lua/luaconf.h	107;"	d
LUA_INT_LONG	skynet/3rd/lua/luaconf.h	108;"	d
LUA_INT_LONGLONG	skynet/3rd/lua/luaconf.h	109;"	d
LUA_INT_TYPE	skynet/3rd/lua/luaconf.h	145;"	d
LUA_INT_TYPE	skynet/3rd/lua/luaconf.h	147;"	d
LUA_INT_TYPE	skynet/3rd/lua/luaconf.h	155;"	d
LUA_INT_TYPE	skynet/3rd/lua/luaconf.h	161;"	d
LUA_IOLIBNAME	skynet/3rd/lua/lualib.h	26;"	d
LUA_KCONTEXT	skynet/3rd/lua/luaconf.h	644;"	d
LUA_KCONTEXT	skynet/3rd/lua/luaconf.h	650;"	d
LUA_KCONTEXT	skynet/3rd/lua/luaconf.h	651;"	d
LUA_LDIR	skynet/3rd/lua/luaconf.h	205;"	d
LUA_LDIR	skynet/3rd/lua/luaconf.h	227;"	d
LUA_LIB	skynet/3rd/lua/lauxlib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/lbaselib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/lcorolib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/ldblib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/linit.c	9;"	d	file:
LUA_LIB	skynet/3rd/lua/liolib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/lmathlib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/loadlib.c	12;"	d	file:
LUA_LIB	skynet/3rd/lua/loslib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/lstrlib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/ltablib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/lutf8lib.c	8;"	d	file:
LUA_LIB	skynet/3rd/lua/onelua.c	46;"	d	file:
LUA_LIB	skynet/Makefile	/^LUA_LIB ?= $(LUA_STATICLIB)$/;"	m
LUA_LIB	skynet/lualib-src/lsha1.c	85;"	d	file:
LUA_LIB	skynet/lualib-src/lua-bson.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-clientsocket.c	5;"	d	file:
LUA_LIB	skynet/lualib-src/lua-cluster.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-crypt.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-debugchannel.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-memory.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-mongo.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-multicast.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-netpack.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-seri.c	5;"	d	file:
LUA_LIB	skynet/lualib-src/lua-sharedata.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-sharetable.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-skynet.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-socket.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/lua-stm.c	1;"	d	file:
LUA_LIB	skynet/lualib-src/sproto/lsproto.c	1;"	d	file:
LUA_LLE_FLAGS	skynet/3rd/lua/loadlib.c	166;"	d	file:
LUA_LOADED_TABLE	skynet/3rd/lua/lauxlib.h	31;"	d
LUA_LOADLIBNAME	skynet/3rd/lua/lualib.h	44;"	d
LUA_LSUBSEP	skynet/3rd/lua/loadlib.c	47;"	d	file:
LUA_MASKCALL	skynet/3rd/lua/lua.h	455;"	d
LUA_MASKCOUNT	skynet/3rd/lua/lua.h	458;"	d
LUA_MASKLINE	skynet/3rd/lua/lua.h	457;"	d
LUA_MASKRET	skynet/3rd/lua/lua.h	456;"	d
LUA_MATHLIBNAME	skynet/3rd/lua/lualib.h	38;"	d
LUA_MAXCAPTURES	skynet/3rd/lua/lstrlib.c	35;"	d	file:
LUA_MAXINPUT	skynet/3rd/lua/lua.c	392;"	d	file:
LUA_MAXINTEGER	skynet/3rd/lua/luaconf.h	521;"	d
LUA_MAXINTEGER	skynet/3rd/lua/luaconf.h	531;"	d
LUA_MAXINTEGER	skynet/3rd/lua/luaconf.h	545;"	d
LUA_MAXINTEGER	skynet/3rd/lua/luaconf.h	556;"	d
LUA_MAXUNSIGNED	skynet/3rd/lua/luaconf.h	524;"	d
LUA_MAXUNSIGNED	skynet/3rd/lua/luaconf.h	534;"	d
LUA_MAXUNSIGNED	skynet/3rd/lua/luaconf.h	548;"	d
LUA_MAXUNSIGNED	skynet/3rd/lua/luaconf.h	559;"	d
LUA_MINBUFFER	skynet/3rd/lua/llimits.h	244;"	d
LUA_MININTEGER	skynet/3rd/lua/luaconf.h	522;"	d
LUA_MININTEGER	skynet/3rd/lua/luaconf.h	532;"	d
LUA_MININTEGER	skynet/3rd/lua/luaconf.h	546;"	d
LUA_MININTEGER	skynet/3rd/lua/luaconf.h	557;"	d
LUA_MINSTACK	skynet/3rd/lua/lua.h	80;"	d
LUA_MULTRET	skynet/3rd/lua/lua.h	36;"	d
LUA_NOREF	skynet/3rd/lua/lauxlib.h	86;"	d
LUA_NUMBER	skynet/3rd/lua/luaconf.h	433;"	d
LUA_NUMBER	skynet/3rd/lua/luaconf.h	449;"	d
LUA_NUMBER	skynet/3rd/lua/luaconf.h	464;"	d
LUA_NUMBER_FMT	skynet/3rd/lua/luaconf.h	440;"	d
LUA_NUMBER_FMT	skynet/3rd/lua/luaconf.h	456;"	d
LUA_NUMBER_FMT	skynet/3rd/lua/luaconf.h	471;"	d
LUA_NUMBER_FRMLEN	skynet/3rd/lua/luaconf.h	439;"	d
LUA_NUMBER_FRMLEN	skynet/3rd/lua/luaconf.h	455;"	d
LUA_NUMBER_FRMLEN	skynet/3rd/lua/luaconf.h	470;"	d
LUA_NUMTAGS	skynet/3rd/lua/lua.h	431;"	d
LUA_NUMTYPES	skynet/3rd/lua/lua.h	75;"	d
LUA_O	skynet/3rd/lua/makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	skynet/3rd/lua/loadlib.c	55;"	d	file:
LUA_OK	skynet/3rd/lua/lua.h	49;"	d
LUA_OPADD	skynet/3rd/lua/lua.h	216;"	d
LUA_OPBAND	skynet/3rd/lua/lua.h	223;"	d
LUA_OPBNOT	skynet/3rd/lua/lua.h	229;"	d
LUA_OPBOR	skynet/3rd/lua/lua.h	224;"	d
LUA_OPBXOR	skynet/3rd/lua/lua.h	225;"	d
LUA_OPDIV	skynet/3rd/lua/lua.h	221;"	d
LUA_OPEQ	skynet/3rd/lua/lua.h	233;"	d
LUA_OPIDIV	skynet/3rd/lua/lua.h	222;"	d
LUA_OPLE	skynet/3rd/lua/lua.h	235;"	d
LUA_OPLT	skynet/3rd/lua/lua.h	234;"	d
LUA_OPMOD	skynet/3rd/lua/lua.h	219;"	d
LUA_OPMUL	skynet/3rd/lua/lua.h	218;"	d
LUA_OPPOW	skynet/3rd/lua/lua.h	220;"	d
LUA_OPSHL	skynet/3rd/lua/lua.h	226;"	d
LUA_OPSHR	skynet/3rd/lua/lua.h	227;"	d
LUA_OPSUB	skynet/3rd/lua/lua.h	217;"	d
LUA_OPUNM	skynet/3rd/lua/lua.h	228;"	d
LUA_OSLIBNAME	skynet/3rd/lua/lualib.h	29;"	d
LUA_PATH_DEFAULT	skynet/3rd/lua/luaconf.h	210;"	d
LUA_PATH_DEFAULT	skynet/3rd/lua/luaconf.h	231;"	d
LUA_PATH_MARK	skynet/3rd/lua/luaconf.h	185;"	d
LUA_PATH_SEP	skynet/3rd/lua/luaconf.h	184;"	d
LUA_PATH_VAR	skynet/3rd/lua/loadlib.c	273;"	d	file:
LUA_POF	skynet/3rd/lua/loadlib.c	52;"	d	file:
LUA_PRELOAD_TABLE	skynet/3rd/lua/lauxlib.h	35;"	d
LUA_PROGNAME	skynet/3rd/lua/lua.c	25;"	d	file:
LUA_PROMPT	skynet/3rd/lua/lua.c	387;"	d	file:
LUA_PROMPT2	skynet/3rd/lua/lua.c	388;"	d	file:
LUA_RAND32	skynet/3rd/lua/ltests.h	44;"	d
LUA_REFNIL	skynet/3rd/lua/lauxlib.h	87;"	d
LUA_REGISTRYINDEX	skynet/3rd/lua/lua.h	44;"	d
LUA_RELEASE	skynet/3rd/lua/lua.h	27;"	d
LUA_RIDX_GLOBALS	skynet/3rd/lua/lua.h	85;"	d
LUA_RIDX_LAST	skynet/3rd/lua/lua.h	86;"	d
LUA_RIDX_MAINTHREAD	skynet/3rd/lua/lua.h	84;"	d
LUA_ROOT	skynet/3rd/lua/luaconf.h	226;"	d
LUA_SERIALIZE_H	skynet/lualib-src/lua-seri.h	2;"	d
LUA_SHRDIR	skynet/3rd/lua/luaconf.h	207;"	d
LUA_SIGNATURE	skynet/3rd/lua/lua.h	33;"	d
LUA_STATICLIB	skynet/Makefile	/^LUA_STATICLIB := 3rd\/lua\/liblua.a$/;"	m
LUA_STRFTIMEOPTIONS	skynet/3rd/lua/loslib.c	34;"	d	file:
LUA_STRFTIMEOPTIONS	skynet/3rd/lua/loslib.c	37;"	d	file:
LUA_STRFTIMEOPTIONS	skynet/3rd/lua/loslib.c	39;"	d	file:
LUA_STRLIBNAME	skynet/3rd/lua/lualib.h	32;"	d
LUA_T	skynet/3rd/lua/makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	skynet/3rd/lua/lualib.h	23;"	d
LUA_TBOOLEAN	skynet/3rd/lua/lua.h	66;"	d
LUA_TDEADKEY	skynet/3rd/lua/lobject.h	24;"	d
LUA_TFUNCTION	skynet/3rd/lua/lua.h	71;"	d
LUA_TLIGHTUSERDATA	skynet/3rd/lua/lua.h	67;"	d
LUA_TMPNAMBUFSIZE	skynet/3rd/lua/loslib.c	108;"	d	file:
LUA_TMPNAMBUFSIZE	skynet/3rd/lua/loslib.c	123;"	d	file:
LUA_TMPNAMTEMPLATE	skynet/3rd/lua/loslib.c	111;"	d	file:
LUA_TNIL	skynet/3rd/lua/lua.h	65;"	d
LUA_TNONE	skynet/3rd/lua/lua.h	63;"	d
LUA_TNUMBER	skynet/3rd/lua/lua.h	68;"	d
LUA_TOTALTYPES	skynet/3rd/lua/lobject.h	31;"	d
LUA_TPROTO	skynet/3rd/lua/lobject.h	23;"	d
LUA_TSTRING	skynet/3rd/lua/lua.h	69;"	d
LUA_TTABLE	skynet/3rd/lua/lua.h	70;"	d
LUA_TTHREAD	skynet/3rd/lua/lua.h	73;"	d
LUA_TUPVAL	skynet/3rd/lua/lobject.h	22;"	d
LUA_TUSERDATA	skynet/3rd/lua/lua.h	72;"	d
LUA_UNSIGNED	skynet/3rd/lua/luaconf.h	511;"	d
LUA_USE_C89	skynet/3rd/lua/luaconf.h	57;"	d
LUA_USE_CTYPE	skynet/3rd/lua/lctype.h	23;"	d
LUA_USE_CTYPE	skynet/3rd/lua/lctype.h	26;"	d
LUA_USE_DLOPEN	skynet/3rd/lua/luaconf.h	63;"	d
LUA_USE_DLOPEN	skynet/3rd/lua/luaconf.h	69;"	d
LUA_USE_DLOPEN	skynet/3rd/lua/luaconf.h	75;"	d
LUA_USE_JUMPTABLE	skynet/3rd/lua/ltests.h	40;"	d
LUA_USE_JUMPTABLE	skynet/3rd/lua/lvm.c	40;"	d	file:
LUA_USE_JUMPTABLE	skynet/3rd/lua/lvm.c	42;"	d	file:
LUA_USE_POSIX	skynet/3rd/lua/luaconf.h	62;"	d
LUA_USE_POSIX	skynet/3rd/lua/luaconf.h	68;"	d
LUA_USE_POSIX	skynet/3rd/lua/luaconf.h	74;"	d
LUA_USE_WINDOWS	skynet/3rd/lua/luaconf.h	51;"	d
LUA_UTF8LIBNAME	skynet/3rd/lua/lualib.h	35;"	d
LUA_VABSTKEY	skynet/3rd/lua/lobject.h	189;"	d
LUA_VCCL	skynet/3rd/lua/lobject.h	593;"	d
LUA_VDIR	skynet/3rd/lua/luaconf.h	199;"	d
LUA_VEMPTY	skynet/3rd/lua/lobject.h	186;"	d
LUA_VERSION	skynet/3rd/lua/lua.h	26;"	d
LUA_VERSION_MAJOR	skynet/3rd/lua/lua.h	19;"	d
LUA_VERSION_MINOR	skynet/3rd/lua/lua.h	20;"	d
LUA_VERSION_NUM	skynet/3rd/lua/lua.h	23;"	d
LUA_VERSION_RELEASE	skynet/3rd/lua/lua.h	21;"	d
LUA_VERSION_RELEASE_NUM	skynet/3rd/lua/lua.h	24;"	d
LUA_VERSUFFIX	skynet/3rd/lua/lualib.h	15;"	d
LUA_VFALSE	skynet/3rd/lua/lobject.h	239;"	d
LUA_VLCF	skynet/3rd/lua/lobject.h	592;"	d
LUA_VLCL	skynet/3rd/lua/lobject.h	591;"	d
LUA_VLIGHTUSERDATA	skynet/3rd/lua/lobject.h	430;"	d
LUA_VLNGSTR	skynet/3rd/lua/lobject.h	361;"	d
LUA_VNIL	skynet/3rd/lua/lobject.h	183;"	d
LUA_VNUMFLT	skynet/3rd/lua/lobject.h	324;"	d
LUA_VNUMINT	skynet/3rd/lua/lobject.h	323;"	d
LUA_VPROTO	skynet/3rd/lua/lobject.h	510;"	d
LUA_VSHRSTR	skynet/3rd/lua/lobject.h	360;"	d
LUA_VTABLE	skynet/3rd/lua/lobject.h	681;"	d
LUA_VTHREAD	skynet/3rd/lua/lobject.h	262;"	d
LUA_VTRUE	skynet/3rd/lua/lobject.h	240;"	d
LUA_VUPVAL	skynet/3rd/lua/lobject.h	587;"	d
LUA_VUSERDATA	skynet/3rd/lua/lobject.h	432;"	d
LUA_YIELD	skynet/3rd/lua/lua.h	50;"	d
LX	skynet/3rd/lua/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	skynet/3rd/lua/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	skynet/3rd/lua/lstrlib.c	382;"	d	file:
L_EXTRA	skynet/3rd/lua/ltests.h	/^struct L_EXTRA { int lock; int *plock; };$/;"	s
L_FMTFLAGSC	skynet/3rd/lua/lstrlib.c	1108;"	d	file:
L_FMTFLAGSF	skynet/3rd/lua/lstrlib.c	1096;"	d	file:
L_FMTFLAGSI	skynet/3rd/lua/lstrlib.c	1102;"	d	file:
L_FMTFLAGSU	skynet/3rd/lua/lstrlib.c	1105;"	d	file:
L_FMTFLAGSX	skynet/3rd/lua/lstrlib.c	1099;"	d	file:
L_INTHASBITS	skynet/3rd/lua/lopcodes.h	68;"	d
L_MAXLENNUM	skynet/3rd/lua/liolib.c	422;"	d	file:
L_MAXLENNUM	skynet/3rd/lua/lobject.c	220;"	d	file:
L_MODEEXT	skynet/3rd/lua/liolib.c	36;"	d	file:
L_NBFD	skynet/3rd/lua/lstrlib.c	1010;"	d	file:
L_P2I	skynet/3rd/lua/llimits.h	83;"	d
L_P2I	skynet/3rd/lua/llimits.h	85;"	d
L_P2I	skynet/3rd/lua/llimits.h	88;"	d
Labeldesc	skynet/3rd/lua/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	skynet/3rd/lua/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	skynet/3rd/lua/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	skynet/3rd/lua/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LexState	skynet/3rd/lua/llex.h	/^typedef struct LexState {$/;"	s
LexState	skynet/3rd/lua/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LoadF	skynet/3rd/lua/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	skynet/3rd/lua/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadS	skynet/3rd/lua/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	skynet/3rd/lua/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	skynet/3rd/lua/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon37	file:
LocVar	skynet/3rd/lua/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	skynet/3rd/lua/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
M	skynet/skynet-src/skynet_module.c	/^static struct modules * M = NULL;$/;"	v	typeref:struct:modules	file:
M.accept	skynet/lualib/http/websocket.lua	/^function M.accept(socket_id, handle, protocol, addr, options)$/;"	f
M.addrinfo	skynet/lualib/http/websocket.lua	/^function M.addrinfo(id)$/;"	f
M.close	skynet/lualib/http/websocket.lua	/^function M.close(id, code ,reason)$/;"	f
M.connect	skynet/lualib/http/websocket.lua	/^function M.connect(url, header, timeout)$/;"	f
M.init	skynet/lualib/skynet/require.lua	/^function M.init(f)$/;"	f
M.init_all	skynet/lualib/skynet/require.lua	/^function M.init_all()$/;"	f
M.parseheader	skynet/lualib/http/internal.lua	/^function M.parseheader(lines, from, header)$/;"	f
M.ping	skynet/lualib/http/websocket.lua	/^function M.ping(id)$/;"	f
M.read	skynet/lualib/http/websocket.lua	/^function M.read(id)$/;"	f
M.real_ip	skynet/lualib/http/websocket.lua	/^function M.real_ip(id)$/;"	f
M.recvchunkedbody	skynet/lualib/http/internal.lua	/^function M.recvchunkedbody(readbytes, bodylimit, header, body)$/;"	f
M.recvheader	skynet/lualib/http/internal.lua	/^function M.recvheader(readbytes, lines, header)$/;"	f
M.request	skynet/lualib/http/internal.lua	/^function M.request(interface, method, host, url, recvheader, header, content)$/;"	f
M.require	skynet/lualib/skynet/require.lua	/^	function M.require(name)$/;"	f
M.response	skynet/lualib/http/internal.lua	/^function M.response(interface, code, body, header)$/;"	f
M.response_stream	skynet/lualib/http/internal.lua	/^function M.response_stream(interface, code, body, header)$/;"	f
M.start	skynet/lualib/skynet/remotedebug.lua	/^function M.start(import, fd, handle)$/;"	f
M.write	skynet/lualib/http/websocket.lua	/^function M.write(id, data, fmt, masking_key)$/;"	f
MAKE_LUA	skynet/3rd/lua/onelua.c	9;"	d	file:
MALLOC	skynet/skynet-src/socket_server.c	241;"	d	file:
MALLOC_STATICLIB	skynet/Makefile	/^MALLOC_STATICLIB := $(JEMALLOC_STATICLIB)$/;"	m
MALLOC_STATICLIB	skynet/platform.mk	/^macosx : MALLOC_STATICLIB :=$/;"	m
MARK	skynet/3rd/lua/ltests.c	164;"	d	file:
MARKSIZE	skynet/3rd/lua/ltests.c	178;"	d	file:
MARKSIZE	skynet/3rd/lua/ltests.c	184;"	d	file:
MASK	skynet/3rd/lua-md5/md5.c	14;"	d	file:
MASK	skynet/3rd/lua/lctype.h	46;"	d
MASK0	skynet/3rd/lua/lopcodes.h	108;"	d
MASK1	skynet/3rd/lua/lopcodes.h	105;"	d
MAXABITS	skynet/3rd/lua/ltable.c	46;"	d	file:
MAXARGLINE	skynet/3rd/lua/liolib.c	352;"	d	file:
MAXARG_A	skynet/3rd/lua/lopcodes.h	95;"	d
MAXARG_Ax	skynet/3rd/lua/lopcodes.h	81;"	d
MAXARG_Ax	skynet/3rd/lua/lopcodes.h	83;"	d
MAXARG_B	skynet/3rd/lua/lopcodes.h	96;"	d
MAXARG_Bx	skynet/3rd/lua/lopcodes.h	72;"	d
MAXARG_Bx	skynet/3rd/lua/lopcodes.h	74;"	d
MAXARG_C	skynet/3rd/lua/lopcodes.h	97;"	d
MAXARG_sJ	skynet/3rd/lua/lopcodes.h	87;"	d
MAXARG_sJ	skynet/3rd/lua/lopcodes.h	89;"	d
MAXASIZE	skynet/3rd/lua/ltable.c	54;"	d	file:
MAXAUX	skynet/3rd/lpeg/lptypes.h	122;"	d
MAXBACK	skynet/3rd/lpeg/lptypes.h	52;"	d
MAXBEHIND	skynet/3rd/lpeg/lptypes.h	126;"	d
MAXBY10	skynet/3rd/lua/lobject.c	273;"	d	file:
MAXCCALLS	skynet/3rd/lua/lstrlib.c	378;"	d	file:
MAXDELTA	skynet/3rd/lua/lfunc.c	162;"	d	file:
MAXHBITS	skynet/3rd/lua/ltable.c	60;"	d	file:
MAXHSIZE	skynet/3rd/lua/ltable.c	68;"	d	file:
MAXINDEXRK	skynet/3rd/lua/lopcodes.h	175;"	d
MAXINDT	skynet/3rd/lpeg/lpcap.h	39;"	d
MAXINTFITSF	skynet/3rd/lua/lvm.c	71;"	d	file:
MAXINTSIZE	skynet/3rd/lua/lstrlib.c	1396;"	d	file:
MAXIWTHABS	skynet/3rd/lua/ldebug.h	35;"	d
MAXIWTHABS	skynet/3rd/lua/ltests.h	119;"	d
MAXKEY	skynet/3rd/lua-md5/md5lib.c	62;"	d	file:
MAXLASTD	skynet/3rd/lua/lobject.c	274;"	d	file:
MAXLIM	skynet/3rd/lpeg/lptree.c	1277;"	d	file:
MAXLOP	skynet/3rd/lpeg/lpcap.h	76;"	d
MAXMISS	skynet/3rd/lua/lfunc.h	42;"	d
MAXNEWSIZE	skynet/3rd/lpeg/lpvm.c	92;"	d	file:
MAXNUMBER2STR	skynet/3rd/lua/lobject.c	349;"	d	file:
MAXOFF	skynet/3rd/lpeg/lptypes.h	121;"	d
MAXPATTSIZE	skynet/3rd/lpeg/lptypes.h	130;"	d
MAXRECLEVEL	skynet/3rd/lpeg/lpcap.c	498;"	d	file:
MAXREGS	skynet/3rd/lua/lcode.c	35;"	d	file:
MAXRULES	skynet/3rd/lpeg/lptypes.h	58;"	d
MAXSIGDIG	skynet/3rd/lua/lobject.c	159;"	d	file:
MAXSIZE	skynet/3rd/lua/lstrlib.c	49;"	d	file:
MAXSTACKIDX	skynet/3rd/lpeg/lptypes.h	22;"	d
MAXSTRCAPS	skynet/3rd/lpeg/lpcap.c	375;"	d	file:
MAXSTRTB	skynet/3rd/lua/lstring.c	31;"	d	file:
MAXTAGLOOP	skynet/3rd/lua/lvm.c	49;"	d	file:
MAXUNICODE	skynet/3rd/lua/lutf8lib.c	24;"	d	file:
MAXUNICODE	skynet/lualib-src/lua-bson.c	203;"	d	file:
MAXUPVAL	skynet/3rd/lua/lfunc.h	29;"	d
MAXUTF	skynet/3rd/lua/lutf8lib.c	26;"	d	file:
MAXVARS	skynet/3rd/lua/lparser.c	35;"	d	file:
MAX_COOKIE	skynet/lualib-src/lua-seri.c	34;"	d	file:
MAX_DEPTH	skynet/lualib-src/lua-bson.c	18;"	d	file:
MAX_DEPTH	skynet/lualib-src/lua-seri.c	38;"	d	file:
MAX_EVENT	skynet/skynet-src/socket_server.c	23;"	d	file:
MAX_FORMAT	skynet/3rd/lua/lstrlib.c	1119;"	d	file:
MAX_GLOBALSPROTO	skynet/lualib-src/sproto/lsproto.c	12;"	d	file:
MAX_GLOBAL_MQ	skynet/skynet-src/skynet_mq.c	13;"	d	file:
MAX_INFO	skynet/skynet-src/socket_server.c	20;"	d	file:
MAX_INT	skynet/3rd/lua/llimits.h	53;"	d
MAX_ITEM	skynet/3rd/lua/lstrlib.c	1089;"	d	file:
MAX_ITEMF	skynet/3rd/lua/lstrlib.c	1078;"	d	file:
MAX_LEVEL	skynet/lualib-src/lua-skynet.c	428;"	d	file:
MAX_LMEM	skynet/3rd/lua/llimits.h	50;"	d
MAX_LUMEM	skynet/3rd/lua/llimits.h	48;"	d
MAX_MODULE_TYPE	skynet/skynet-src/skynet_module.c	13;"	d	file:
MAX_NUMBER	skynet/lualib-src/lua-bson.c	16;"	d	file:
MAX_SIZE	skynet/3rd/lua/llimits.h	44;"	d
MAX_SIZET	skynet/3rd/lua/lauxlib.c	32;"	d	file:
MAX_SIZET	skynet/3rd/lua/llimits.h	41;"	d
MAX_SIZET	skynet/3rd/lua/lstrlib.c	47;"	d	file:
MAX_SLOT_SIZE	skynet/skynet-src/skynet_handle.c	12;"	d	file:
MAX_SOCKET	skynet/skynet-src/socket_server.c	36;"	d	file:
MAX_SOCKET_P	skynet/skynet-src/socket_server.c	22;"	d	file:
MAX_UDP_PACKAGE	skynet/skynet-src/socket_server.c	51;"	d	file:
MC	skynet/3rd/lua/lstrlib.c	1402;"	d	file:
MEMERRMSG	skynet/3rd/lua/lstring.h	19;"	d
MEMORY_ALLOCTAG	skynet/skynet-src/malloc_hook.c	15;"	d	file:
MEMORY_FREETAG	skynet/skynet-src/malloc_hook.c	16;"	d	file:
MEMORY_WARNING_REPORT	skynet/service-src/service_snlua.c	24;"	d	file:
MESSAGEPOOL	skynet/service-src/databuffer.h	8;"	d
MESSAGE_TYPE_MASK	skynet/skynet-src/skynet_mq.h	15;"	d
MESSAGE_TYPE_SHIFT	skynet/skynet-src/skynet_mq.h	16;"	d
METANAME	skynet/lualib-src/lua-debugchannel.c	11;"	d	file:
MICROSEC	skynet/service-src/service_snlua.c	20;"	d	file:
MICROSEC	skynet/skynet-src/skynet_timer.c	285;"	d	file:
MINSIZEARRAY	skynet/3rd/lua/lmem.c	94;"	d	file:
MINSTRTABSIZE	skynet/3rd/lua/llimits.h	227;"	d
MINSTRTABSIZE	skynet/3rd/lua/ltests.h	118;"	d
MIN_READ_BUFFER	skynet/skynet-src/socket_server.c	24;"	d	file:
MQ_IN_GLOBAL	skynet/skynet-src/skynet_mq.c	18;"	d	file:
MQ_OVERLOAD	skynet/skynet-src/skynet_mq.c	19;"	d	file:
MSG.close	skynet/lualib/snax/gateserver.lua	/^	function MSG.close(fd)$/;"	f
MSG.error	skynet/lualib/snax/gateserver.lua	/^	function MSG.error(fd, msg)$/;"	f
MSG.init	skynet/lualib/snax/gateserver.lua	/^	function MSG.init(id, addr, port)$/;"	f
MSG.open	skynet/lualib/snax/gateserver.lua	/^	function MSG.open(fd, msg)$/;"	f
MSG.warning	skynet/lualib/snax/gateserver.lua	/^	function MSG.warning(fd, size)$/;"	f
MSGInvalid	skynet/3rd/lua/lutf8lib.c	29;"	d	file:
MSG_CHECKSUM_PRESENT	skynet/lualib-src/lua-mongo.c	/^	MSG_CHECKSUM_PRESENT = 1 << 0,$/;"	e	enum:__anon40	file:
MSG_EXHAUST_ALLOWED	skynet/lualib-src/lua-mongo.c	/^	MSG_EXHAUST_ALLOWED = 1 << 16,$/;"	e	enum:__anon40	file:
MSG_MORE_TO_COME	skynet/lualib-src/lua-mongo.c	/^	MSG_MORE_TO_COME = 1 << 1,$/;"	e	enum:__anon40	file:
MULTI_PART	skynet/lualib-src/lua-cluster.c	23;"	d	file:
MYCFLAGS	skynet/3rd/lua/makefile	/^MYCFLAGS= -I..\/..\/skynet-src -g$/;"	m
MYINT	skynet/3rd/lua/lundump.h	24;"	d
MYLDFLAGS	skynet/3rd/lua/makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	skynet/3rd/lua/makefile	/^MYLIBS=$/;"	m
MYOBJS	skynet/3rd/lua/makefile	/^MYOBJS=$/;"	m
MatchState	skynet/3rd/lua/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	skynet/3rd/lua/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	skynet/3rd/lua/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	skynet/3rd/lua/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
Memcontrol	skynet/3rd/lua/ltests.h	/^typedef struct Memcontrol {$/;"	s
Memcontrol	skynet/3rd/lua/ltests.h	/^} Memcontrol;$/;"	t	typeref:struct:Memcontrol
NANOSEC	skynet/service-src/service_snlua.c	19;"	d	file:
NANOSEC	skynet/skynet-src/skynet_timer.c	284;"	d	file:
NB	skynet/3rd/lua/lstrlib.c	1399;"	d	file:
NBITS	skynet/3rd/lua/lvm.c	768;"	d	file:
NBM	skynet/3rd/lua/lvm.c	58;"	d	file:
NDEBUG	skynet/3rd/lua/llimits.h	104;"	d
NODECACHE	skynet/lualib-src/lua-datasheet.c	5;"	d	file:
NOINST	skynet/3rd/lpeg/lpcode.c	14;"	d	file:
NONA	skynet/3rd/lua/lctype.c	22;"	d	file:
NONA	skynet/3rd/lua/lctype.c	24;"	d	file:
NO_JUMP	skynet/3rd/lua/lcode.h	20;"	d
NO_REG	skynet/3rd/lua/lopcodes.h	182;"	d
NT 	skynet/3rd/lpeg/re.lua	/^local function NT (n, b)$/;"	f
NUM_OPCODES	skynet/3rd/lua/lopcodes.h	313;"	d
NUM_RESERVED	skynet/3rd/lua/llex.h	46;"	d
Node	skynet/3rd/lua/lobject.h	/^typedef union Node {$/;"	u
Node	skynet/3rd/lua/lobject.h	/^} Node;$/;"	t	typeref:union:Node
NodeKey	skynet/3rd/lua/lobject.h	/^  struct NodeKey {$/;"	s	union:Node
OFFSET_sBx	skynet/3rd/lua/lopcodes.h	77;"	d
OFFSET_sC	skynet/3rd/lua/lopcodes.h	98;"	d
OFFSET_sJ	skynet/3rd/lua/lopcodes.h	92;"	d
OPR_ADD	skynet/3rd/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	skynet/3rd/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_BAND	skynet/3rd/lua/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BNOT	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_BOR	skynet/3rd/lua/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BXOR	skynet/3rd/lua/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_CONCAT	skynet/3rd/lua/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	skynet/3rd/lua/lcode.h	/^  OPR_DIV, OPR_IDIV,$/;"	e	enum:BinOpr
OPR_EQ	skynet/3rd/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	skynet/3rd/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	skynet/3rd/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_IDIV	skynet/3rd/lua/lcode.h	/^  OPR_DIV, OPR_IDIV,$/;"	e	enum:BinOpr
OPR_LE	skynet/3rd/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	skynet/3rd/lua/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	skynet/3rd/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	skynet/3rd/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	skynet/3rd/lua/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	skynet/3rd/lua/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	skynet/3rd/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	skynet/3rd/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SHL	skynet/3rd/lua/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SHR	skynet/3rd/lua/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SUB	skynet/3rd/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	skynet/3rd/lua/lopcodes.h	/^OP_ADD,\/*	A B C	R[A] := R[B] + R[C]				*\/$/;"	e	enum:__anon20
OP_ADDI	skynet/3rd/lua/lopcodes.h	/^OP_ADDI,\/*	A B sC	R[A] := R[B] + sC				*\/$/;"	e	enum:__anon20
OP_ADDK	skynet/3rd/lua/lopcodes.h	/^OP_ADDK,\/*	A B C	R[A] := R[B] + K[C]:number			*\/$/;"	e	enum:__anon20
OP_BAND	skynet/3rd/lua/lopcodes.h	/^OP_BAND,\/*	A B C	R[A] := R[B] & R[C]				*\/$/;"	e	enum:__anon20
OP_BANDK	skynet/3rd/lua/lopcodes.h	/^OP_BANDK,\/*	A B C	R[A] := R[B] & K[C]:integer			*\/$/;"	e	enum:__anon20
OP_BNOT	skynet/3rd/lua/lopcodes.h	/^OP_BNOT,\/*	A B	R[A] := ~R[B]					*\/$/;"	e	enum:__anon20
OP_BOR	skynet/3rd/lua/lopcodes.h	/^OP_BOR,\/*	A B C	R[A] := R[B] | R[C]				*\/$/;"	e	enum:__anon20
OP_BORK	skynet/3rd/lua/lopcodes.h	/^OP_BORK,\/*	A B C	R[A] := R[B] | K[C]:integer			*\/$/;"	e	enum:__anon20
OP_BXOR	skynet/3rd/lua/lopcodes.h	/^OP_BXOR,\/*	A B C	R[A] := R[B] ~ R[C]				*\/$/;"	e	enum:__anon20
OP_BXORK	skynet/3rd/lua/lopcodes.h	/^OP_BXORK,\/*	A B C	R[A] := R[B] ~ K[C]:integer			*\/$/;"	e	enum:__anon20
OP_CALL	skynet/3rd/lua/lopcodes.h	/^OP_CALL,\/*	A B C	R[A], ... ,R[A+C-2] := R[A](R[A+1], ... ,R[A+B-1]) *\/$/;"	e	enum:__anon20
OP_CLOSE	skynet/3rd/lua/lopcodes.h	/^OP_CLOSE,\/*	A	close all upvalues >= R[A]			*\/$/;"	e	enum:__anon20
OP_CLOSURE	skynet/3rd/lua/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R[A] := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon20
OP_COMPRESSED	skynet/lualib-src/lua-mongo.c	13;"	d	file:
OP_CONCAT	skynet/3rd/lua/lopcodes.h	/^OP_CONCAT,\/*	A B	R[A] := R[A].. ... ..R[A + B - 1]		*\/$/;"	e	enum:__anon20
OP_DIV	skynet/3rd/lua/lopcodes.h	/^OP_DIV,\/*	A B C	R[A] := R[B] \/ R[C]				*\/$/;"	e	enum:__anon20
OP_DIVK	skynet/3rd/lua/lopcodes.h	/^OP_DIVK,\/*	A B C	R[A] := R[B] \/ K[C]:number			*\/$/;"	e	enum:__anon20
OP_EQ	skynet/3rd/lua/lopcodes.h	/^OP_EQ,\/*	A B k	if ((R[A] == R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_EQI	skynet/3rd/lua/lopcodes.h	/^OP_EQI,\/*	A sB k	if ((R[A] == sB) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_EQK	skynet/3rd/lua/lopcodes.h	/^OP_EQK,\/*	A B k	if ((R[A] == K[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_EXTRAARG	skynet/3rd/lua/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon20
OP_FORLOOP	skynet/3rd/lua/lopcodes.h	/^OP_FORLOOP,\/*	A Bx	update counters; if loop continues then pc-=Bx; *\/$/;"	e	enum:__anon20
OP_FORPREP	skynet/3rd/lua/lopcodes.h	/^OP_FORPREP,\/*	A Bx	<check values and prepare counters>;$/;"	e	enum:__anon20
OP_GEI	skynet/3rd/lua/lopcodes.h	/^OP_GEI,\/*	A sB k	if ((R[A] >= sB) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_GETFIELD	skynet/3rd/lua/lopcodes.h	/^OP_GETFIELD,\/*	A B C	R[A] := R[B][K[C]:string]			*\/$/;"	e	enum:__anon20
OP_GETI	skynet/3rd/lua/lopcodes.h	/^OP_GETI,\/*	A B C	R[A] := R[B][C]					*\/$/;"	e	enum:__anon20
OP_GETTABLE	skynet/3rd/lua/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R[A] := R[B][R[C]]				*\/$/;"	e	enum:__anon20
OP_GETTABUP	skynet/3rd/lua/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R[A] := UpValue[B][K[C]:string]			*\/$/;"	e	enum:__anon20
OP_GETUPVAL	skynet/3rd/lua/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R[A] := UpValue[B]				*\/$/;"	e	enum:__anon20
OP_GTI	skynet/3rd/lua/lopcodes.h	/^OP_GTI,\/*	A sB k	if ((R[A] > sB) ~= k) then pc++			*\/$/;"	e	enum:__anon20
OP_IDIV	skynet/3rd/lua/lopcodes.h	/^OP_IDIV,\/*	A B C	R[A] := R[B] \/\/ R[C]				*\/$/;"	e	enum:__anon20
OP_IDIVK	skynet/3rd/lua/lopcodes.h	/^OP_IDIVK,\/*	A B C	R[A] := R[B] \/\/ K[C]:number			*\/$/;"	e	enum:__anon20
OP_JMP	skynet/3rd/lua/lopcodes.h	/^OP_JMP,\/*	sJ	pc += sJ					*\/$/;"	e	enum:__anon20
OP_LE	skynet/3rd/lua/lopcodes.h	/^OP_LE,\/*	A B k	if ((R[A] <= R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_LEI	skynet/3rd/lua/lopcodes.h	/^OP_LEI,\/*	A sB k	if ((R[A] <= sB) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_LEN	skynet/3rd/lua/lopcodes.h	/^OP_LEN,\/*	A B	R[A] := #R[B] (length operator)			*\/$/;"	e	enum:__anon20
OP_LFALSESKIP	skynet/3rd/lua/lopcodes.h	/^OP_LFALSESKIP,\/*A	R[A] := false; pc++	(*)			*\/$/;"	e	enum:__anon20
OP_LOADF	skynet/3rd/lua/lopcodes.h	/^OP_LOADF,\/*	A sBx	R[A] := (lua_Number)sBx				*\/$/;"	e	enum:__anon20
OP_LOADFALSE	skynet/3rd/lua/lopcodes.h	/^OP_LOADFALSE,\/*	A	R[A] := false					*\/$/;"	e	enum:__anon20
OP_LOADI	skynet/3rd/lua/lopcodes.h	/^OP_LOADI,\/*	A sBx	R[A] := sBx					*\/$/;"	e	enum:__anon20
OP_LOADK	skynet/3rd/lua/lopcodes.h	/^OP_LOADK,\/*	A Bx	R[A] := K[Bx]					*\/$/;"	e	enum:__anon20
OP_LOADKX	skynet/3rd/lua/lopcodes.h	/^OP_LOADKX,\/*	A	R[A] := K[extra arg]				*\/$/;"	e	enum:__anon20
OP_LOADNIL	skynet/3rd/lua/lopcodes.h	/^OP_LOADNIL,\/*	A B	R[A], R[A+1], ..., R[A+B] := nil		*\/$/;"	e	enum:__anon20
OP_LOADTRUE	skynet/3rd/lua/lopcodes.h	/^OP_LOADTRUE,\/*	A	R[A] := true					*\/$/;"	e	enum:__anon20
OP_LT	skynet/3rd/lua/lopcodes.h	/^OP_LT,\/*	A B k	if ((R[A] <  R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon20
OP_LTI	skynet/3rd/lua/lopcodes.h	/^OP_LTI,\/*	A sB k	if ((R[A] < sB) ~= k) then pc++			*\/$/;"	e	enum:__anon20
OP_MMBIN	skynet/3rd/lua/lopcodes.h	/^OP_MMBIN,\/*	A B C	call C metamethod over R[A] and R[B]	(*)	*\/$/;"	e	enum:__anon20
OP_MMBINI	skynet/3rd/lua/lopcodes.h	/^OP_MMBINI,\/*	A sB C k	call C metamethod over R[A] and sB	*\/$/;"	e	enum:__anon20
OP_MMBINK	skynet/3rd/lua/lopcodes.h	/^OP_MMBINK,\/*	A B C k		call C metamethod over R[A] and K[B]	*\/$/;"	e	enum:__anon20
OP_MOD	skynet/3rd/lua/lopcodes.h	/^OP_MOD,\/*	A B C	R[A] := R[B] % R[C]				*\/$/;"	e	enum:__anon20
OP_MODK	skynet/3rd/lua/lopcodes.h	/^OP_MODK,\/*	A B C	R[A] := R[B] % K[C]:number			*\/$/;"	e	enum:__anon20
OP_MOVE	skynet/3rd/lua/lopcodes.h	/^OP_MOVE,\/*	A B	R[A] := R[B]					*\/$/;"	e	enum:__anon20
OP_MSG	skynet/lualib-src/lua-mongo.c	14;"	d	file:
OP_MUL	skynet/3rd/lua/lopcodes.h	/^OP_MUL,\/*	A B C	R[A] := R[B] * R[C]				*\/$/;"	e	enum:__anon20
OP_MULK	skynet/3rd/lua/lopcodes.h	/^OP_MULK,\/*	A B C	R[A] := R[B] * K[C]:number			*\/$/;"	e	enum:__anon20
OP_NEWTABLE	skynet/3rd/lua/lopcodes.h	/^OP_NEWTABLE,\/*	A B C k	R[A] := {}					*\/$/;"	e	enum:__anon20
OP_NOT	skynet/3rd/lua/lopcodes.h	/^OP_NOT,\/*	A B	R[A] := not R[B]				*\/$/;"	e	enum:__anon20
OP_POW	skynet/3rd/lua/lopcodes.h	/^OP_POW,\/*	A B C	R[A] := R[B] ^ R[C]				*\/$/;"	e	enum:__anon20
OP_POWK	skynet/3rd/lua/lopcodes.h	/^OP_POWK,\/*	A B C	R[A] := R[B] ^ K[C]:number			*\/$/;"	e	enum:__anon20
OP_RETURN	skynet/3rd/lua/lopcodes.h	/^OP_RETURN,\/*	A B C k	return R[A], ... ,R[A+B-2]	(see note)	*\/$/;"	e	enum:__anon20
OP_RETURN0	skynet/3rd/lua/lopcodes.h	/^OP_RETURN0,\/*		return						*\/$/;"	e	enum:__anon20
OP_RETURN1	skynet/3rd/lua/lopcodes.h	/^OP_RETURN1,\/*	A	return R[A]					*\/$/;"	e	enum:__anon20
OP_SELF	skynet/3rd/lua/lopcodes.h	/^OP_SELF,\/*	A B C	R[A+1] := R[B]; R[A] := R[B][RK(C):string]	*\/$/;"	e	enum:__anon20
OP_SETFIELD	skynet/3rd/lua/lopcodes.h	/^OP_SETFIELD,\/*	A B C	R[A][K[B]:string] := RK(C)			*\/$/;"	e	enum:__anon20
OP_SETI	skynet/3rd/lua/lopcodes.h	/^OP_SETI,\/*	A B C	R[A][B] := RK(C)				*\/$/;"	e	enum:__anon20
OP_SETLIST	skynet/3rd/lua/lopcodes.h	/^OP_SETLIST,\/*	A B C k	R[A][C+i] := R[A+i], 1 <= i <= B		*\/$/;"	e	enum:__anon20
OP_SETTABLE	skynet/3rd/lua/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R[A][R[B]] := RK(C)				*\/$/;"	e	enum:__anon20
OP_SETTABUP	skynet/3rd/lua/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][K[B]:string] := RK(C)		*\/$/;"	e	enum:__anon20
OP_SETUPVAL	skynet/3rd/lua/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R[A]				*\/$/;"	e	enum:__anon20
OP_SHL	skynet/3rd/lua/lopcodes.h	/^OP_SHL,\/*	A B C	R[A] := R[B] << R[C]				*\/$/;"	e	enum:__anon20
OP_SHLI	skynet/3rd/lua/lopcodes.h	/^OP_SHLI,\/*	A B sC	R[A] := sC << R[B]				*\/$/;"	e	enum:__anon20
OP_SHR	skynet/3rd/lua/lopcodes.h	/^OP_SHR,\/*	A B C	R[A] := R[B] >> R[C]				*\/$/;"	e	enum:__anon20
OP_SHRI	skynet/3rd/lua/lopcodes.h	/^OP_SHRI,\/*	A B sC	R[A] := R[B] >> sC				*\/$/;"	e	enum:__anon20
OP_SUB	skynet/3rd/lua/lopcodes.h	/^OP_SUB,\/*	A B C	R[A] := R[B] - R[C]				*\/$/;"	e	enum:__anon20
OP_SUBK	skynet/3rd/lua/lopcodes.h	/^OP_SUBK,\/*	A B C	R[A] := R[B] - K[C]:number			*\/$/;"	e	enum:__anon20
OP_TAILCALL	skynet/3rd/lua/lopcodes.h	/^OP_TAILCALL,\/*	A B C k	return R[A](R[A+1], ... ,R[A+B-1])		*\/$/;"	e	enum:__anon20
OP_TBC	skynet/3rd/lua/lopcodes.h	/^OP_TBC,\/*	A	mark variable A "to be closed"			*\/$/;"	e	enum:__anon20
OP_TEST	skynet/3rd/lua/lopcodes.h	/^OP_TEST,\/*	A k	if (not R[A] == k) then pc++			*\/$/;"	e	enum:__anon20
OP_TESTSET	skynet/3rd/lua/lopcodes.h	/^OP_TESTSET,\/*	A B k	if (not R[B] == k) then pc++ else R[A] := R[B] (*) *\/$/;"	e	enum:__anon20
OP_TFORCALL	skynet/3rd/lua/lopcodes.h	/^OP_TFORCALL,\/*	A C	R[A+4], ... ,R[A+3+C] := R[A](R[A+1], R[A+2]);	*\/$/;"	e	enum:__anon20
OP_TFORLOOP	skynet/3rd/lua/lopcodes.h	/^OP_TFORLOOP,\/*	A Bx	if R[A+2] ~= nil then { R[A]=R[A+2]; pc -= Bx }	*\/$/;"	e	enum:__anon20
OP_TFORPREP	skynet/3rd/lua/lopcodes.h	/^OP_TFORPREP,\/*	A Bx	create upvalue for R[A + 3]; pc+=Bx		*\/$/;"	e	enum:__anon20
OP_UNM	skynet/3rd/lua/lopcodes.h	/^OP_UNM,\/*	A B	R[A] := -R[B]					*\/$/;"	e	enum:__anon20
OP_VARARG	skynet/3rd/lua/lopcodes.h	/^OP_VARARG,\/*	A C	R[A], R[A+1], ..., R[A+C-2] = vararg		*\/$/;"	e	enum:__anon20
OP_VARARGPREP	skynet/3rd/lua/lopcodes.h	/^OP_VARARGPREP,\/*A	(adjust vararg parameters)			*\/$/;"	e	enum:__anon20
OUTPUT	skynet/3rd/lua/luac.c	32;"	d	file:
OpCode	skynet/3rd/lua/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon20
OpMode	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	g
Opcode	skynet/3rd/lpeg/lpvm.h	/^typedef enum Opcode {$/;"	g
Opcode	skynet/3rd/lpeg/lpvm.h	/^} Opcode;$/;"	t	typeref:enum:Opcode
Output	skynet/3rd/lua/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
P	skynet/lualib-src/lua-crypt.c	793;"	d	file:
PADDING_MODE_COUNT	skynet/lualib-src/lua-crypt.c	14;"	d	file:
PADDING_MODE_ISO7816_4	skynet/lualib-src/lua-crypt.c	12;"	d	file:
PADDING_MODE_PKCS7	skynet/lualib-src/lua-crypt.c	13;"	d	file:
PATTERN_T	skynet/3rd/lpeg/lptypes.h	21;"	d
PAUSEADJ	skynet/3rd/lua/lgc.c	60;"	d	file:
PEnofail	skynet/3rd/lpeg/lpcode.h	21;"	d
PEnullable	skynet/3rd/lpeg/lpcode.h	20;"	d
PI	skynet/3rd/lua/lmathlib.c	25;"	d	file:
PI	skynet/3rd/lua/lmathlib.c	26;"	d	file:
PLAT	skynet/3rd/lua/makefile	/^PLAT= guess$/;"	m
PLAT	skynet/platform.mk	/^PLAT ?= none$/;"	m
PLAT	skynet/platform.mk	/^freebsd : PLAT = freebsd$/;"	m
PLAT	skynet/platform.mk	/^linux : PLAT = linux$/;"	m
PLAT	skynet/platform.mk	/^macosx : PLAT = macosx$/;"	m
PLATS	skynet/3rd/lua/makefile	/^PLATS= guess aix bsd c89 freebsd generic ios linux linux-readline macosx mingw posix solaris$/;"	m
PLATS	skynet/platform.mk	/^PLATS = linux freebsd macosx$/;"	m
POOL_SIZE_WARNING	skynet/lualib-src/lua-socket.c	26;"	d	file:
POS	skynet/3rd/lua/lobject.c	563;"	d	file:
POS_A	skynet/3rd/lua/lopcodes.h	49;"	d
POS_Ax	skynet/3rd/lua/lopcodes.h	56;"	d
POS_B	skynet/3rd/lua/lopcodes.h	51;"	d
POS_Bx	skynet/3rd/lua/lopcodes.h	54;"	d
POS_C	skynet/3rd/lua/lopcodes.h	52;"	d
POS_OP	skynet/3rd/lua/lopcodes.h	47;"	d
POS_k	skynet/3rd/lua/lopcodes.h	50;"	d
POS_sJ	skynet/3rd/lua/lopcodes.h	58;"	d
PRE	skynet/3rd/lua/lobject.c	562;"	d	file:
PREFIX_SIZE	skynet/skynet-src/malloc_hook.c	34;"	d	file:
PRINTBIT	skynet/3rd/lua/lctype.h	41;"	d
PRIORITY_HIGH	skynet/skynet-src/socket_server.c	38;"	d	file:
PRIORITY_LOW	skynet/skynet-src/socket_server.c	39;"	d	file:
PROGNAME	skynet/3rd/lua/luac.c	31;"	d	file:
PROTOCOL_TCP	skynet/skynet-src/socket_server.c	44;"	d	file:
PROTOCOL_UDP	skynet/skynet-src/socket_server.c	45;"	d	file:
PROTOCOL_UDPv6	skynet/skynet-src/socket_server.c	46;"	d	file:
PROTOCOL_UNKNOWN	skynet/skynet-src/socket_server.c	47;"	d	file:
PROXYCACHE	skynet/lualib-src/lua-datasheet.c	6;"	d	file:
PTYPE_CLIENT	skynet/skynet-src/skynet.h	12;"	d
PTYPE_ERROR	skynet/skynet-src/skynet.h	17;"	d
PTYPE_HARBOR	skynet/skynet-src/skynet.h	14;"	d
PTYPE_MULTICAST	skynet/skynet-src/skynet.h	11;"	d
PTYPE_RESERVED_DEBUG	skynet/skynet-src/skynet.h	20;"	d
PTYPE_RESERVED_LUA	skynet/skynet-src/skynet.h	21;"	d
PTYPE_RESERVED_QUEUE	skynet/skynet-src/skynet.h	19;"	d
PTYPE_RESERVED_SNAX	skynet/skynet-src/skynet.h	22;"	d
PTYPE_RESPONSE	skynet/skynet-src/skynet.h	10;"	d
PTYPE_SOCKET	skynet/skynet-src/skynet.h	15;"	d
PTYPE_SYSTEM	skynet/skynet-src/skynet.h	13;"	d
PTYPE_TAG_ALLOCSESSION	skynet/skynet-src/skynet.h	25;"	d
PTYPE_TAG_DONTCOPY	skynet/skynet-src/skynet.h	24;"	d
PTYPE_TEXT	skynet/skynet-src/skynet.h	9;"	d
PUT_UINT32	skynet/lualib-src/lua-crypt.c	198;"	d	file:
Pattern	skynet/3rd/lpeg/lptree.h	/^typedef struct Pattern {$/;"	s
Pattern	skynet/3rd/lpeg/lptree.h	/^} Pattern;$/;"	t	typeref:struct:Pattern
Pfunc	skynet/3rd/lua/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PrintCode	skynet/3rd/lua/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	skynet/3rd/lua/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintDebug	skynet/3rd/lua/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:
PrintFunction	skynet/3rd/lua/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:
PrintHeader	skynet/3rd/lua/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintString	skynet/3rd/lua/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintType	skynet/3rd/lua/luac.c	/^static void PrintType(const Proto* f, int i)$/;"	f	file:
Protect	skynet/3rd/lua/lvm.c	1116;"	d	file:
ProtectNT	skynet/3rd/lua/lvm.c	1119;"	d	file:
Proto	skynet/3rd/lua/lobject.h	/^typedef struct Proto {$/;"	s
Proto	skynet/3rd/lua/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
Q	skynet/skynet-src/skynet_mq.c	/^static struct global_queue *Q = NULL;$/;"	v	typeref:struct:global_queue	file:
QUEUESIZE	skynet/lualib-src/lua-netpack.c	15;"	d	file:
QUEUE_SIZE	skynet/lualib-src/lua-clientsocket.c	131;"	d	file:
R0	skynet/lualib-src/lsha1.c	116;"	d	file:
R1	skynet/lualib-src/lsha1.c	117;"	d	file:
R2	skynet/lualib-src/lsha1.c	118;"	d	file:
R3	skynet/lualib-src/lsha1.c	119;"	d	file:
R4	skynet/lualib-src/lsha1.c	120;"	d	file:
RA	skynet/3rd/lua/lvm.c	1061;"	d	file:
RANLIB	skynet/3rd/lua/makefile	/^RANLIB= ranlib$/;"	m
RANLIMIT	skynet/3rd/lua/ltablib.c	262;"	d	file:
RB	skynet/3rd/lua/lvm.c	1062;"	d	file:
RC	skynet/3rd/lua/lvm.c	1065;"	d	file:
RDKCONST	skynet/3rd/lua/lparser.h	91;"	d
RDKCTC	skynet/3rd/lua/lparser.h	93;"	d
RDKTOCLOSE	skynet/3rd/lua/lparser.h	92;"	d
REMOTE	skynet/skynet-src/skynet_harbor.c	/^static struct skynet_context * REMOTE = 0;$/;"	v	typeref:struct:skynet_context	file:
REMOTE_MAX	skynet/skynet-src/skynet_harbor.h	8;"	d
REQUEST:get	skynet/examples/agent.lua	/^function REQUEST:get()$/;"	f
REQUEST:handshake	skynet/examples/agent.lua	/^function REQUEST:handshake()$/;"	f
REQUEST:quit	skynet/examples/agent.lua	/^function REQUEST:quit()$/;"	f
REQUEST:set	skynet/examples/agent.lua	/^function REQUEST:set()$/;"	f
RESERVED	skynet/3rd/lua/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	skynet/3rd/lua/lbaselib.c	361;"	d	file:
RETS	skynet/3rd/lua/lobject.c	561;"	d	file:
RHs	skynet/lualib-src/lua-crypt.c	/^static uint32_t RHs[16] = {$/;"	v	file:
RKC	skynet/3rd/lua/lvm.c	1068;"	d	file:
RM	skynet/3rd/lua/makefile	/^RM= rm -f$/;"	m
RN	skynet/3rd/lua/liolib.c	/^} RN;$/;"	t	typeref:struct:__anon10	file:
RanState	skynet/3rd/lua/lmathlib.c	/^} RanState;$/;"	t	typeref:struct:__anon12	file:
Rand64	skynet/3rd/lua/lmathlib.c	/^typedef struct Rand64 {$/;"	s	file:
Rand64	skynet/3rd/lua/lmathlib.c	/^} Rand64;$/;"	t	typeref:struct:Rand64	file:
Rand64	skynet/3rd/lua/lmathlib.c	273;"	d	file:
Rand64	skynet/3rd/lua/lmathlib.c	278;"	d	file:
Rand64	skynet/3rd/lua/lmathlib.c	283;"	d	file:
S	skynet/3rd/lua/luac.c	666;"	d	file:
SB1	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB1[64] = {$/;"	v	file:
SB2	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB2[64] = {$/;"	v	file:
SB3	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB3[64] = {$/;"	v	file:
SB4	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB4[64] = {$/;"	v	file:
SB5	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB5[64] = {$/;"	v	file:
SB6	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB6[64] = {$/;"	v	file:
SB7	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB7[64] = {$/;"	v	file:
SB8	skynet/lualib-src/lua-crypt.c	/^static uint32_t SB8[64] = {$/;"	v	file:
SETARG_A	skynet/3rd/lua/lopcodes.h	126;"	d
SETARG_Ax	skynet/3rd/lua/lopcodes.h	144;"	d
SETARG_B	skynet/3rd/lua/lopcodes.h	130;"	d
SETARG_Bx	skynet/3rd/lua/lopcodes.h	141;"	d
SETARG_C	skynet/3rd/lua/lopcodes.h	134;"	d
SETARG_k	skynet/3rd/lua/lopcodes.h	138;"	d
SETARG_sBx	skynet/3rd/lua/lopcodes.h	148;"	d
SETARG_sJ	skynet/3rd/lua/lopcodes.h	152;"	d
SET_OPCODE	skynet/3rd/lua/lopcodes.h	115;"	d
SHA1_CTX	skynet/lualib-src/lsha1.c	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon39	file:
SHA1_DIGEST_SIZE	skynet/lualib-src/lsha1.c	97;"	d	file:
SHA1_Transform	skynet/lualib-src/lsha1.c	/^static void	SHA1_Transform(uint32_t	state[5], const	uint8_t	buffer[64])$/;"	f	file:
SHARED	skynet/platform.mk	/^SHARED := -fPIC --shared$/;"	m
SHARED	skynet/platform.mk	/^macosx : SHARED := -fPIC -dynamiclib -Wl,-undefined,dynamic_lookup$/;"	m
SIG	skynet/skynet-src/skynet_start.c	/^static volatile int SIG = 0;$/;"	v	file:
SIZELENMOD	skynet/3rd/lua/lstrlib.c	1001;"	d	file:
SIZEOF_FIELD	skynet/lualib-src/sproto/sproto.c	12;"	d	file:
SIZEOF_HEADER	skynet/lualib-src/sproto/sproto.c	11;"	d	file:
SIZEOF_INT32	skynet/lualib-src/sproto/sproto.c	14;"	d	file:
SIZEOF_INT64	skynet/lualib-src/sproto/sproto.c	13;"	d	file:
SIZEOF_LENGTH	skynet/lualib-src/sproto/sproto.c	10;"	d	file:
SIZETIMEFMT	skynet/3rd/lua/loslib.c	299;"	d	file:
SIZETIMEFMT	skynet/service-src/service_logger.c	35;"	d	file:
SIZE_A	skynet/3rd/lua/lopcodes.h	41;"	d
SIZE_Ax	skynet/3rd/lua/lopcodes.h	42;"	d
SIZE_B	skynet/3rd/lua/lopcodes.h	39;"	d
SIZE_Bx	skynet/3rd/lua/lopcodes.h	40;"	d
SIZE_C	skynet/3rd/lua/lopcodes.h	38;"	d
SIZE_OP	skynet/3rd/lua/lopcodes.h	45;"	d
SIZE_sJ	skynet/3rd/lua/lopcodes.h	43;"	d
SKYNET_ATOMIC_H	skynet/skynet-src/atomic.h	2;"	d
SKYNET_BUILD_PATH	skynet/Makefile	/^SKYNET_BUILD_PATH ?= .$/;"	m
SKYNET_CONTEXT_HANDLE_H	skynet/skynet-src/skynet_handle.h	2;"	d
SKYNET_DEFINES	skynet/platform.mk	/^macosx : SKYNET_DEFINES :=-DNOUSE_JEMALLOC$/;"	m
SKYNET_ENV_H	skynet/skynet-src/skynet_env.h	2;"	d
SKYNET_H	skynet/skynet-src/skynet.h	2;"	d
SKYNET_HARBOR_H	skynet/skynet-src/skynet_harbor.h	2;"	d
SKYNET_IMP_H	skynet/skynet-src/skynet_imp.h	2;"	d
SKYNET_LIBS	skynet/platform.mk	/^SKYNET_LIBS := -lpthread -lm$/;"	m
SKYNET_MALLOC_HOOK_H	skynet/skynet-src/malloc_hook.h	2;"	d
SKYNET_MESSAGE_QUEUE_H	skynet/skynet-src/skynet_mq.h	2;"	d
SKYNET_MODULE_H	skynet/skynet-src/skynet_module.h	2;"	d
SKYNET_MONITOR_H	skynet/skynet-src/skynet_monitor.h	2;"	d
SKYNET_RWLOCK_H	skynet/skynet-src/rwlock.h	2;"	d
SKYNET_SERVER_H	skynet/skynet-src/skynet_server.h	2;"	d
SKYNET_SOCKET_TYPE_ACCEPT	skynet/skynet-src/skynet_socket.h	12;"	d
SKYNET_SOCKET_TYPE_CLOSE	skynet/skynet-src/skynet_socket.h	11;"	d
SKYNET_SOCKET_TYPE_CONNECT	skynet/skynet-src/skynet_socket.h	10;"	d
SKYNET_SOCKET_TYPE_DATA	skynet/skynet-src/skynet_socket.h	9;"	d
SKYNET_SOCKET_TYPE_ERROR	skynet/skynet-src/skynet_socket.h	13;"	d
SKYNET_SOCKET_TYPE_UDP	skynet/skynet-src/skynet_socket.h	14;"	d
SKYNET_SOCKET_TYPE_WARNING	skynet/skynet-src/skynet_socket.h	15;"	d
SKYNET_SPINLOCK_H	skynet/skynet-src/spinlock.h	2;"	d
SKYNET_SRC	skynet/Makefile	/^SKYNET_SRC = skynet_main.c skynet_handle.c skynet_module.c skynet_mq.c \\$/;"	m
SKYNET_TIMER_H	skynet/skynet-src/skynet_timer.h	2;"	d
SLOT_SIZE	skynet/skynet-src/malloc_hook.c	33;"	d	file:
SMALLSTRING	skynet/lualib-src/lua-netpack.c	17;"	d	file:
SMALL_CHUNK	skynet/lualib-src/lua-crypt.c	16;"	d	file:
SOCKET.close	game/myservice/luagate.lua	/^function SOCKET.close(fd)$/;"	f
SOCKET.close	skynet/examples/watchdog.lua	/^function SOCKET.close(fd)$/;"	f
SOCKET.data	game/myservice/luagate.lua	/^function SOCKET.data(fd, msg)$/;"	f
SOCKET.data	skynet/examples/watchdog.lua	/^function SOCKET.data(fd, msg)$/;"	f
SOCKET.error	game/myservice/luagate.lua	/^function SOCKET.error(fd, msg)$/;"	f
SOCKET.error	skynet/examples/watchdog.lua	/^function SOCKET.error(fd, msg)$/;"	f
SOCKET.open	game/myservice/luagate.lua	/^function SOCKET.open(fd, addr)$/;"	f
SOCKET.open	skynet/examples/watchdog.lua	/^function SOCKET.open(fd, addr)$/;"	f
SOCKET.warning	game/myservice/luagate.lua	/^function SOCKET.warning(fd, size)$/;"	f
SOCKET.warning	skynet/examples/watchdog.lua	/^function SOCKET.warning(fd, size)$/;"	f
SOCKET_ACCEPT	skynet/skynet-src/socket_server.h	11;"	d
SOCKET_BUFFER_MEMORY	skynet/skynet-src/socket_buffer.h	6;"	d
SOCKET_BUFFER_OBJECT	skynet/skynet-src/socket_buffer.h	7;"	d
SOCKET_BUFFER_RAWPOINTER	skynet/skynet-src/socket_buffer.h	8;"	d
SOCKET_CLOSE	skynet/skynet-src/socket_server.h	9;"	d
SOCKET_DATA	skynet/skynet-src/socket_server.h	8;"	d
SOCKET_ERR	skynet/skynet-src/socket_server.h	12;"	d
SOCKET_EXIT	skynet/skynet-src/socket_server.h	13;"	d
SOCKET_INFO_BIND	skynet/skynet-src/socket_info.h	8;"	d
SOCKET_INFO_CLOSING	skynet/skynet-src/socket_info.h	9;"	d
SOCKET_INFO_LISTEN	skynet/skynet-src/socket_info.h	5;"	d
SOCKET_INFO_TCP	skynet/skynet-src/socket_info.h	6;"	d
SOCKET_INFO_UDP	skynet/skynet-src/socket_info.h	7;"	d
SOCKET_INFO_UNKNOWN	skynet/skynet-src/socket_info.h	4;"	d
SOCKET_MORE	skynet/skynet-src/socket_server.h	19;"	d
SOCKET_OPEN	skynet/skynet-src/socket_server.h	10;"	d
SOCKET_RST	skynet/skynet-src/socket_server.h	18;"	d
SOCKET_SERVER	skynet/skynet-src/skynet_socket.c	/^static struct socket_server * SOCKET_SERVER = NULL;$/;"	v	typeref:struct:socket_server	file:
SOCKET_TYPE_BIND	skynet/skynet-src/socket_server.c	34;"	d	file:
SOCKET_TYPE_CONNECTED	skynet/skynet-src/socket_server.c	30;"	d	file:
SOCKET_TYPE_CONNECTING	skynet/skynet-src/socket_server.c	29;"	d	file:
SOCKET_TYPE_HALFCLOSE_READ	skynet/skynet-src/socket_server.c	31;"	d	file:
SOCKET_TYPE_HALFCLOSE_WRITE	skynet/skynet-src/socket_server.c	32;"	d	file:
SOCKET_TYPE_INVALID	skynet/skynet-src/socket_server.c	25;"	d	file:
SOCKET_TYPE_LISTEN	skynet/skynet-src/socket_server.c	28;"	d	file:
SOCKET_TYPE_PACCEPT	skynet/skynet-src/socket_server.c	33;"	d	file:
SOCKET_TYPE_PLISTEN	skynet/skynet-src/socket_server.c	27;"	d	file:
SOCKET_TYPE_RESERVE	skynet/skynet-src/socket_server.c	26;"	d	file:
SOCKET_UDP	skynet/skynet-src/socket_server.h	14;"	d
SOCKET_WARNING	skynet/skynet-src/socket_server.h	15;"	d
SOURCE_EXTENSIONS	skynet/.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SPACEBIT	skynet/3rd/lua/lctype.h	42;"	d
SPACECHARS	skynet/3rd/lua/lbaselib.c	58;"	d	file:
SPECIALS	skynet/3rd/lua/lstrlib.c	383;"	d	file:
SPIN_DESTROY	skynet/skynet-src/spinlock.h	7;"	d
SPIN_INIT	skynet/skynet-src/spinlock.h	4;"	d
SPIN_LOCK	skynet/skynet-src/spinlock.h	5;"	d
SPIN_UNLOCK	skynet/skynet-src/spinlock.h	6;"	d
SPROTO_CB_ERROR	skynet/lualib-src/sproto/sproto.h	26;"	d
SPROTO_CB_NIL	skynet/lualib-src/sproto/sproto.h	27;"	d
SPROTO_CB_NOARRAY	skynet/lualib-src/sproto/sproto.h	28;"	d
SPROTO_REQUEST	skynet/lualib-src/sproto/sproto.h	9;"	d
SPROTO_RESPONSE	skynet/lualib-src/sproto/sproto.h	10;"	d
SPROTO_TARRAY	skynet/lualib-src/sproto/sproto.h	20;"	d
SPROTO_TBOOLEAN	skynet/lualib-src/sproto/sproto.h	14;"	d
SPROTO_TDOUBLE	skynet/lualib-src/sproto/sproto.h	16;"	d
SPROTO_TINTEGER	skynet/lualib-src/sproto/sproto.h	13;"	d
SPROTO_TSTRING	skynet/lualib-src/sproto/sproto.h	15;"	d
SPROTO_TSTRING_BINARY	skynet/lualib-src/sproto/sproto.h	24;"	d
SPROTO_TSTRING_STRING	skynet/lualib-src/sproto/sproto.h	23;"	d
SPROTO_TSTRUCT	skynet/lualib-src/sproto/sproto.h	17;"	d
SParser	skynet/3rd/lua/ldo.c	/^struct SParser {  \/* data to 'f_parser' *\/$/;"	s	file:
SS	skynet/3rd/lua/luac.c	665;"	d	file:
STATUS_CONTENT	skynet/service-src/service_harbor.c	68;"	d	file:
STATUS_DOWN	skynet/service-src/service_harbor.c	69;"	d	file:
STATUS_HANDSHAKE	skynet/service-src/service_harbor.c	66;"	d	file:
STATUS_HEADER	skynet/service-src/service_harbor.c	67;"	d	file:
STATUS_WAIT	skynet/service-src/service_harbor.c	65;"	d	file:
STD_	skynet/skynet-src/atomic.h	30;"	d
STD_	skynet/skynet-src/atomic.h	34;"	d
STRCACHE_M	skynet/3rd/lua/llimits.h	238;"	d
STRCACHE_M	skynet/3rd/lua/ltests.h	122;"	d
STRCACHE_N	skynet/3rd/lua/llimits.h	237;"	d
STRCACHE_N	skynet/3rd/lua/ltests.h	121;"	d
STRID	skynet/3rd/lua/lstring.c	/^static ATOM_SIZET STRID = 0;$/;"	v	file:
STRSEED	skynet/3rd/lua/lstring.c	/^static unsigned int STRSEED;$/;"	v	file:
SUBJIDX	skynet/3rd/lpeg/lptypes.h	68;"	d
SYSCFLAGS	skynet/3rd/lua/makefile	/^SYSCFLAGS=$/;"	m
SYSLDFLAGS	skynet/3rd/lua/makefile	/^SYSLDFLAGS=$/;"	m
SYSLIBS	skynet/3rd/lua/makefile	/^SYSLIBS=$/;"	m
SZINT	skynet/3rd/lua/lstrlib.c	1405;"	d	file:
SemInfo	skynet/3rd/lua/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon11
Settings	skynet/.ycm_extra_conf.py	/^def Settings( **kwargs ):$/;"	f
Stack	skynet/3rd/lpeg/lpvm.c	/^typedef struct Stack {$/;"	s	file:
Stack	skynet/3rd/lpeg/lpvm.c	/^} Stack;$/;"	t	typeref:struct:Stack	file:
StackValue	skynet/3rd/lua/lobject.h	/^typedef union StackValue {$/;"	u
StackValue	skynet/3rd/lua/lobject.h	/^} StackValue;$/;"	t	typeref:union:StackValue
StkId	skynet/3rd/lua/lobject.h	/^typedef StackValue *StkId;$/;"	t
StkIdRel	skynet/3rd/lua/lobject.h	/^} StkIdRel;$/;"	t	typeref:union:__anon14
StrAux	skynet/3rd/lpeg/lpcap.c	/^typedef struct StrAux {$/;"	s	file:
StrAux	skynet/3rd/lpeg/lpcap.c	/^} StrAux;$/;"	t	typeref:struct:StrAux	file:
T	skynet/3rd/lua-md5/md5.c	/^static const WORD32 T[64]={$/;"	v	file:
TABLE 	game/myservice/define.lua	/^TABLE = setmetatable({},{__index = function()$/;"	f
TABLES	skynet/lualib-src/lua-datasheet.c	7;"	d	file:
TAB_L	skynet/3rd/lua/ltablib.c	29;"	d	file:
TAB_R	skynet/3rd/lua/ltablib.c	27;"	d	file:
TAB_RW	skynet/3rd/lua/ltablib.c	30;"	d	file:
TAB_W	skynet/3rd/lua/ltablib.c	28;"	d	file:
TAnd	skynet/3rd/lpeg/lptree.h	/^  TAnd,  \/* &'sib1' *\/$/;"	e	enum:TTag
TAny	skynet/3rd/lpeg/lptree.h	/^  TAny,$/;"	e	enum:TTag
TBehind	skynet/3rd/lpeg/lptree.h	/^  TBehind,  \/* 'sib1' is pattern, 'n' is how much to go back *\/$/;"	e	enum:TTag
TCall	skynet/3rd/lpeg/lptree.h	/^  TCall,  \/* ktable[key] is rule's key; 'sib2' is rule being called *\/$/;"	e	enum:TTag
TCapture	skynet/3rd/lpeg/lptree.h	/^  TCapture,  \/* captures: 'cap' is kind of capture (enum 'CapKind');$/;"	e	enum:TTag
TChar	skynet/3rd/lpeg/lptree.h	/^  TChar = 0,  \/* 'n' = char *\/$/;"	e	enum:TTag
TChoice	skynet/3rd/lpeg/lptree.h	/^  TChoice,  \/* 'sib1' \/ 'sib2' *\/$/;"	e	enum:TTag
TEMP_LENGTH	skynet/lualib-src/lua-cluster.c	22;"	d	file:
TESTARG_k	skynet/3rd/lua/lopcodes.h	136;"	d
TESTBIT	skynet/3rd/lua/lgc.h	80;"	d
TFalse	skynet/3rd/lpeg/lptree.h	/^  TFalse,$/;"	e	enum:TTag
TGrammar	skynet/3rd/lpeg/lptree.h	/^  TGrammar,  \/* 'sib1' is initial (and first) rule *\/$/;"	e	enum:TTag
THREAD_MAIN	skynet/skynet-src/skynet_imp.h	16;"	d
THREAD_MONITOR	skynet/skynet-src/skynet_imp.h	19;"	d
THREAD_SOCKET	skynet/skynet-src/skynet_imp.h	17;"	d
THREAD_TIMER	skynet/skynet-src/skynet_imp.h	18;"	d
THREAD_WORKER	skynet/skynet-src/skynet_imp.h	15;"	d
TI	skynet/skynet-src/skynet_timer.c	/^static struct timer * TI = NULL;$/;"	v	typeref:struct:timer	file:
TIME_LEVEL	skynet/skynet-src/skynet_timer.c	20;"	d	file:
TIME_LEVEL_MASK	skynet/skynet-src/skynet_timer.c	22;"	d	file:
TIME_LEVEL_SHIFT	skynet/skynet-src/skynet_timer.c	19;"	d	file:
TIME_NEAR	skynet/skynet-src/skynet_timer.c	18;"	d	file:
TIME_NEAR_MASK	skynet/skynet-src/skynet_timer.c	21;"	d	file:
TIME_NEAR_SHIFT	skynet/skynet-src/skynet_timer.c	17;"	d	file:
TK_AND	skynet/3rd/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	skynet/3rd/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_DBCOLON	skynet/3rd/lua/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_ELSE	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	skynet/3rd/lua/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_FALSE	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FLT	skynet/3rd/lua/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_FOR	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	skynet/3rd/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_GOTO	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IDIV	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_IF	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_INT	skynet/3rd/lua/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_LE	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_LOCAL	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	skynet/3rd/lua/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	skynet/3rd/lua/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_NIL	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_OR	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	skynet/3rd/lua/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	skynet/3rd/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_SHL	skynet/3rd/lua/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_SHR	skynet/3rd/lua/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_STRING	skynet/3rd/lua/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	skynet/3rd/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	skynet/3rd/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	skynet/3rd/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	skynet/3rd/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TLS_INC	skynet/Makefile	/^TLS_INC=$/;"	m
TLS_IS_INIT	skynet/lualib-src/ltls.c	/^static bool TLS_IS_INIT = false;$/;"	v	file:
TLS_LIB	skynet/Makefile	/^TLS_LIB=$/;"	m
TLS_MODULE	skynet/Makefile	/^TLS_MODULE=ltls$/;"	m
TMS	skynet/3rd/lua/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon36
TM_ADD	skynet/3rd/lua/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon36
TM_BAND	skynet/3rd/lua/ltm.h	/^  TM_BAND,$/;"	e	enum:__anon36
TM_BNOT	skynet/3rd/lua/ltm.h	/^  TM_BNOT,$/;"	e	enum:__anon36
TM_BOR	skynet/3rd/lua/ltm.h	/^  TM_BOR,$/;"	e	enum:__anon36
TM_BXOR	skynet/3rd/lua/ltm.h	/^  TM_BXOR,$/;"	e	enum:__anon36
TM_CALL	skynet/3rd/lua/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon36
TM_CLOSE	skynet/3rd/lua/ltm.h	/^  TM_CLOSE,$/;"	e	enum:__anon36
TM_CONCAT	skynet/3rd/lua/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon36
TM_DIV	skynet/3rd/lua/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon36
TM_EQ	skynet/3rd/lua/ltm.h	/^  TM_EQ,  \/* last tag method with fast access *\/$/;"	e	enum:__anon36
TM_GC	skynet/3rd/lua/ltm.h	/^  TM_GC,$/;"	e	enum:__anon36
TM_IDIV	skynet/3rd/lua/ltm.h	/^  TM_IDIV,$/;"	e	enum:__anon36
TM_INDEX	skynet/3rd/lua/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon36
TM_LE	skynet/3rd/lua/ltm.h	/^  TM_LE,$/;"	e	enum:__anon36
TM_LEN	skynet/3rd/lua/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon36
TM_LT	skynet/3rd/lua/ltm.h	/^  TM_LT,$/;"	e	enum:__anon36
TM_MOD	skynet/3rd/lua/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon36
TM_MODE	skynet/3rd/lua/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon36
TM_MUL	skynet/3rd/lua/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon36
TM_N	skynet/3rd/lua/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon36
TM_NEWINDEX	skynet/3rd/lua/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon36
TM_POW	skynet/3rd/lua/ltm.h	/^  TM_POW,$/;"	e	enum:__anon36
TM_SHL	skynet/3rd/lua/ltm.h	/^  TM_SHL,$/;"	e	enum:__anon36
TM_SHR	skynet/3rd/lua/ltm.h	/^  TM_SHR,$/;"	e	enum:__anon36
TM_SUB	skynet/3rd/lua/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon36
TM_UNM	skynet/3rd/lua/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon36
TNot	skynet/3rd/lpeg/lptree.h	/^  TNot,  \/* !'sib1' *\/$/;"	e	enum:TTag
TOpenCall	skynet/3rd/lpeg/lptree.h	/^  TOpenCall,  \/* ktable[key] is rule's key *\/$/;"	e	enum:TTag
TRUE 	game/myservice/define.lua	/^TRUE = setmetatable({},{__index = function()$/;"	f
TRep	skynet/3rd/lpeg/lptree.h	/^  TRep,  \/* 'sib1'* *\/$/;"	e	enum:TTag
TRule	skynet/3rd/lpeg/lptree.h	/^  TRule,  \/* ktable[key] is rule's key (but key == 0 for unused rules);$/;"	e	enum:TTag
TRunTime	skynet/3rd/lpeg/lptree.h	/^  TRunTime  \/* run-time capture: 'key' is Lua function;$/;"	e	enum:TTag
TSeq	skynet/3rd/lpeg/lptree.h	/^  TSeq,  \/* 'sib1' 'sib2' *\/$/;"	e	enum:TTag
TSet	skynet/3rd/lpeg/lptree.h	/^  TSet,  \/* the set is encoded in 'u.set' and the next 'u.set.size' bytes *\/$/;"	e	enum:TTag
TString	skynet/3rd/lua/lobject.h	/^typedef struct TString {$/;"	s
TString	skynet/3rd/lua/lobject.h	/^} TString;$/;"	t	typeref:struct:TString
TTag	skynet/3rd/lpeg/lptree.h	/^typedef enum TTag {$/;"	g
TTag	skynet/3rd/lpeg/lptree.h	/^} TTag;$/;"	t	typeref:enum:TTag
TTree	skynet/3rd/lpeg/lptree.h	/^typedef struct TTree {$/;"	s
TTree	skynet/3rd/lpeg/lptree.h	/^} TTree;$/;"	t	typeref:struct:TTree
TTrue	skynet/3rd/lpeg/lptree.h	/^  TTrue,$/;"	e	enum:TTag
TUTFR	skynet/3rd/lpeg/lptree.h	/^  TUTFR,  \/* range of UTF-8 codepoints; 'n' has initial codepoint;$/;"	e	enum:TTag
TValue	skynet/3rd/lua/lobject.h	/^typedef struct TValue {$/;"	s
TValue	skynet/3rd/lua/lobject.h	/^} TValue;$/;"	t	typeref:struct:TValue
TValuefields	skynet/3rd/lua/lobject.h	/^    TValuefields;  \/* fields for value *\/$/;"	m	struct:Node::NodeKey
TValuefields	skynet/3rd/lua/lobject.h	/^    TValuefields;$/;"	m	struct:StackValue::__anon13
TValuefields	skynet/3rd/lua/lobject.h	/^  TValuefields;$/;"	m	struct:TValue
TValuefields	skynet/3rd/lua/lobject.h	65;"	d
TValuefields	skynet/3rd/lua/lparser.h	/^    TValuefields;  \/* constant value (if it is a compile-time constant) *\/$/;"	m	struct:Vardesc::__anon26
TXInfo	skynet/3rd/lpeg/lptree.h	/^  TXInfo,  \/* extra info *\/$/;"	e	enum:TTag
TYPE_BOOLEAN	skynet/lualib-src/lua-seri.c	17;"	d	file:
TYPE_CLOSE	skynet/lualib-src/lua-netpack.c	23;"	d	file:
TYPE_DATA	skynet/lualib-src/lua-netpack.c	19;"	d	file:
TYPE_ERROR	skynet/lualib-src/lua-netpack.c	21;"	d	file:
TYPE_INIT	skynet/lualib-src/lua-netpack.c	25;"	d	file:
TYPE_LONG_STRING	skynet/lualib-src/lua-seri.c	31;"	d	file:
TYPE_MORE	skynet/lualib-src/lua-netpack.c	20;"	d	file:
TYPE_NIL	skynet/lualib-src/lua-seri.c	16;"	d	file:
TYPE_NUMBER	skynet/lualib-src/lua-seri.c	19;"	d	file:
TYPE_NUMBER_BYTE	skynet/lualib-src/lua-seri.c	22;"	d	file:
TYPE_NUMBER_DWORD	skynet/lualib-src/lua-seri.c	24;"	d	file:
TYPE_NUMBER_QWORD	skynet/lualib-src/lua-seri.c	25;"	d	file:
TYPE_NUMBER_REAL	skynet/lualib-src/lua-seri.c	26;"	d	file:
TYPE_NUMBER_WORD	skynet/lualib-src/lua-seri.c	23;"	d	file:
TYPE_NUMBER_ZERO	skynet/lualib-src/lua-seri.c	21;"	d	file:
TYPE_OPEN	skynet/lualib-src/lua-netpack.c	22;"	d	file:
TYPE_SHORT_STRING	skynet/lualib-src/lua-seri.c	29;"	d	file:
TYPE_TABLE	skynet/lualib-src/lua-seri.c	32;"	d	file:
TYPE_USERDATA	skynet/lualib-src/lua-seri.c	28;"	d	file:
TYPE_WARNING	skynet/lualib-src/lua-netpack.c	24;"	d	file:
Table	skynet/3rd/lua/lobject.h	/^typedef struct Table {$/;"	s
Table	skynet/3rd/lua/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Token	skynet/3rd/lua/llex.h	/^typedef struct Token {$/;"	s
Token	skynet/3rd/lua/llex.h	/^} Token;$/;"	t	typeref:struct:Token
UBox	skynet/3rd/lua/lauxlib.c	/^typedef struct UBox {$/;"	s	file:
UBox	skynet/3rd/lua/lauxlib.c	/^} UBox;$/;"	t	typeref:struct:UBox	file:
UDP_ADDRESS_SIZE	skynet/skynet-src/socket_server.c	49;"	d	file:
UNAME	skynet/3rd/lua/makefile	/^UNAME= uname$/;"	m
UNARY_PRIORITY	skynet/3rd/lua/lparser.c	1253;"	d	file:
UNUSED	skynet/3rd/lua/llimits.h	131;"	d
UNUSED	skynet/3rd/lua/ltests.h	27;"	d
UONE	skynet/3rd/lua/lmathlib.c	455;"	d	file:
UPVALNAME	skynet/3rd/lua/luac.c	216;"	d	file:
USEROBJECT	skynet/skynet-src/socket_server.c	62;"	d	file:
UTF8BUFFSZ	skynet/3rd/lua/lobject.h	798;"	d
UTF8PATT	skynet/3rd/lua/lutf8lib.c	270;"	d	file:
UValue	skynet/3rd/lua/lobject.h	/^typedef union UValue {$/;"	u
UValue	skynet/3rd/lua/lobject.h	/^} UValue;$/;"	t	typeref:union:UValue
Udata	skynet/3rd/lua/lobject.h	/^typedef struct Udata {$/;"	s
Udata	skynet/3rd/lua/lobject.h	/^} Udata;$/;"	t	typeref:struct:Udata
Udata0	skynet/3rd/lua/lobject.h	/^typedef struct Udata0 {$/;"	s
Udata0	skynet/3rd/lua/lobject.h	/^} Udata0;$/;"	t	typeref:struct:Udata0
UnOpr	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	skynet/3rd/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	skynet/3rd/lua/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	skynet/3rd/lua/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
Upvaldesc	skynet/3rd/lua/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	skynet/3rd/lua/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
VALUETYPE_BOOLEAN	skynet/lualib-src/lua-sharedata.c	17;"	d	file:
VALUETYPE_INTEGER	skynet/lualib-src/lua-sharedata.c	19;"	d	file:
VALUETYPE_NIL	skynet/lualib-src/lua-sharedata.c	14;"	d	file:
VALUETYPE_REAL	skynet/lualib-src/lua-sharedata.c	15;"	d	file:
VALUETYPE_STRING	skynet/lualib-src/lua-sharedata.c	16;"	d	file:
VALUETYPE_TABLE	skynet/lualib-src/lua-sharedata.c	18;"	d	file:
VALUE_BOOLEAN	skynet/lualib-src/lua-datasheet.c	12;"	d	file:
VALUE_INTEGER	skynet/lualib-src/lua-datasheet.c	10;"	d	file:
VALUE_INVALID	skynet/lualib-src/lua-datasheet.c	15;"	d	file:
VALUE_NIL	skynet/lualib-src/lua-datasheet.c	9;"	d	file:
VALUE_REAL	skynet/lualib-src/lua-datasheet.c	11;"	d	file:
VALUE_STRING	skynet/lualib-src/lua-datasheet.c	14;"	d	file:
VALUE_TABLE	skynet/lualib-src/lua-datasheet.c	13;"	d	file:
VCALL	skynet/3rd/lua/lparser.h	/^  VCALL,  \/* expression is a function call; info = instruction pc *\/$/;"	e	enum:__anon22
VCONST	skynet/3rd/lua/lparser.h	/^  VCONST,  \/* compile-time <const> variable;$/;"	e	enum:__anon22
VDKREG	skynet/3rd/lua/lparser.h	90;"	d
VERSION	skynet/3rd/lpeg/lptypes.h	18;"	d
VFALSE	skynet/3rd/lua/lparser.h	/^  VFALSE,  \/* constant false *\/$/;"	e	enum:__anon22
VINDEXED	skynet/3rd/lua/lparser.h	/^  VINDEXED,  \/* indexed variable;$/;"	e	enum:__anon22
VINDEXI	skynet/3rd/lua/lparser.h	/^  VINDEXI, \/* indexed variable with constant integer;$/;"	e	enum:__anon22
VINDEXSTR	skynet/3rd/lua/lparser.h	/^  VINDEXSTR, \/* indexed variable with literal string;$/;"	e	enum:__anon22
VINDEXUP	skynet/3rd/lua/lparser.h	/^  VINDEXUP,  \/* indexed upvalue;$/;"	e	enum:__anon22
VJMP	skynet/3rd/lua/lparser.h	/^  VJMP,  \/* expression is a test\/comparison;$/;"	e	enum:__anon22
VK	skynet/3rd/lua/lparser.h	/^  VK,  \/* constant in 'k'; info = index of constant in 'k' *\/$/;"	e	enum:__anon22
VKFLT	skynet/3rd/lua/lparser.h	/^  VKFLT,  \/* floating constant; nval = numerical float value *\/$/;"	e	enum:__anon22
VKINT	skynet/3rd/lua/lparser.h	/^  VKINT,  \/* integer constant; ival = numerical integer value *\/$/;"	e	enum:__anon22
VKSTR	skynet/3rd/lua/lparser.h	/^  VKSTR,  \/* string constant; strval = TString address;$/;"	e	enum:__anon22
VLOCAL	skynet/3rd/lua/lparser.h	/^  VLOCAL,  \/* local variable; var.ridx = register index;$/;"	e	enum:__anon22
VNIL	skynet/3rd/lua/lparser.h	/^  VNIL,  \/* constant nil *\/$/;"	e	enum:__anon22
VNONRELOC	skynet/3rd/lua/lparser.h	/^  VNONRELOC,  \/* expression has its value in a fixed register;$/;"	e	enum:__anon22
VOID	skynet/3rd/lua/luac.c	217;"	d	file:
VRELOC	skynet/3rd/lua/lparser.h	/^  VRELOC,  \/* expression can put result in any register;$/;"	e	enum:__anon22
VTRUE	skynet/3rd/lua/lparser.h	/^  VTRUE,  \/* constant true *\/$/;"	e	enum:__anon22
VUPVAL	skynet/3rd/lua/lparser.h	/^  VUPVAL,  \/* upvalue variable; info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon22
VVARARG	skynet/3rd/lua/lparser.h	/^  VVARARG  \/* vararg expression; info = instruction pc *\/$/;"	e	enum:__anon22
VVOID	skynet/3rd/lua/lparser.h	/^  VVOID,  \/* when 'expdesc' describes the last expression of a list,$/;"	e	enum:__anon22
Value	skynet/3rd/lua/lobject.h	/^typedef union Value {$/;"	u
Value	skynet/3rd/lua/lobject.h	/^} Value;$/;"	t	typeref:union:Value
Vardesc	skynet/3rd/lua/lparser.h	/^typedef union Vardesc {$/;"	u
Vardesc	skynet/3rd/lua/lparser.h	/^} Vardesc;$/;"	t	typeref:union:Vardesc
WARNING_SIZE	skynet/skynet-src/socket_server.c	60;"	d	file:
WHITE0BIT	skynet/3rd/lua/lgc.h	75;"	d
WHITE1BIT	skynet/3rd/lua/lgc.h	76;"	d
WHITEBITS	skynet/3rd/lua/lgc.h	84;"	d
WORD	skynet/3rd/lua-md5/md5.c	13;"	d	file:
WORD32	skynet/3rd/lua-md5/md5.c	/^typedef uint32_t WORD32;$/;"	t	file:
WORD32	skynet/3rd/lua-md5/md5.c	/^typedef unsigned int WORD32;$/;"	t	file:
WORK2MEM	skynet/3rd/lua/lgc.c	53;"	d	file:
XDIGITBIT	skynet/3rd/lua/lctype.h	43;"	d
Z	skynet/3rd/lua/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon37	file:
ZIO	skynet/3rd/lua/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	skynet/3rd/lua/lzio.h	/^struct Zio {$/;"	s
]], {tonumber 	skynet/3rd/lpeg/test.lua	/^]], {tonumber = tonumber, add = function (a,b) return a + b end})$/;"	f
_CRT_SECURE_NO_WARNINGS	skynet/3rd/lua/lprefix.h	39;"	d
_FILE_OFFSET_BITS	skynet/3rd/lua/lprefix.h	27;"	d
_LARGEFILE_SOURCE	skynet/3rd/lua/lprefix.h	26;"	d
_M.connect	skynet/lualib/skynet/db/mysql.lua	/^function _M.connect(opts)$/;"	f
_M.disconnect	skynet/lualib/skynet/db/mysql.lua	/^function _M.disconnect(self)$/;"	f
_M.execute	skynet/lualib/skynet/db/mysql.lua	/^function _M.execute(self, stmt, ...)$/;"	f
_M.new	skynet/lualib/skynet/db/redis/cluster.lua	/^function _M.new(startup_nodes,opt,onmessage)$/;"	f
_M.new 	game/myservice/json.lua	/^_M.new = function()$/;"	f
_M.ping	skynet/lualib/skynet/db/mysql.lua	/^function _M.ping(self)$/;"	f
_M.prepare	skynet/lualib/skynet/db/mysql.lua	/^function _M.prepare(self, sql)$/;"	f
_M.query	skynet/lualib/skynet/db/mysql.lua	/^function _M.query(self, query)$/;"	f
_M.quote_sql_str	skynet/lualib/skynet/db/mysql.lua	/^function _M.quote_sql_str( str)$/;"	f
_M.server_ver	skynet/lualib/skynet/db/mysql.lua	/^function _M.server_ver(self)$/;"	f
_M.set_compact_arrays	skynet/lualib/skynet/db/mysql.lua	/^function _M.set_compact_arrays(self, value)$/;"	f
_M.stmt_close	skynet/lualib/skynet/db/mysql.lua	/^function _M.stmt_close(self, stmt)$/;"	f
_M.stmt_reset	skynet/lualib/skynet/db/mysql.lua	/^function _M.stmt_reset(self, stmt)$/;"	f
_XOPEN_SOURCE	skynet/3rd/lua/lprefix.h	17;"	d
_XOPEN_SOURCE	skynet/3rd/lua/lprefix.h	19;"	d
__gc 	skynet/lualib/skynet/datasheet/init.lua	/^	__gc = function(t)$/;"	f
__gc 	skynet/lualib/skynet/db/redis.lua	/^	__gc = function(self)$/;"	f
__gc 	skynet/lualib/skynet/multicast.lua	/^	__gc = function(self)$/;"	f
__gc 	skynet/lualib/skynet/socketchannel.lua	/^	__gc = function(cs)$/;"	f
__index		skynet/lualib/skynet/db/mongo.lua	/^	__index	= function (self, key)$/;"	f
__index		skynet/lualib/skynet/db/mongo.lua	/^	__index	= function(self, key)$/;"	f
__index 	game/myservice/common.lua	/^        __index = function(obj, k)$/;"	f
__index 	skynet/lualib/skynet/db/redis/cluster.lua	/^	__index = function (t,cmd)$/;"	f
__index 	skynet/lualib/skynet/snax.lua	/^		__index = function( t, k )$/;"	f
__index 	skynet/test/testbson.lua	/^	__index = function(self, idx) return tostring(idx) end,$/;"	f
__index 	skynet/test/testpipeline.lua	/^			__index = function (_, name)$/;"	f
__init__	skynet/test/testredis2.lua	/^function __init__()$/;"	f
__len 	skynet/test/testbson.lua	/^	__len = function(self) return self.n end,$/;"	f
__newindex 	game/myservice/common.lua	/^        __newindex = function(obj, k, v)$/;"	f
__newindex 	game/myservice/table_ext.lua	/^    __newindex = function()$/;"	f
__parse_addr	skynet/lualib/skynet/db/mongo.lua	/^local function __parse_addr(addr)$/;"	f
__tostring 	game/myservice/tool.lua	/^            __tostring = function(t)$/;"	f
__tostring 	skynet/lualib/skynet/db/mongo.lua	/^	__tostring = function (self)$/;"	f
__tostring 	skynet/lualib/skynet/multicast.lua	/^	__tostring = function (self)$/;"	f
_add_backup	skynet/lualib/skynet/socketchannel.lua	/^	local function _add_backup()$/;"	f
_bio_read	skynet/lualib-src/ltls.c	/^_bio_read(lua_State* L, struct tls_context* tls_p) {$/;"	f	file:
_bio_write	skynet/lualib-src/ltls.c	/^_bio_write(lua_State* L, struct tls_context* tls_p, const char* s, size_t len) {$/;"	f	file:
_cb	skynet/lualib-src/lua-skynet.c	/^_cb(struct skynet_context * context, void * ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
_cb	skynet/service-src/service_gate.c	/^_cb(struct skynet_context * ctx, void * ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
_cb_pre	skynet/lualib-src/lua-skynet.c	/^_cb_pre(struct skynet_context * context, void * ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
_check_context	skynet/lualib-src/ltls.c	/^_check_context(lua_State* L, int idx) {$/;"	f	file:
_check_sslctx	skynet/lualib-src/ltls.c	/^_check_sslctx(lua_State* L, int idx) {$/;"	f	file:
_close_websocket	skynet/lualib/http/websocket.lua	/^local function _close_websocket(ws_obj)$/;"	f
_compose_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_packet(self, req)$/;"	f
_compose_ping	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_ping(self)$/;"	f
_compose_query	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_query(self, query)$/;"	f
_compose_stmt_close	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_stmt_close(self, stmt)$/;"	f
_compose_stmt_execute	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_stmt_execute(self, stmt, cursor_type, args)$/;"	f
_compose_stmt_prepare	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_stmt_prepare(self, query)$/;"	f
_compose_stmt_reset	skynet/lualib/skynet/db/mysql.lua	/^local function _compose_stmt_reset(self, stmt)$/;"	f
_compute_token	skynet/lualib/skynet/db/mysql.lua	/^local function _compute_token(password, scramble)$/;"	f
_connect_once	skynet/lualib/skynet/socketchannel.lua	/^	local function _connect_once(self, addr)$/;"	f
_create_client	skynet/test/testmongodb.lua	/^local function _create_client()$/;"	f
_ctrl	skynet/service-src/service_gate.c	/^_ctrl(struct gate * g, const void * msg, int sz) {$/;"	f	file:
_debug_dispatch	skynet/lualib/skynet/debug.lua	/^	local function _debug_dispatch(session, address, cmd, ...)$/;"	f
_drop_queue	skynet/skynet-src/skynet_mq.c	/^_drop_queue(struct message_queue *q, message_drop drop_func, void *ud) {$/;"	f	file:
_error_dispatch	skynet/lualib/skynet.lua	/^local function _error_dispatch(error_session, error_source)$/;"	f
_execute_resp	skynet/lualib/skynet/db/mysql.lua	/^local function _execute_resp(self)$/;"	f
_filter_args	skynet/skynet-src/skynet_server.c	/^_filter_args(struct skynet_context * context, int type, int *session, void ** data, size_t * sz) {$/;"	f	file:
_forward	skynet/service-src/service_gate.c	/^_forward(struct gate *g, struct connection * c, int size) {$/;"	f	file:
_forward_agent	skynet/service-src/service_gate.c	/^_forward_agent(struct gate * g, int fd, uint32_t agentaddr, uint32_t clientaddr) {$/;"	f	file:
_forward_pre	skynet/lualib-src/lua-skynet.c	/^_forward_pre(struct skynet_context *context, void *ud, int type, int session, uint32_t source, const void *msg, size_t sz) {$/;"	f	file:
_from_cstring	skynet/lualib/skynet/db/mysql.lua	/^local function _from_cstring(data, i)$/;"	f
_from_length_coded_bin	skynet/lualib/skynet/db/mysql.lua	/^local function _from_length_coded_bin(data, pos)$/;"	f
_from_length_coded_str	skynet/lualib/skynet/db/mysql.lua	/^local function _from_length_coded_str(data, pos)$/;"	f
_get_byte1	skynet/lualib/skynet/db/mysql.lua	/^local function _get_byte1(data, i)$/;"	f
_get_byte2	skynet/lualib/skynet/db/mysql.lua	/^local function _get_byte2(data, i)$/;"	f
_get_byte3	skynet/lualib/skynet/db/mysql.lua	/^local function _get_byte3(data, i)$/;"	f
_get_byte4	skynet/lualib/skynet/db/mysql.lua	/^local function _get_byte4(data, i)$/;"	f
_get_byte8	skynet/lualib/skynet/db/mysql.lua	/^local function _get_byte8(data, i)$/;"	f
_get_datetime	skynet/lualib/skynet/db/mysql.lua	/^local function _get_datetime(data, pos)$/;"	f
_get_double	skynet/lualib/skynet/db/mysql.lua	/^local function _get_double(data, i)$/;"	f
_get_float	skynet/lualib/skynet/db/mysql.lua	/^local function _get_float(data, i)$/;"	f
_get_int1	skynet/lualib/skynet/db/mysql.lua	/^local function _get_int1(data, i, is_signed)$/;"	f
_get_int2	skynet/lualib/skynet/db/mysql.lua	/^local function _get_int2(data, i, is_signed)$/;"	f
_get_int3	skynet/lualib/skynet/db/mysql.lua	/^local function _get_int3(data, i, is_signed)$/;"	f
_get_int4	skynet/lualib/skynet/db/mysql.lua	/^local function _get_int4(data, i, is_signed)$/;"	f
_get_int8	skynet/lualib/skynet/db/mysql.lua	/^local function _get_int8(data, i, is_signed)$/;"	f
_init_bio	skynet/lualib-src/ltls.c	/^_init_bio(lua_State* L, struct tls_context* tls_p, struct ssl_ctx* ctx_p) {$/;"	f	file:
_init_client_context	skynet/lualib-src/ltls.c	/^_init_client_context(lua_State* L, struct tls_context* tls_p, struct ssl_ctx* ctx_p) {$/;"	f	file:
_init_env	skynet/skynet-src/skynet_main.c	/^_init_env(lua_State *L) {$/;"	f	file:
_init_server_context	skynet/lualib-src/ltls.c	/^_init_server_context(lua_State* L, struct tls_context* tls_p, struct ssl_ctx* ctx_p) {$/;"	f	file:
_insert_name	skynet/skynet-src/skynet_handle.c	/^_insert_name(struct handle_storage *s, const char * name, uint32_t handle) {$/;"	f	file:
_insert_name_before	skynet/skynet-src/skynet_handle.c	/^_insert_name_before(struct handle_storage *s, char *name, uint32_t handle, int before) {$/;"	f	file:
_isws_closed	skynet/lualib/http/websocket.lua	/^local function _isws_closed(id)$/;"	f
_lctx_cert	skynet/lualib-src/ltls.c	/^_lctx_cert(lua_State* L) {$/;"	f	file:
_lctx_ciphers	skynet/lualib-src/ltls.c	/^_lctx_ciphers(lua_State* L) {$/;"	f	file:
_lctx_gc	skynet/lualib-src/ltls.c	/^_lctx_gc(lua_State* L) {$/;"	f	file:
_ltls_context_close	skynet/lualib-src/ltls.c	/^_ltls_context_close(lua_State* L) {$/;"	f	file:
_ltls_context_finished	skynet/lualib-src/ltls.c	/^_ltls_context_finished(lua_State* L) {$/;"	f	file:
_ltls_context_handshake	skynet/lualib-src/ltls.c	/^_ltls_context_handshake(lua_State* L) {$/;"	f	file:
_ltls_context_read	skynet/lualib-src/ltls.c	/^_ltls_context_read(lua_State* L) {$/;"	f	file:
_ltls_context_write	skynet/lualib-src/ltls.c	/^_ltls_context_write(lua_State* L) {$/;"	f	file:
_memory_block	skynet/skynet-src/malloc_hook.c	/^static ATOM_SIZET _memory_block = 0;$/;"	v	file:
_mysql_login	skynet/lualib/skynet/db/mysql.lua	/^local function _mysql_login(self, user, password, charset, database, on_connect)$/;"	f
_new_client_ws	skynet/lualib/http/websocket.lua	/^local function _new_client_ws(socket_id, protocol, hostname)$/;"	f
_new_server_ws	skynet/lualib/http/websocket.lua	/^local function _new_server_ws(socket_id, handle, protocol)$/;"	f
_next_addr	skynet/lualib/skynet/socketchannel.lua	/^	local function _next_addr()$/;"	f
_parm	skynet/service-src/service_gate.c	/^_parm(char *msg, int sz, int command_sz) {$/;"	f	file:
_parse_eof_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_eof_packet(packet)$/;"	f
_parse_err_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_err_packet(packet)$/;"	f
_parse_field_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_field_packet(data)$/;"	f
_parse_ok_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_ok_packet(packet)$/;"	f
_parse_result_set_header_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_result_set_header_packet(packet)$/;"	f
_parse_row_data_binary	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_row_data_binary(data, cols, compact)$/;"	f
_parse_row_data_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _parse_row_data_packet(data, cols, compact)$/;"	f
_patch	skynet/lualib/snax/hotfix.lua	/^local function _patch(global, f)$/;"	f
_prepare_resp	skynet/lualib/skynet/db/mysql.lua	/^local function _prepare_resp(self, sql)$/;"	f
_query	skynet/skynet-src/skynet_module.c	/^_query(const char * name) {$/;"	f	file:
_query_resp	skynet/lualib/skynet/db/mysql.lua	/^local function _query_resp(self)$/;"	f
_recv_decode_packet_resp	skynet/lualib/skynet/db/mysql.lua	/^local function _recv_decode_packet_resp(self)$/;"	f
_recv_field_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _recv_field_packet(self, sock)$/;"	f
_recv_packet	skynet/lualib/skynet/db/mysql.lua	/^local function _recv_packet(self, sock)$/;"	f
_release	skynet/skynet-src/skynet_mq.c	/^_release(struct message_queue *q) {$/;"	f	file:
_report	skynet/service-src/service_gate.c	/^_report(struct gate * g, const char * data, ...) {$/;"	f	file:
_return_message	skynet/service-src/databuffer.h	/^_return_message(struct databuffer *db, struct messagepool *mp) {$/;"	f
_set_byte2	skynet/lualib/skynet/db/mysql.lua	/^local function _set_byte2(n)$/;"	f
_set_double	skynet/lualib/skynet/db/mysql.lua	/^local function _set_double(n)$/;"	f
_set_int8	skynet/lualib/skynet/db/mysql.lua	/^local function _set_int8(n)$/;"	f
_set_length_coded_bin	skynet/lualib/skynet/db/mysql.lua	/^local function _set_length_coded_bin(n)$/;"	f
_stringify_lvalue	game/myservice/tool.lua	/^function _stringify_lvalue(object, deep)$/;"	f
_stringify_rvalue	game/myservice/tool.lua	/^function _stringify_rvalue(object, deep)$/;"	f
_try_open	skynet/skynet-src/skynet_module.c	/^_try_open(struct modules *m, const char * name) {$/;"	f	file:
_used_memory	skynet/skynet-src/malloc_hook.c	/^static ATOM_SIZET _used_memory = 0;$/;"	v	file:
a 	game/myclient/player_client_t.lua	/^    a = function(self)$/;"	f
a, b) return tostring	skynet/service/debug_console.lua	/^	table.sort(index, function(a, b) return tostring(a) < tostring(b) end)$/;"	f
absentkey	skynet/3rd/lua/ltable.c	/^static const TValue absentkey = {ABSTKEYCONSTANT};$/;"	v	file:
abslineinfo	skynet/3rd/lua/lobject.h	/^  AbsLineInfo *abslineinfo;  \/* idem *\/$/;"	m	struct:Proto
accept	skynet/lualib/snax/loginserver.lua	/^local function accept(conf, s, fd, addr)$/;"	f
accept	skynet/test/testsocket.lua	/^	local function accept(id)$/;"	f
accept.exit	skynet/test/pingserver.lua	/^function accept.exit(...)$/;"	f
accept.hello	skynet/test/pingserver.lua	/^function accept.hello()$/;"	f
accept.hello	skynet/test/testping.lua	/^function accept.hello()$/;"	f
accept.sleep	skynet/test/pingserver.lua	/^function accept.sleep(queue, n)$/;"	f
accept_slave	skynet/service/cslave.lua	/^local function accept_slave(fd)$/;"	f
accumulatorcap	skynet/3rd/lpeg/lpcap.c	/^static int accumulatorcap (CapState *cs) {$/;"	f	file:
action 	game/myservice/player_t.lua	/^action = function(self, f, ...)$/;"	f
activeL	skynet/service-src/service_snlua.c	/^	lua_State * activeL;$/;"	m	struct:snlua	file:
actvar	skynet/3rd/lua/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon27
add	skynet/3rd/lpeg/lpeg.html	/^function add (acc, newvalue) return acc + newvalue end$/;"	f
add1	skynet/test/testredis2.lua	/^function add1(key, count)$/;"	f
add2	skynet/test/testredis2.lua	/^function add2(key, count)$/;"	f
add_book 	game/myservice/player_t.lua	/^add_book = function(self, book)$/;"	f
add_card 	game/myservice/player_t.lua	/^add_card = function(self)$/;"	f
add_exp 	game/myservice/player_t.lua	/^add_exp = function(self, exp)$/;"	f
add_item 	game/myservice/player_t.lua	/^add_item = function(self, name, num)$/;"	f
add_list	skynet/service/service_mgr.lua	/^	local function add_list(all, m)$/;"	f
add_node	skynet/skynet-src/skynet_timer.c	/^add_node(struct timer *T,struct timer_node *node) {$/;"	f	file:
add_padding	skynet/lualib-src/lua-crypt.c	/^add_padding(lua_State *L, uint8_t buf[8], const uint8_t *src, int offset, int mode) {$/;"	f	file:
add_s	skynet/3rd/lua/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_stone 	game/myservice/player_t.lua	/^add_stone = function(self, stone)$/;"	f
add_task 	game/myservice/player_t.lua	/^add_task = function(self, task_need)$/;"	f
add_udp_socket	skynet/skynet-src/socket_server.c	/^add_udp_socket(struct socket_server *ss, struct request_udp *udp) {$/;"	f	file:
add_value	skynet/3rd/lua/lstrlib.c	/^static int add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_watch_hook	skynet/lualib/skynet/remotedebug.lua	/^local function add_watch_hook()$/;"	f
addcharset	skynet/3rd/lpeg/lpcode.c	/^static void addcharset (CompileState *compst, int inst, charsetinfo *info) {$/;"	f	file:
adddef 	skynet/3rd/lpeg/re.lua	/^local function adddef (t, k, exp)$/;"	f
adddigit	skynet/3rd/lua/lstrlib.c	/^static lua_Number adddigit (char *buff, int n, lua_Number x) {$/;"	f	file:
adddyncaptures	skynet/3rd/lpeg/lpvm.c	/^static void adddyncaptures (Index_t index, Capture *capture, int n, int fd) {$/;"	f	file:
addfield	skynet/3rd/lua/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, lua_Integer i) {$/;"	f	file:
addinstcap	skynet/3rd/lpeg/lpcode.c	/^static int addinstcap (CompileState *compst, Opcode op, int cap, int key,$/;"	f	file:
addinstruction	skynet/3rd/lpeg/lpcode.c	/^static int addinstruction (CompileState *compst, Opcode op, int aux) {$/;"	f	file:
addk	skynet/3rd/lua/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	skynet/3rd/lua/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addliteral	skynet/3rd/lua/lstrlib.c	/^static void addliteral (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addnum2buff	skynet/3rd/lua/lobject.c	/^static void addnum2buff (BuffFS *buff, TValue *num) {$/;"	f	file:
addoffsetinst	skynet/3rd/lpeg/lpcode.c	/^static int addoffsetinst (CompileState *compst, Opcode op) {$/;"	f	file:
addonestring	skynet/3rd/lpeg/lpcap.c	/^static int addonestring (luaL_Buffer *b, CapState *cs, const char *what) {$/;"	f	file:
addprototype	skynet/3rd/lua/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	skynet/3rd/lua/lstrlib.c	/^static void addquoted (luaL_Buffer *b, const char *s, size_t len) {$/;"	f	file:
address	skynet/lualib/skynet/sharetable.lua	/^		local function address(refs)$/;"	f
address	skynet/skynet-src/socket_server.c	/^	uint8_t address[UDP_ADDRESS_SIZE];$/;"	m	struct:request_send_udp	file:
address	skynet/skynet-src/socket_server.c	/^	uint8_t address[UDP_ADDRESS_SIZE];$/;"	m	struct:request_setudp	file:
address_port	skynet/lualib-src/lua-socket.c	/^address_port(lua_State *L, char *tmp, const char * addr, int port_index, int *port) {$/;"	f	file:
addreturn	skynet/3rd/lua/lua.c	/^static int addreturn (lua_State *L) {$/;"	f	file:
addsize	skynet/3rd/lua/lobject.c	446;"	d	file:
addstr	skynet/3rd/lua/lobject.c	565;"	d	file:
addstr2buff	skynet/3rd/lua/lobject.c	/^static void addstr2buff (BuffFS *buff, const char *str, size_t slen) {$/;"	f	file:
addtoclib	skynet/3rd/lua/loadlib.c	/^static void addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
addtoktable	skynet/3rd/lpeg/lptree.c	/^static int addtoktable (lua_State *L, int idx) {$/;"	f	file:
addtonewktable	skynet/3rd/lpeg/lptree.c	/^static int addtonewktable (lua_State *L, int p, int idx) {$/;"	f	file:
adjust	skynet/lualib/sprotoparser.lua	/^local function adjust(r)$/;"	f
adjust_address	skynet/service/debug_console.lua	/^local function adjust_address(address)$/;"	f
adjust_assign	skynet/3rd/lua/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjustlocalvars	skynet/3rd/lua/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	skynet/3rd/lua/lapi.h	26;"	d
agent	skynet/service-src/service_gate.c	/^	uint32_t agent;$/;"	m	struct:connection	file:
aggregate_cursor:count	skynet/lualib/skynet/db/mongo.lua	/^function aggregate_cursor:count(with_limit_and_skip)$/;"	f
aggregate_cursor:hasNext	skynet/lualib/skynet/db/mongo.lua	/^function aggregate_cursor:hasNext()$/;"	f
alimit	skynet/3rd/lua/lobject.h	/^  unsigned int alimit;  \/* "limit" of 'array' array *\/$/;"	m	struct:Table
allgc	skynet/3rd/lua/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
alloc_count	skynet/3rd/lua/ltests.c	/^static int alloc_count (lua_State *L) {$/;"	f	file:
alloc_failnext	skynet/3rd/lua/ltests.c	/^static int alloc_failnext (lua_State *L) {$/;"	f	file:
alloc_id	skynet/skynet-src/socket_server.c	/^	ATOM_INT alloc_id;$/;"	m	struct:socket_server	file:
allocated	skynet/skynet-src/malloc_hook.c	/^	ATOM_SIZET allocated;$/;"	m	struct:mem_data	file:
allocsizenode	skynet/3rd/lua/ltable.h	31;"	d
allocupvalue	skynet/3rd/lua/lparser.c	/^static Upvaldesc *allocupvalue (FuncState *fs) {$/;"	f	file:
allowhook	skynet/3rd/lua/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	skynet/3rd/lua/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
anywhere	skynet/3rd/lpeg/lpeg.html	/^function anywhere (p)$/;"	f
api_check	skynet/3rd/lua/llimits.h	126;"	d
api_checknelems	skynet/3rd/lua/lapi.h	32;"	d
api_incr_top	skynet/3rd/lua/lapi.h	16;"	d
append_key	skynet/lualib-src/lua-bson.c	/^append_key(struct bson *bs, lua_State *L, int type, const char *key, size_t sz) {$/;"	f	file:
append_number	skynet/lualib-src/lua-bson.c	/^append_number(struct bson *bs, lua_State *L, const char *key, size_t sz) {$/;"	f	file:
append_one	skynet/lualib-src/lua-bson.c	/^append_one(struct bson *bs, lua_State *L, const char *key, size_t sz, int depth) {$/;"	f	file:
append_sendbuffer	skynet/skynet-src/socket_server.c	/^append_sendbuffer(struct socket_server *ss, struct socket *s, struct request_send * request) {$/;"	f	file:
append_sendbuffer_	skynet/skynet-src/socket_server.c	/^append_sendbuffer_(struct socket_server *ss, struct wb_list *s, struct request_send * request, int size) {$/;"	f	file:
append_sendbuffer_low	skynet/skynet-src/socket_server.c	/^append_sendbuffer_low(struct socket_server *ss,struct socket *s, struct request_send * request) {$/;"	f	file:
append_sendbuffer_udp	skynet/skynet-src/socket_server.c	/^append_sendbuffer_udp(struct socket_server *ss, struct socket *s, int priority, struct request_send * request, const uint8_t udp_address[UDP_ADDRESS_SIZE]) {$/;"	f	file:
append_table	skynet/lualib-src/lua-bson.c	/^append_table(struct bson *bs, lua_State *L, const char *key, size_t sz, int depth) {$/;"	f	file:
arith	skynet/3rd/lua/lstrlib.c	/^static int arith (lua_State *L, int op, const char *mtname) {$/;"	f	file:
arith_add	skynet/3rd/lua/lstrlib.c	/^static int arith_add (lua_State *L) {$/;"	f	file:
arith_div	skynet/3rd/lua/lstrlib.c	/^static int arith_div (lua_State *L) {$/;"	f	file:
arith_idiv	skynet/3rd/lua/lstrlib.c	/^static int arith_idiv (lua_State *L) {$/;"	f	file:
arith_mod	skynet/3rd/lua/lstrlib.c	/^static int arith_mod (lua_State *L) {$/;"	f	file:
arith_mul	skynet/3rd/lua/lstrlib.c	/^static int arith_mul (lua_State *L) {$/;"	f	file:
arith_pow	skynet/3rd/lua/lstrlib.c	/^static int arith_pow (lua_State *L) {$/;"	f	file:
arith_sub	skynet/3rd/lua/lstrlib.c	/^static int arith_sub (lua_State *L) {$/;"	f	file:
arith_unm	skynet/3rd/lua/lstrlib.c	/^static int arith_unm (lua_State *L) {$/;"	f	file:
arr	skynet/3rd/lua/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon27
arr	skynet/3rd/lua/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	skynet/3rd/lua/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
array	skynet/lualib-src/lua-datasheet.c	/^	uint32_t array;$/;"	m	struct:table	file:
array	skynet/lualib-src/lua-sharedata.c	/^	union value * array;$/;"	m	struct:table	typeref:union:table::value	file:
array_index	skynet/lualib-src/sproto/lsproto.c	/^	int array_index;$/;"	m	struct:decode_ud	file:
array_index	skynet/lualib-src/sproto/lsproto.c	/^	int array_index;$/;"	m	struct:encode_ud	file:
array_tag	skynet/lualib-src/sproto/lsproto.c	/^	const char * array_tag;$/;"	m	struct:decode_ud	file:
array_tag	skynet/lualib-src/sproto/lsproto.c	/^	const char * array_tag;$/;"	m	struct:encode_ud	file:
arrayindex	skynet/3rd/lua/ltable.c	/^static unsigned int arrayindex (lua_Integer k) {$/;"	f	file:
arraytype	skynet/lualib-src/lua-sharedata.c	/^	uint8_t *arraytype;$/;"	m	struct:table	file:
assert(m.match(function (_, _) return i end, s) 	skynet/3rd/lpeg/test.lua	/^  assert(m.match(function (_, _) return i end, s) == i)$/;"	f
assert(m.match(m.P(1)^0 * function (_, i) return true end, s) 	skynet/3rd/lpeg/test.lua	/^assert(m.match(m.P(1)^0 * function (_, i) return true end, s) ==$/;"	f
assert(type(f) 	skynet/lualib/skynet/require.lua	/^	assert(type(f) == "function")$/;"	f
assert_socket	skynet/lualib/snax/loginserver.lua	/^local function assert_socket(service, v, fd)$/;"	f
atomic	skynet/3rd/lua/lgc.c	/^static lu_mem atomic (lua_State *L) {$/;"	f	file:
atomic2gen	skynet/3rd/lua/lgc.c	/^static void atomic2gen (lua_State *L, global_State *g) {$/;"	f	file:
atomic_clear_	skynet/skynet-src/spinlock.h	53;"	d
atomic_flag_	skynet/skynet-src/spinlock.h	13;"	d
atomic_flag_clear_	skynet/skynet-src/spinlock.h	16;"	d
atomic_flag_test_and_set_	skynet/skynet-src/spinlock.h	15;"	d
atomic_load_relaxed_	skynet/skynet-src/spinlock.h	54;"	d
atomic_pause_	skynet/skynet-src/spinlock.h	58;"	d
atomic_pause_	skynet/skynet-src/spinlock.h	60;"	d
atomic_test_and_set_	skynet/skynet-src/spinlock.h	52;"	d
atomic_value_type_	skynet/skynet-src/atomic.h	31;"	d
atomic_value_type_	skynet/skynet-src/atomic.h	35;"	d
atwordboundary	skynet/3rd/lpeg/lpeg.html	/^function atwordboundary (p)$/;"	f
auth	skynet/lualib/snax/loginserver.lua	/^	local function auth(fd, addr)$/;"	f
auth	skynet/lualib/snax/msgserver.lua	/^	local function auth(fd, addr, msg, sz)$/;"	f
auth_fd	skynet/lualib/snax/loginserver.lua	/^	local function auth_fd(fd, addr)$/;"	f
auth_method:auth_mongodb_cr	skynet/lualib/skynet/db/mongo.lua	/^function auth_method:auth_mongodb_cr(user,password)$/;"	f
auth_method:auth_scram_sha1	skynet/lualib/skynet/db/mongo.lua	/^function auth_method:auth_scram_sha1(username,password)$/;"	f
autoclose_cb	skynet/lualib/skynet/socketchannel.lua	/^local function autoclose_cb(self, fd)$/;"	f
aux1	skynet/3rd/lpeg/lpvm.h	/^    byte aux1;$/;"	m	struct:Instruction::Inst
aux2	skynet/3rd/lpeg/lpvm.h	/^    } aux2;$/;"	m	struct:Instruction::Inst	typeref:union:Instruction::Inst::__anon6
aux_close	skynet/3rd/lua/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	skynet/3rd/lua/ltablib.c	33;"	d	file:
aux_lines	skynet/3rd/lua/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_rawset	skynet/3rd/lua/lapi.c	/^static void aux_rawset (lua_State *L, int idx, TValue *key, int n) {$/;"	f	file:
aux_upvalue	skynet/3rd/lua/lapi.c	/^static const char *aux_upvalue (TValue *fi, int n, TValue **val,$/;"	f	file:
auxemptycap	skynet/3rd/lpeg/lptree.c	/^static TTree *auxemptycap (TTree *tree, int cap) {$/;"	f	file:
auxgetinfo	skynet/3rd/lua/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxgetstr	skynet/3rd/lua/lapi.c	/^l_sinline int auxgetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f
auxresume	skynet/3rd/lua/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxresume	skynet/service-src/service_snlua.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsend_checkconflict	skynet/lualib/skynet.lua	/^	local function auxsend_checkconflict(addr, proto, msg, sz)$/;"	f
auxsend_checkrewind	skynet/lualib/skynet.lua	/^	local function auxsend_checkrewind(addr, proto, msg, sz)$/;"	f
auxsetstr	skynet/3rd/lua/lapi.c	/^static void auxsetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxsort	skynet/3rd/lua/ltablib.c	/^static void auxsort (lua_State *L, IdxT lo, IdxT up,$/;"	f	file:
auxstatus	skynet/3rd/lua/lcorolib.c	/^static int auxstatus (lua_State *L, lua_State *co) {$/;"	f	file:
auxtimeout_checkconflict	skynet/lualib/skynet.lua	/^	local function auxtimeout_checkconflict(timeout)$/;"	f
auxtimeout_checkrewind	skynet/lualib/skynet.lua	/^	local function auxtimeout_checkrewind(timeout)$/;"	f
auxupvalue	skynet/3rd/lua/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
b	skynet/3rd/lua/lauxlib.h	/^    char b[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	union:luaL_Buffer::__anon8
b	skynet/3rd/lua/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	skynet/3rd/lua/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b 	game/myclient/player_client_t.lua	/^    b = function(self)$/;"	f
b64index	skynet/lualib-src/lua-crypt.c	/^b64index(uint8_t c) {$/;"	f	file:
b_str2int	skynet/3rd/lua/lbaselib.c	/^static const char *b_str2int (const char *s, int base, lua_Integer *pn) {$/;"	f	file:
backrefcap	skynet/3rd/lpeg/lpcap.c	/^static int backrefcap (CapState *cs) {$/;"	f	file:
badexit	skynet/3rd/lua/ltests.c	/^static void badexit (const char *fmt, const char *s1, const char *s2) {$/;"	f	file:
badgrammar 	skynet/3rd/lpeg/test.lua	/^local function badgrammar (g, expected)$/;"	f
balanced	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="balanced"><\/a>Balanced parentheses<\/h3>$/;"	a
base	skynet/lualib-src/sproto/sproto.c	/^	int base;$/;"	m	struct:sproto_type	file:
base_ci	skynet/3rd/lua/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_funcs	skynet/3rd/lua/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	skynet/3rd/lua/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
basic	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="basic">Basic Constructions<\/a><\/h2>$/;"	a
basic	skynet/3rd/lpeg/re.html	/^<h2><a name="basic"><\/a>The <code>re<\/code> Module<\/h2>$/;"	a
basiclookfor 	skynet/3rd/lpeg/test.lua	/^function basiclookfor (p)$/;"	f
bind	skynet/skynet-src/socket_server.c	/^		struct request_bind bind;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_bind	file:
bind_socket	skynet/skynet-src/socket_server.c	/^bind_socket(struct socket_server *ss, struct request_bind *request, struct socket_message *result) {$/;"	f	file:
bindata	skynet/3rd/lua/lobject.h	/^  union {LUAI_MAXALIGN;} bindata;$/;"	m	struct:Udata0	typeref:union:Udata0::__anon16
binopr2TM	skynet/3rd/lua/lcode.c	/^l_sinline TMS binopr2TM (BinOpr opr) {$/;"	f
binopr2op	skynet/3rd/lua/lcode.c	/^l_sinline OpCode binopr2op (BinOpr opr, BinOpr baser, OpCode base) {$/;"	f
binsearch	skynet/3rd/lua/ltable.c	/^static unsigned int binsearch (const TValue *array, unsigned int i,$/;"	f	file:
bit2mask	skynet/3rd/lua/lgc.h	64;"	d
bitmap	skynet/3rd/lpeg/lptree.h	/^      byte bitmap[1];  \/* bitmap (open array) *\/$/;"	m	struct:TTree::__anon4::__anon5
bitmask	skynet/3rd/lua/lgc.h	63;"	d
bl	skynet/3rd/lua/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
blen	skynet/3rd/lua/lobject.c	/^  int blen;  \/* length of partial string in 'space' *\/$/;"	m	struct:BuffFS	file:
blk	skynet/lualib-src/lsha1.c	112;"	d	file:
blk0	skynet/lualib-src/lsha1.c	107;"	d	file:
blk0	skynet/lualib-src/lsha1.c	109;"	d	file:
blk_alloc	skynet/lualib-src/lua-seri.c	/^blk_alloc(void) {$/;"	f	file:
block	skynet/3rd/lua/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block	skynet/lualib-src/lua-seri.c	/^struct block {$/;"	s	file:
block_connect	skynet/lualib/skynet/socketchannel.lua	/^local function block_connect(self, once)$/;"	f
block_follow	skynet/3rd/lua/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
block_readpipe	skynet/skynet-src/socket_server.c	/^block_readpipe(int pipefd, void *buffer, int sz) {$/;"	f	file:
block_send	skynet/lualib-src/lua-clientsocket.c	/^block_send(lua_State *L, int fd, const char * buffer, int sz) {$/;"	f	file:
body	skynet/3rd/lua/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolF	skynet/3rd/lua/lcode.c	/^static int boolF (FuncState *fs) {$/;"	f	file:
boolT	skynet/3rd/lua/lcode.c	/^static int boolT (FuncState *fs) {$/;"	f	file:
boolean	skynet/lualib-src/lua-sharedata.c	/^	int boolean;$/;"	m	union:value	file:
boolean 	skynet/lualib/skynet/db/mysql.lua	/^    boolean = function(v)$/;"	f
boot	skynet/service/service_provider.lua	/^local function boot(addr, name, code, ...)$/;"	f
bootstrap	skynet/skynet-src/skynet_imp.h	/^	const char * bootstrap;$/;"	m	struct:skynet_config
bootstrap	skynet/skynet-src/skynet_start.c	/^bootstrap(struct skynet_context * logger, const char * cmdline) {$/;"	f	file:
box	skynet/3rd/lua/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:
box_state	skynet/lualib-src/lua-sharetable.c	/^box_state(lua_State *L, lua_State *mL) {$/;"	f	file:
boxgc	skynet/3rd/lua/lauxlib.c	/^static int boxgc (lua_State *L) {$/;"	f	file:
boxmt	skynet/3rd/lua/lauxlib.c	/^static const luaL_Reg boxmt[] = {  \/* box metamethods *\/$/;"	v	file:
boxreader	skynet/lualib-src/lua-stm.c	/^struct boxreader {$/;"	s	file:
boxstm	skynet/lualib-src/lua-stm.c	/^struct boxstm {$/;"	s	file:
break_lv	game/myservice/player_handler.lua	/^function break_lv(self)$/;"	f
breakstat	skynet/3rd/lua/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
broad_cast_to_onlines 	game/myservice/city_t.lua	/^broad_cast_to_onlines = function(self, exclude_agent, ...)$/;"	f
broker	skynet/service-src/service_gate.c	/^	uint32_t broker;$/;"	m	struct:gate	file:
bsize	skynet/3rd/lua/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:
bson	skynet/lualib-src/lua-bson.c	/^struct bson {$/;"	s	file:
bson_create	skynet/lualib-src/lua-bson.c	/^bson_create(struct bson *b) {$/;"	f	file:
bson_destroy	skynet/lualib-src/lua-bson.c	/^bson_destroy(struct bson *b) {$/;"	f	file:
bson_meta	skynet/lualib-src/lua-bson.c	/^bson_meta(lua_State *L) {$/;"	f	file:
bson_numstr	skynet/lualib-src/lua-bson.c	/^bson_numstr( char *str, unsigned int i ) {$/;"	f	file:
bson_numstr_len	skynet/lualib-src/lua-bson.c	/^static int bson_numstr_len[MAX_NUMBER];$/;"	v	file:
bson_numstrs	skynet/lualib-src/lua-bson.c	/^static char bson_numstrs[MAX_NUMBER][4];$/;"	v	file:
bson_reader	skynet/lualib-src/lua-bson.c	/^struct bson_reader {$/;"	s	file:
bson_reserve	skynet/lualib-src/lua-bson.c	/^bson_reserve(struct bson *b, int sz) {$/;"	f	file:
buff	skynet/3rd/lpeg/lpvm.h	/^  byte buff[1];$/;"	m	union:Instruction
buff	skynet/3rd/lua/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	skynet/3rd/lua/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	skynet/3rd/lua/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon10	file:
buff	skynet/3rd/lua/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buffer	skynet/3rd/lua/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer	skynet/lualib-src/lsha1.c	/^	uint8_t  buffer[64];$/;"	m	struct:__anon39	file:
buffer	skynet/lualib-src/lua-bson.c	/^	uint8_t buffer[DEFAULT_CAP];$/;"	m	struct:bson	file:
buffer	skynet/lualib-src/lua-clientsocket.c	/^	void * buffer;$/;"	m	struct:socket_buffer	file:
buffer	skynet/lualib-src/lua-mongo.c	/^	uint8_t buffer[DEFAULT_CAP];$/;"	m	struct:buffer	file:
buffer	skynet/lualib-src/lua-mongo.c	/^struct buffer {$/;"	s	file:
buffer	skynet/lualib-src/lua-netpack.c	/^	void * buffer;$/;"	m	struct:netpack	file:
buffer	skynet/lualib-src/lua-seri.c	/^	char * buffer;$/;"	m	struct:read_block	file:
buffer	skynet/lualib-src/lua-seri.c	/^	char buffer[BLOCK_SIZE];$/;"	m	struct:block	file:
buffer	skynet/service-src/databuffer.h	/^	char * buffer;$/;"	m	struct:message
buffer	skynet/service-src/service_gate.c	/^	struct databuffer buffer;$/;"	m	struct:connection	typeref:struct:connection::databuffer	file:
buffer	skynet/service-src/service_harbor.c	/^	void * buffer;$/;"	m	struct:harbor_msg	file:
buffer	skynet/skynet-src/skynet_socket.h	/^	char * buffer;$/;"	m	struct:skynet_socket_message
buffer	skynet/skynet-src/socket_buffer.h	/^	const void *buffer;$/;"	m	struct:socket_sendbuffer
buffer	skynet/skynet-src/socket_server.c	/^		char buffer[256];$/;"	m	union:request_package::__anon42	file:
buffer	skynet/skynet-src/socket_server.c	/^	char buffer[MAX_INFO];$/;"	m	struct:socket_server	file:
buffer	skynet/skynet-src/socket_server.c	/^	const void * buffer;$/;"	m	struct:request_send	file:
buffer	skynet/skynet-src/socket_server.c	/^	const void * buffer;$/;"	m	struct:send_object	file:
buffer	skynet/skynet-src/socket_server.c	/^	const void *buffer;$/;"	m	struct:write_buffer	file:
buffer	skynet/skynet-src/socket_server.c	/^	struct write_buffer buffer;$/;"	m	struct:write_buffer_udp	typeref:struct:write_buffer_udp::write_buffer	file:
buffer	skynet/skynet-src/socket_server.h	/^	const void * (*buffer)(const void *);$/;"	m	struct:socket_object_interface
buffer_create	skynet/lualib-src/lua-mongo.c	/^buffer_create(struct buffer *b) {$/;"	f	file:
buffer_destroy	skynet/lualib-src/lua-mongo.c	/^buffer_destroy(struct buffer *b) {$/;"	f	file:
buffer_node	skynet/lualib-src/lua-socket.c	/^struct buffer_node {$/;"	s	file:
buffer_reserve	skynet/lualib-src/lua-mongo.c	/^buffer_reserve(struct buffer *b, int sz) {$/;"	f	file:
buffonstack	skynet/3rd/lua/lauxlib.c	515;"	d	file:
buffsize	skynet/3rd/lua/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
build_question 	game/myservice/npc_mine_t.lua	/^build_question = function(self, question)$/;"	f
build_question 	game/myservice/npc_t.lua	/^build_question = function(self, question)$/;"	f
builder.compile	skynet/lualib/skynet/datasheet/builder.lua	/^function builder.compile(v)$/;"	f
builder.new	skynet/lualib/skynet/datasheet/builder.lua	/^function builder.new(name, v)$/;"	f
builder.update	skynet/lualib/skynet/datasheet/builder.lua	/^function builder.update(name, v)$/;"	f
buildgrammar	skynet/3rd/lpeg/lptree.c	/^static void buildgrammar (lua_State *L, TTree *grammar, int frule, int n) {$/;"	f	file:
buildop	skynet/3rd/lua/ltests.c	/^static char *buildop (Proto *p, int pc, char *buff) {$/;"	f	file:
buy	game/myservice/player_handler.lua	/^function buy(self, args)$/;"	f
buy 	game/myclient/cmd_buy_t.lua	/^    buy = function(self, ply, args)$/;"	f
buy 	game/myclient/player_client_t.lua	/^    buy = function(self)$/;"	f
byte	skynet/3rd/lpeg/lptypes.h	/^typedef unsigned char byte;$/;"	t
byteoffset	skynet/3rd/lua/lutf8lib.c	/^static int byteoffset (lua_State *L) {$/;"	f	file:
bytes	skynet/service/debug_console.lua	/^local function bytes(size)$/;"	f
bytes2slots	skynet/3rd/lpeg/lptypes.h	107;"	d
bytestoword32	skynet/3rd/lua-md5/md5.c	/^static void bytestoword32 (WORD32 *x, const char *pt) {$/;"	f	file:
c	skynet/3rd/lua/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon10	file:
c	skynet/3rd/lua/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	skynet/3rd/lua/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon28	typeref:struct:CallInfo::__anon28::__anon30
c	skynet/lualib-src/lua-debugchannel.c	/^	struct channel *c;$/;"	m	struct:channel_box	typeref:struct:channel_box::channel	file:
c 	game/myclient/player_client_t.lua	/^    c = function(self)$/;"	f
cache_clear	skynet/3rd/lua/lauxlib.c	/^cache_clear(lua_State *L) {$/;"	f	file:
cache_key	skynet/3rd/lua/lauxlib.c	/^static int cache_key = 0;$/;"	v	file:
cache_level	skynet/3rd/lua/lauxlib.c	/^static int cache_level(lua_State *L) {$/;"	f	file:
cache_mode	skynet/3rd/lua/lauxlib.c	/^static int cache_mode(lua_State *L) {$/;"	f	file:
calc_exp 	game/myservice/player_t.lua	/^calc_exp = function(self)$/;"	f
calc_mine 	game/myservice/player_t.lua	/^calc_mine = function(self)$/;"	f
calc_pow	skynet/lualib-src/sproto/sproto.c	/^calc_pow(int base, int n) {$/;"	f	file:
calchash	skynet/lualib-src/lua-sharedata.c	/^calchash(const char * str, size_t l) {$/;"	f	file:
call 	game/myclient/cmd_buy_t.lua	/^        call = function(self, ply, input)$/;"	f
callallpendingfinalizers	skynet/3rd/lua/lgc.c	/^static void callallpendingfinalizers (lua_State *L) {$/;"	f	file:
callback_context	skynet/lualib-src/lua-skynet.c	/^struct callback_context {$/;"	s	file:
callbinTM	skynet/3rd/lua/ltm.c	/^static int callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callclosemethod	skynet/3rd/lua/lfunc.c	/^static void callclosemethod (lua_State *L, TValue *obj, TValue *err, int yy) {$/;"	f	file:
callfrealloc	skynet/3rd/lua/lmem.c	47;"	d	file:
callrecursive	skynet/3rd/lpeg/lpcode.c	/^static int callrecursive (TTree *tree, int f (TTree *t), int def) {$/;"	f	file:
callstatus	skynet/3rd/lua/lstate.h	/^  unsigned short callstatus;$/;"	m	struct:CallInfo
can_direct_write	skynet/skynet-src/socket_server.c	/^can_direct_write(struct socket *s, int id) {$/;"	f	file:
cannot	skynet/3rd/lua/luac.c	/^static void cannot(const char* what)$/;"	f	file:
cantryagain	skynet/3rd/lua/lmem.c	58;"	d	file:
cap	skynet/3rd/lpeg/lpcap.h	/^  Capture *cap;  \/* current capture *\/$/;"	m	struct:CapState
cap	skynet/3rd/lpeg/lptree.h	/^  byte cap;  \/* kind of capture (if it is a capture) *\/$/;"	m	struct:TTree
cap	skynet/lualib-src/lua-bson.c	/^	int cap;$/;"	m	struct:bson	file:
cap	skynet/lualib-src/lua-mongo.c	/^	int cap;$/;"	m	struct:buffer	file:
cap	skynet/lualib-src/lua-netpack.c	/^	int cap;$/;"	m	struct:queue	file:
cap	skynet/service-src/hashid.h	/^	int cap;$/;"	m	struct:hashid
cap	skynet/skynet-src/skynet_mq.c	/^	int cap;$/;"	m	struct:message_queue	file:
cap-acc	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-acc"><\/a><code>patt % function<\/code><\/h3>$/;"	a
cap-arg	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-arg"><\/a><code>lpeg.Carg (n)<\/code><\/h3>$/;"	a
cap-b	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-b"><\/a><code>lpeg.Cb (key)<\/code><\/h3>$/;"	a
cap-c	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-c"><\/a><code>lpeg.C (patt)<\/code><\/h3>$/;"	a
cap-cc	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-cc"><\/a><code>lpeg.Cc ([value, ...])<\/code><\/h3>$/;"	a
cap-f	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-f"><\/a><code>lpeg.Cf (patt, func)<\/code><\/h3>$/;"	a
cap-func	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-func"><\/a><code>patt \/ function<\/code><\/h3>$/;"	a
cap-g	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-g"><\/a><code>lpeg.Cg (patt [, key])<\/code><\/h3>$/;"	a
cap-num	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-num"><\/a><code>patt \/ number<\/code><\/h3>$/;"	a
cap-p	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-p"><\/a><code>lpeg.Cp ()<\/code><\/h3>$/;"	a
cap-query	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-query"><\/a><code>patt \/ table<\/code><\/h3>$/;"	a
cap-s	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-s"><\/a><code>lpeg.Cs (patt)<\/code><\/h3>$/;"	a
cap-string	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-string"><\/a><code>patt \/ string<\/code><\/h3>$/;"	a
cap-t	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="cap-t"><\/a><code>lpeg.Ct (patt)<\/code><\/h3>$/;"	a
capinside	skynet/3rd/lpeg/lpcap.h	68;"	d
capkind	skynet/3rd/lpeg/lpprint.c	/^static const char *capkind (int kind) {$/;"	f	file:
caplevel	skynet/3rd/lpeg/lpvm.c	/^  int caplevel;$/;"	m	struct:Stack	file:
caplistidx	skynet/3rd/lpeg/lptypes.h	74;"	d
caplookfor 	skynet/3rd/lpeg/test.lua	/^function caplookfor (p)$/;"	f
capsize	skynet/3rd/lpeg/lpcap.c	/^static Index_t capsize (Capture *cap, Capture *close) {$/;"	f	file:
capture	skynet/3rd/lua/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon33	file:
capture_aux	skynet/3rd/lpeg/lptree.c	/^static int capture_aux (lua_State *L, int cap, int labelidx) {$/;"	f	file:
capture_to_close	skynet/3rd/lua/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
captures	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="captures">Captures<\/a><\/h2>$/;"	a
captype	skynet/3rd/lpeg/lpcap.h	62;"	d
capvisible	skynet/3rd/lpeg/lpcap.c	/^static int capvisible (CapState *cs, Capture *grp, Capture *ref) {$/;"	f	file:
cast	skynet/3rd/lua/llimits.h	136;"	d
cast_byte	skynet/3rd/lua/llimits.h	143;"	d
cast_char	skynet/3rd/lua/llimits.h	145;"	d
cast_charp	skynet/3rd/lua/llimits.h	146;"	d
cast_func	skynet/3rd/lua/loadlib.c	122;"	d	file:
cast_func	skynet/3rd/lua/loadlib.c	124;"	d	file:
cast_int	skynet/3rd/lua/llimits.h	141;"	d
cast_num	skynet/3rd/lua/llimits.h	140;"	d
cast_sizet	skynet/3rd/lua/llimits.h	147;"	d
cast_u	skynet/3rd/lua/lstate.h	369;"	d
cast_uchar	skynet/3rd/lua/llimits.h	144;"	d
cast_uint	skynet/3rd/lua/llimits.h	142;"	d
cast_void	skynet/3rd/lua/llimits.h	138;"	d
cast_voidp	skynet/3rd/lua/llimits.h	139;"	d
catch	skynet/lualib/skynet/mqueue.lua	/^local function catch(succ, ...)$/;"	f
cb	skynet/skynet-src/skynet_server.c	/^	skynet_cb cb;$/;"	m	struct:skynet_context	file:
cb_ud	skynet/skynet-src/skynet_server.c	/^	void * cb_ud;$/;"	m	struct:skynet_context	file:
ccall	skynet/3rd/lua/ldo.c	/^l_sinline void ccall (lua_State *L, StkId func, int nResults, l_uint32 inc) {$/;"	f
chan:delete	skynet/lualib/skynet/multicast.lua	/^function chan:delete()$/;"	f
chan:publish	skynet/lualib/skynet/multicast.lua	/^function chan:publish(...)$/;"	f
chan:subscribe	skynet/lualib/skynet/multicast.lua	/^function chan:subscribe()$/;"	f
chan:unsubscribe	skynet/lualib/skynet/multicast.lua	/^function chan:unsubscribe()$/;"	f
change_prompt	skynet/lualib/skynet/remotedebug.lua	/^local function change_prompt(s)$/;"	f
changeage	skynet/3rd/lua/lgc.h	125;"	d
changedline	skynet/3rd/lua/ldebug.c	/^static int changedline (const Proto *p, int oldpc, int newpc) {$/;"	f	file:
changewhite	skynet/3rd/lua/lgc.h	98;"	d
channel	skynet/lualib-src/lua-debugchannel.c	/^struct channel {$/;"	s	file:
channel:changebackup	skynet/lualib/skynet/socketchannel.lua	/^function channel:changebackup(backup)$/;"	f
channel:changehost	skynet/lualib/skynet/socketchannel.lua	/^function channel:changehost(host, port)$/;"	f
channel:close	skynet/lualib/skynet/socketchannel.lua	/^function channel:close()$/;"	f
channel:connect	skynet/lualib/skynet/socketchannel.lua	/^function channel:connect(once)$/;"	f
channel:request	skynet/lualib/skynet/socketchannel.lua	/^function channel:request(request, response, padding)$/;"	f
channel:response	skynet/lualib/skynet/socketchannel.lua	/^function channel:response(response)$/;"	f
channel_box	skynet/lualib-src/lua-debugchannel.c	/^struct channel_box {$/;"	s	file:
channel_connect	skynet/lualib-src/lua-debugchannel.c	/^channel_connect(struct channel *c) {$/;"	f	file:
channel_new	skynet/lualib-src/lua-debugchannel.c	/^channel_new() {$/;"	f	file:
channel_read	skynet/lualib-src/lua-debugchannel.c	/^channel_read(struct channel *c, double timeout) {$/;"	f	file:
channel_release	skynet/lualib-src/lua-debugchannel.c	/^channel_release(struct channel *c) {$/;"	f	file:
channel_socket.read 	skynet/lualib/skynet/socketchannel.lua	/^channel_socket.read = wrapper_socket_function(socket.read)$/;"	f
channel_socket.readline 	skynet/lualib/skynet/socketchannel.lua	/^channel_socket.readline = wrapper_socket_function(socket.readline)$/;"	f
channel_write	skynet/lualib-src/lua-debugchannel.c	/^channel_write(struct channel *c, const char * s, size_t sz) {$/;"	f	file:
charinset	skynet/3rd/lpeg/lpvm.c	/^int charinset (const Instruction *i, const byte *buff, uint c) {$/;"	f
charsetinfo	skynet/3rd/lpeg/lpcset.h	/^} charsetinfo;$/;"	t	typeref:struct:__anon3
charsettype	skynet/3rd/lpeg/lpcset.c	/^Opcode charsettype (const byte *cs, charsetinfo *info) {$/;"	f
check	skynet/3rd/lua/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
check	skynet/lualib/skynet/service.lua	/^local function check(func)$/;"	f
checkCclosure	skynet/3rd/lua/ltests.c	/^static void checkCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
checkGC	skynet/3rd/lua/lvm.c	1128;"	d	file:
checkHeader	skynet/3rd/lua/lundump.c	/^static void checkHeader (LoadState *S) {$/;"	f	file:
checkLclosure	skynet/3rd/lua/ltests.c	/^static void checkLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
checkSizes	skynet/3rd/lua/lgc.c	/^static void checkSizes (lua_State *L, global_State *g) {$/;"	f	file:
check_alive	skynet/lualib/skynet/dns.lua	/^	local function check_alive()$/;"	f
check_capture	skynet/3rd/lua/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	skynet/3rd/lua/lparser.c	122;"	d	file:
check_conflict	skynet/3rd/lua/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_connection	skynet/lualib/skynet/socketchannel.lua	/^local function check_connection(self)$/;"	f
check_exp	skynet/3rd/lua/llimits.h	110;"	d
check_exp	skynet/3rd/lua/llimits.h	115;"	d
check_match	skynet/3rd/lua/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next1	skynet/3rd/lua/llex.c	/^static int check_next1 (LexState *ls, int c) {$/;"	f	file:
check_next2	skynet/3rd/lua/llex.c	/^static int check_next2 (LexState *ls, const char *set) {$/;"	f	file:
check_padding_mode	skynet/lualib-src/lua-crypt.c	/^check_padding_mode(lua_State *L, int mode) {$/;"	f	file:
check_pid	skynet/skynet-src/skynet_daemon.c	/^check_pid(const char *pidfile) {$/;"	f	file:
check_protocol	skynet/lualib/http/httpc.lua	/^local function check_protocol(host)$/;"	f
check_protocol	skynet/lualib/sprotoparser.lua	/^local function check_protocol(r)$/;"	f
check_quit 	game/myclient/cmd_base_t.lua	/^check_quit = function(self, ply, input)$/;"	f
check_reader	skynet/lualib-src/lua-bson.c	/^check_reader(lua_State *L, struct bson_reader *br, int sz) {$/;"	f	file:
check_readonly	skynet/3rd/lua/lparser.c	/^static void check_readonly (LexState *ls, expdesc *e) {$/;"	f	file:
check_seller_item 	game/myservice/city_t.lua	/^check_seller_item = function(self, agent, name, item_name)$/;"	f
check_seller_name 	game/myservice/city_t.lua	/^check_seller_name = function(self, agent, name)$/;"	f
check_sep	skynet/lualib-src/lua-socket.c	/^check_sep(struct buffer_node * node, int from, const char *sep, int seplen) {$/;"	f	file:
check_version	skynet/skynet-src/skynet_monitor.c	/^	int check_version;$/;"	m	struct:skynet_monitor	file:
check_watch	skynet/service/sharedatad.lua	/^local function check_watch(queue)$/;"	f
check_wb_list	skynet/skynet-src/socket_server.c	/^check_wb_list(struct wb_list *s) {$/;"	f	file:
checkaux	skynet/3rd/lpeg/lpcode.c	/^int checkaux (TTree *tree, int pred) {$/;"	f
checkbufferlevel	skynet/3rd/lua/lauxlib.c	522;"	d	file:
checkclib	skynet/3rd/lua/loadlib.c	/^static void *checkclib (lua_State *L, const char *path) {$/;"	f	file:
checkclosemth	skynet/3rd/lua/lfunc.c	/^static void checkclosemth (lua_State *L, StkId level) {$/;"	f	file:
checkconflict	skynet/lualib/skynet.lua	/^	local function checkconflict(session)$/;"	f
checkcontrol	skynet/3rd/lua/lauxlib.c	/^static int checkcontrol (lua_State *L, const char *message, int tocont) {$/;"	f	file:
checkctrl	skynet/skynet-src/socket_server.c	/^	int checkctrl;$/;"	m	struct:socket_server	file:
checkeq 	skynet/3rd/lpeg/test.lua	/^local function checkeq (x, y, p)$/;"	f
checkerr 	skynet/3rd/lpeg/test.lua	/^local function checkerr (msg, f, ...)$/;"	f
checkerr("too many", function () p 	skynet/3rd/lpeg/test.lua	/^  checkerr("too many", function () p = p \/ print end)$/;"	f
checkfield	skynet/3rd/lua/ltablib.c	/^static int checkfield (lua_State *L, const char *key, int n) {$/;"	f	file:
checkfinalmem	skynet/3rd/lua/ltests.c	/^static void checkfinalmem (void) {$/;"	f	file:
checkformat	skynet/3rd/lua/lstrlib.c	/^static void checkformat (lua_State *L, const char *form, const char *flags,$/;"	f	file:
checkgraylist	skynet/3rd/lua/ltests.c	/^static lu_mem checkgraylist (global_State *g, GCObject *o) {$/;"	f	file:
checkgrays	skynet/3rd/lua/ltests.c	/^static lu_mem checkgrays (global_State *g) {$/;"	f	file:
checklimit	skynet/3rd/lua/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checklist	skynet/3rd/lua/ltests.c	/^static lu_mem checklist (global_State *g, int maybedead, int tof,$/;"	f	file:
checkliteral	skynet/3rd/lua/lundump.c	/^static void checkliteral (LoadState *S, const char *s, const char *msg) {$/;"	f	file:
checkliveness	skynet/3rd/lua/lobject.h	106;"	d
checkload	skynet/3rd/lua/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkloops	skynet/3rd/lpeg/lptree.c	/^static int checkloops (TTree *tree) {$/;"	f	file:
checkmode	skynet/3rd/lua/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checknext	skynet/3rd/lua/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkobject	skynet/3rd/lua/ltests.c	/^static void checkobject (global_State *g, GCObject *o, int maybedead,$/;"	f	file:
checkobjref	skynet/3rd/lua/ltests.c	/^static void checkobjref (global_State *g, GCObject *f, GCObject *t) {$/;"	f	file:
checkobjrefN	skynet/3rd/lua/ltests.c	351;"	d	file:
checkopm	skynet/3rd/lua/lopcodes.h	118;"	d
checkoption	skynet/3rd/lua/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv,$/;"	f	file:
checkpanic	skynet/3rd/lua/ltests.c	/^static int checkpanic (lua_State *L) {$/;"	f	file:
checkpointer	skynet/3rd/lua/lgc.c	/^static void checkpointer (GCObject **p, GCObject *o) {$/;"	f	file:
checkproto	skynet/3rd/lua/ltests.c	/^static void checkproto (global_State *g, Proto *f) {$/;"	f	file:
checkrefs	skynet/3rd/lua/ltests.c	/^static void checkrefs (global_State *g, GCObject *o) {$/;"	f	file:
checkrepeated	skynet/3rd/lua/lparser.c	/^static void checkrepeated (LexState *ls, TString *name) {$/;"	f	file:
checkresults	skynet/3rd/lua/lapi.c	1000;"	d	file:
checkseed	skynet/3rd/lua-md5/md5lib.c	/^static void checkseed (lua_State *L) {$/;"	f	file:
checksize	skynet/3rd/lua/lundump.c	290;"	d	file:
checkstack	skynet/3rd/lua/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkstack	skynet/3rd/lua/ltests.c	/^static void checkstack (global_State *g, lua_State *L1) {$/;"	f	file:
checkstackGC	skynet/3rd/lua/ldo.h	56;"	d
checkstackGCp	skynet/3rd/lua/ldo.h	48;"	d
checkstackp	skynet/3rd/lua/ldo.h	41;"	d
checktab	skynet/3rd/lua/ltablib.c	/^static void checktab (lua_State *L, int arg, int what) {$/;"	f	file:
checktable	skynet/3rd/lua/ltests.c	/^static void checktable (global_State *g, Table *h) {$/;"	f	file:
checktag	skynet/3rd/lua/lobject.h	91;"	d
checktoclose	skynet/3rd/lua/lparser.c	/^static void checktoclose (FuncState *fs, int level) {$/;"	f	file:
checktype	skynet/3rd/lua/lobject.h	92;"	d
checktype	skynet/lualib/sprotoparser.lua	/^local function checktype(types, ptype, t)$/;"	f
checkudata	skynet/3rd/lua/ltests.c	/^static void checkudata (global_State *g, Udata *u) {$/;"	f	file:
checkupval	skynet/3rd/lua/ldblib.c	/^static void *checkupval (lua_State *L, int argf, int argnup, int *pnup) {$/;"	f	file:
checkvalref	skynet/3rd/lua/ltests.c	/^static void checkvalref (global_State *g, GCObject *f, const TValue *t) {$/;"	f	file:
checkvalres	skynet/3rd/lua/lbaselib.c	197;"	d	file:
chgfltvalue	skynet/3rd/lua/lobject.h	341;"	d
chgivalue	skynet/3rd/lua/lobject.h	347;"	d
choosePivot	skynet/3rd/lua/ltablib.c	/^static IdxT choosePivot (IdxT lo, IdxT up, unsigned int rnd) {$/;"	f	file:
chunk	skynet/lualib-src/sproto/sproto.c	/^struct chunk {$/;"	s	file:
chunksize	skynet/lualib/http/internal.lua	/^local function chunksize(readbytes, body)$/;"	f
ci	skynet/3rd/lua/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	skynet/3rd/lua/ldebug.h	18;"	d
cl	skynet/3rd/lua/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure
clCvalue	skynet/3rd/lua/lobject.h	607;"	d
clLvalue	skynet/3rd/lua/lobject.h	605;"	d
classend	skynet/3rd/lua/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clean_prefix	skynet/skynet-src/malloc_hook.c	/^clean_prefix(char* ptr) {$/;"	f	file:
clear_closed_event	skynet/skynet-src/socket_server.c	/^clear_closed_event(struct socket_server *ss, struct socket_message * result, int type) {$/;"	f	file:
clear_last_context	skynet/lualib-src/lua-skynet.c	/^clear_last_context(lua_State *L) {$/;"	f	file:
clear_list	skynet/lualib-src/lua-netpack.c	/^clear_list(struct uncomplete * uc) {$/;"	f	file:
clear_table	skynet/lualib-src/lua-datasheet.c	/^clear_table(lua_State *L) {$/;"	f	file:
clear_wb_list	skynet/skynet-src/socket_server.c	/^clear_wb_list(struct wb_list *list) {$/;"	f	file:
clearbuff	skynet/3rd/lua/lobject.c	/^static void clearbuff (BuffFS *buff) {$/;"	f	file:
clearbykeys	skynet/3rd/lua/lgc.c	/^static void clearbykeys (global_State *g, GCObject *l) {$/;"	f	file:
clearbyvalues	skynet/3rd/lua/lgc.c	/^static void clearbyvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearcache	skynet/3rd/lua/lauxlib.c	/^clearcache(void) {$/;"	f	file:
cleardummy	skynet/service-src/service_snlua.c	/^cleardummy(lua_State *L) {$/;"	f	file:
cleargraylists	skynet/3rd/lua/lgc.c	/^static void cleargraylists (global_State *g) {$/;"	f	file:
clearkey	skynet/3rd/lua/lgc.c	/^static void clearkey (Node *n) {$/;"	f	file:
clearnamecache	skynet/service/clusterd.lua	/^local function clearnamecache()$/;"	f
clearset	skynet/3rd/lpeg/lptypes.h	104;"	d
client	skynet/service-src/service_gate.c	/^	uint32_t client;$/;"	m	struct:connection	file:
client	skynet/test/testudp.lua	/^local function client()$/;"	f
client_tag	skynet/service-src/service_gate.c	/^	int client_tag;$/;"	m	struct:gate	file:
clone_buffer	skynet/skynet-src/socket_server.c	/^clone_buffer(struct socket_sendbuffer *buf, size_t *sz) {$/;"	f	file:
clone_table	skynet/lualib-src/lua-sharetable.c	/^clone_table(lua_State *L) {$/;"	f	file:
clone_table	skynet/lualib/skynet/sharedata/corelib.lua	/^local function clone_table(cobj)$/;"	f
close	skynet/3rd/lua/lparser.h	/^  lu_byte close;  \/* goto that escapes upvalues *\/$/;"	m	struct:Labeldesc
close	skynet/service-src/service_logger.c	/^	int close;$/;"	m	struct:logger	file:
close	skynet/skynet-src/socket_server.c	/^		struct request_close close;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_close	file:
close 	skynet/lualib/http/websocket.lua	/^            close = function ()$/;"	f
close_agent	game/myservice/luagate.lua	/^local function close_agent(fd)$/;"	f
close_agent	skynet/examples/watchdog.lua	/^local function close_agent(fd)$/;"	f
close_all_remotes	skynet/service-src/service_harbor.c	/^close_all_remotes(struct harbor *h) {$/;"	f	file:
close_channel_socket	skynet/lualib/skynet/socketchannel.lua	/^local function close_channel_socket(self)$/;"	f
close_fd	skynet/lualib/http/httpc.lua	/^	local function close_fd()$/;"	f
close_fd	skynet/service/gate.lua	/^local function close_fd(fd)$/;"	f
close_func	skynet/3rd/lua/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_harbor	skynet/service-src/service_harbor.c	/^close_harbor(struct harbor *h, int id) {$/;"	f	file:
close_interface	skynet/lualib/http/httpc.lua	/^local function close_interface(interface, fd)$/;"	f
close_matrix	skynet/lualib/skynet/sharetable.lua	/^	local function close_matrix(m)$/;"	f
close_read	skynet/skynet-src/socket_server.c	/^close_read(struct socket_server *ss, struct socket * s, struct socket_message *result) {$/;"	f	file:
close_socket	skynet/skynet-src/socket_server.c	/^close_socket(struct socket_server *ss, struct request_close *request, struct socket_message *result) {$/;"	f	file:
close_state	skynet/3rd/lua/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
close_state	skynet/lualib-src/lua-sharetable.c	/^close_state(lua_State *L) {$/;"	f	file:
close_uncomplete	skynet/lualib-src/lua-netpack.c	/^close_uncomplete(lua_State *L, int fd) {$/;"	f	file:
close_write	skynet/skynet-src/socket_server.c	/^close_write(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
closef	skynet/3rd/lua/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closelistfield	skynet/3rd/lua/lparser.c	/^static void closelistfield (FuncState *fs, ConsControl *cc) {$/;"	f	file:
closeloop	skynet/3rd/lpeg/lpcode.c	/^static void closeloop (CompileState *compst, int test) {$/;"	f	file:
closepaux	skynet/3rd/lua/ldo.c	/^static void closepaux (lua_State *L, void *ud) {$/;"	f	file:
closesize	skynet/3rd/lpeg/lpcap.c	/^static Index_t closesize (CapState *cs, Capture *head) {$/;"	f	file:
closestate	skynet/3rd/lua/ltests.c	/^static int closestate (lua_State *L) {$/;"	f	file:
closing	skynet/skynet-src/socket_server.c	/^	bool closing;$/;"	m	struct:socket	file:
cluster.call	skynet/lualib/skynet/cluster.lua	/^function cluster.call(node, address, ...)$/;"	f
cluster.open	skynet/lualib/skynet/cluster.lua	/^function cluster.open(port, maxclient)$/;"	f
cluster.proxy	skynet/lualib/skynet/cluster.lua	/^function cluster.proxy(node, name)$/;"	f
cluster.query	skynet/lualib/skynet/cluster.lua	/^function cluster.query(node, name)$/;"	f
cluster.register	skynet/lualib/skynet/cluster.lua	/^function cluster.register(name, addr)$/;"	f
cluster.reload	skynet/lualib/skynet/cluster.lua	/^function cluster.reload(config)$/;"	f
cluster.send	skynet/lualib/skynet/cluster.lua	/^function cluster.send(node, address, ...)$/;"	f
cluster.snax	skynet/lualib/skynet/cluster.lua	/^function cluster.snax(node, name, address)$/;"	f
cluster.unregister	skynet/lualib/skynet/cluster.lua	/^function cluster.unregister(name)$/;"	f
clvalue	skynet/3rd/lua/lobject.h	604;"	d
cmd.GLAUNCH	skynet/service/service_mgr.lua	/^	function cmd.GLAUNCH(...)$/;"	f
cmd.GLAUNCH	skynet/service/service_mgr.lua	/^	function cmd.GLAUNCH(name, ...)$/;"	f
cmd.GQUERY	skynet/service/service_mgr.lua	/^	function cmd.GQUERY(...)$/;"	f
cmd.GQUERY	skynet/service/service_mgr.lua	/^	function cmd.GQUERY(name, ...)$/;"	f
cmd.LAUNCH	skynet/service/service_mgr.lua	/^function cmd.LAUNCH(service_name, subname, ...)$/;"	f
cmd.LIST	skynet/service/service_mgr.lua	/^	function cmd.LIST()$/;"	f
cmd.QUERY	skynet/service/service_mgr.lua	/^function cmd.QUERY(service_name, subname)$/;"	f
cmd.REPORT	skynet/service/service_mgr.lua	/^	function cmd.REPORT(m)$/;"	f
cmd_abort	skynet/skynet-src/skynet_server.c	/^cmd_abort(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_exit	skynet/skynet-src/skynet_server.c	/^cmd_exit(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_funcs	skynet/skynet-src/skynet_server.c	/^static struct command_func cmd_funcs[] = {$/;"	v	typeref:struct:command_func	file:
cmd_getenv	skynet/skynet-src/skynet_server.c	/^cmd_getenv(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_kill	skynet/skynet-src/skynet_server.c	/^cmd_kill(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_launch	skynet/skynet-src/skynet_server.c	/^cmd_launch(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_logoff	skynet/skynet-src/skynet_server.c	/^cmd_logoff(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_logon	skynet/skynet-src/skynet_server.c	/^cmd_logon(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_monitor	skynet/skynet-src/skynet_server.c	/^cmd_monitor(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_name	skynet/skynet-src/skynet_server.c	/^cmd_name(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_query	skynet/skynet-src/skynet_server.c	/^cmd_query(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_reg	skynet/skynet-src/skynet_server.c	/^cmd_reg(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_setenv	skynet/skynet-src/skynet_server.c	/^cmd_setenv(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_signal	skynet/skynet-src/skynet_server.c	/^cmd_signal(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_starttime	skynet/skynet-src/skynet_server.c	/^cmd_starttime(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_stat	skynet/skynet-src/skynet_server.c	/^cmd_stat(struct skynet_context * context, const char * param) {$/;"	f	file:
cmd_timeout	skynet/skynet-src/skynet_server.c	/^cmd_timeout(struct skynet_context * context, const char * param) {$/;"	f	file:
co 	skynet/lualib/skynet.lua	/^		co = co_create(function() func(table.unpack(args,1,n)) end)$/;"	f
co 	skynet/lualib/skynet.lua	/^		co = co_create(function()$/;"	f
co 	skynet/lualib/skynet.lua	/^		co = coroutine_create(function(...)$/;"	f
co_create	skynet/lualib/skynet.lua	/^local function co_create(f)$/;"	f
co_funcs	skynet/3rd/lua/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	skynet/3rd/lpeg/lptree.h	/^  union Instruction *code;$/;"	m	struct:Pattern	typeref:union:Pattern::Instruction
code	skynet/3rd/lpeg/lpvm.h	/^    byte code;$/;"	m	struct:Instruction::Inst
code	skynet/3rd/lua/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto
codeABRK	skynet/3rd/lua/lcode.c	/^static void codeABRK (FuncState *fs, OpCode o, int a, int b,$/;"	f	file:
codeNresults	skynet/3rd/lua/lapi.h	49;"	d
code_loadbool	skynet/3rd/lua/lcode.c	/^static int code_loadbool (FuncState *fs, int A, OpCode op) {$/;"	f	file:
codeand	skynet/3rd/lpeg/lpcode.c	/^static void codeand (CompileState *compst, TTree *tree, int tt) {$/;"	f	file:
codearith	skynet/3rd/lua/lcode.c	/^static void codearith (FuncState *fs, BinOpr opr,$/;"	f	file:
codebehind	skynet/3rd/lpeg/lpcode.c	/^static void codebehind (CompileState *compst, TTree *tree) {$/;"	f	file:
codebinK	skynet/3rd/lua/lcode.c	/^static void codebinK (FuncState *fs, BinOpr opr,$/;"	f	file:
codebinNoK	skynet/3rd/lua/lcode.c	/^static void codebinNoK (FuncState *fs, BinOpr opr,$/;"	f	file:
codebinexpval	skynet/3rd/lua/lcode.c	/^static void codebinexpval (FuncState *fs, BinOpr opr,$/;"	f	file:
codebini	skynet/3rd/lua/lcode.c	/^static void codebini (FuncState *fs, OpCode op,$/;"	f	file:
codebitwise	skynet/3rd/lua/lcode.c	/^static void codebitwise (FuncState *fs, BinOpr opr,$/;"	f	file:
codecache	skynet/3rd/lua/lauxlib.c	/^struct codecache {$/;"	s	file:
codecache	skynet/service-src/service_snlua.c	/^codecache(lua_State *L) {$/;"	f	file:
codecache	skynet/service-src/service_snlua.c	39;"	d	file:
codecall	skynet/3rd/lpeg/lpcode.c	/^static void codecall (CompileState *compst, TTree *call) {$/;"	f	file:
codecapture	skynet/3rd/lpeg/lpcode.c	/^static void codecapture (CompileState *compst, TTree *tree, int tt,$/;"	f	file:
codechar	skynet/3rd/lpeg/lpcode.c	/^static void codechar (CompileState *compst, int c, int tt) {$/;"	f	file:
codecharset	skynet/3rd/lpeg/lpcode.c	/^static void codecharset (CompileState *compst, TTree *tree, int tt) {$/;"	f	file:
codechoice	skynet/3rd/lpeg/lpcode.c	/^static void codechoice (CompileState *compst, TTree *p1, TTree *p2, int opt,$/;"	f	file:
codeclosure	skynet/3rd/lua/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecommutative	skynet/3rd/lua/lcode.c	/^static void codecommutative (FuncState *fs, BinOpr op,$/;"	f	file:
codeconcat	skynet/3rd/lua/lcode.c	/^static void codeconcat (FuncState *fs, expdesc *e1, expdesc *e2, int line) {$/;"	f	file:
codeeq	skynet/3rd/lua/lcode.c	/^static void codeeq (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:
codeextraarg	skynet/3rd/lua/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codegen	skynet/3rd/lpeg/lpcode.c	/^static void codegen (CompileState *compst, TTree *tree, int opt, int tt,$/;"	f	file:
codegrammar	skynet/3rd/lpeg/lpcode.c	/^static void codegrammar (CompileState *compst, TTree *grammar) {$/;"	f	file:
codename	skynet/3rd/lua/lparser.c	/^static void codename (LexState *ls, expdesc *e) {$/;"	f	file:
codenot	skynet/3rd/lpeg/lpcode.c	/^static void codenot (CompileState *compst, TTree *tree) {$/;"	f	file:
codenot	skynet/3rd/lua/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codeorder	skynet/3rd/lua/lcode.c	/^static void codeorder (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:
codepoint	skynet/3rd/lua/lutf8lib.c	/^static int codepoint (lua_State *L) {$/;"	f	file:
coderep	skynet/3rd/lpeg/lpcode.c	/^static void coderep (CompileState *compst, TTree *tree, int opt,$/;"	f	file:
coderepcharset	skynet/3rd/lpeg/lpcode.c	/^static int coderepcharset (CompileState *compst, TTree *tree) {$/;"	f	file:
coderuntime	skynet/3rd/lpeg/lpcode.c	/^static void coderuntime (CompileState *compst, TTree *tree, int tt) {$/;"	f	file:
codesJ	skynet/3rd/lua/lcode.c	/^static int codesJ (FuncState *fs, OpCode o, int sj, int k) {$/;"	f	file:
codeseq1	skynet/3rd/lpeg/lpcode.c	/^static int codeseq1 (CompileState *compst, TTree *p1, TTree *p2,$/;"	f	file:
codesize	skynet/3rd/lpeg/lpvm.h	/^  uint codesize;$/;"	m	union:Instruction
codestream	skynet/3rd/lua-md5/md5lib.c	/^static void codestream (lua_State *L, const char *msg, size_t lmsg,$/;"	f	file:
codestring	skynet/3rd/lua/lparser.c	/^static void codestring (expdesc *e, TString *s) {$/;"	f	file:
codetestset	skynet/3rd/lpeg/lpcode.c	/^static int codetestset (CompileState *compst, Charset *cs, int e) {$/;"	f	file:
codeunexpval	skynet/3rd/lua/lcode.c	/^static void codeunexpval (FuncState *fs, OpCode op, expdesc *e, int line) {$/;"	f	file:
codeutfr	skynet/3rd/lpeg/lpcode.c	/^static void codeutfr (CompileState *compst, TTree *tree) {$/;"	f	file:
codeutftree	skynet/3rd/lpeg/lptree.c	/^static void codeutftree (lua_State *L, TTree *t, lua_Unsigned cpu, int arg) {$/;"	f	file:
collect1min	skynet/service/sharedatad.lua	/^local function collect1min()$/;"	f
collect_all_uv	skynet/lualib/snax/hotfix.lua	/^local function collect_all_uv(funcs)$/;"	f
collect_uv	skynet/lualib/snax/hotfix.lua	/^local function collect_uv(f , uv, env)$/;"	f
collectargs	skynet/3rd/lua/lua.c	/^static int collectargs (char **argv, int *first) {$/;"	f	file:
collectobj	skynet/service/sharedatad.lua	/^local function collectobj()$/;"	f
collectrules	skynet/3rd/lpeg/lptree.c	/^static int collectrules (lua_State *L, int arg, int *totalsize) {$/;"	f	file:
collectvalidlines	skynet/3rd/lua/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
combine	skynet/3rd/lua/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
command	game/myservice/player_handler.lua	/^function command(self, pack)$/;"	f
command	skynet/lualib-src/lua-debugchannel.c	/^struct command {$/;"	s	file:
command.DEL	skynet/service/multicastd.lua	/^function command.DEL(source, c)$/;"	f
command.DELR	skynet/service/multicastd.lua	/^function command.DELR(source, c)$/;"	f
command.ERROR	skynet/service/launcher.lua	/^function command.ERROR(address)$/;"	f
command.GC	skynet/service/launcher.lua	/^function command.GC(addr, ti)$/;"	f
command.GET	game/myservice/simpledb.lua	/^function command.GET(key)$/;"	f
command.GET	skynet/examples/simpledb.lua	/^function command.GET(key)$/;"	f
command.KILL	skynet/service/launcher.lua	/^function command.KILL(_, handle)$/;"	f
command.LAUNCH	skynet/service/launcher.lua	/^function command.LAUNCH(_, service, ...)$/;"	f
command.LAUNCHOK	skynet/service/launcher.lua	/^function command.LAUNCHOK(address)$/;"	f
command.LIST	skynet/service/launcher.lua	/^function command.LIST()$/;"	f
command.LOGLAUNCH	skynet/service/launcher.lua	/^function command.LOGLAUNCH(_, service, ...)$/;"	f
command.MEM	skynet/service/launcher.lua	/^function command.MEM(addr, ti)$/;"	f
command.NEW	skynet/service/multicastd.lua	/^function command.NEW()$/;"	f
command.PUB	skynet/service/multicastd.lua	/^function command.PUB(source, c, pack, size)$/;"	f
command.QUERY	skynet/service/datacenterd.lua	/^function command.QUERY(key, ...)$/;"	f
command.QUERY	skynet/service/launcher.lua	/^function command.QUERY(_, request_session)$/;"	f
command.REMOVE	skynet/service/launcher.lua	/^function command.REMOVE(_, handle, kill)$/;"	f
command.SET	game/myservice/simpledb.lua	/^function command.SET(key, value)$/;"	f
command.SET	skynet/examples/simpledb.lua	/^function command.SET(key, value)$/;"	f
command.STAT	skynet/service/launcher.lua	/^function command.STAT(addr, ti)$/;"	f
command.SUB	skynet/service/multicastd.lua	/^function command.SUB(source, c)$/;"	f
command.SUBR	skynet/service/multicastd.lua	/^function command.SUBR(source, c)$/;"	f
command.UPDATE	skynet/service/datacenterd.lua	/^function command.UPDATE(...)$/;"	f
command.USUB	skynet/service/multicastd.lua	/^function command.USUB(source, c)$/;"	f
command.USUBR	skynet/service/multicastd.lua	/^function command.USUBR(source, c)$/;"	f
command.changenode	skynet/service/clustersender.lua	/^function command.changenode(host, port)$/;"	f
command.get	skynet/test/testservice/kvdb.lua	/^	function command.get(key)$/;"	f
command.listen	skynet/service/clusterd.lua	/^function command.listen(source, addr, port, maxclient)$/;"	f
command.proxy	skynet/service/clusterd.lua	/^function command.proxy(source, node, name)$/;"	f
command.push	skynet/service/clustersender.lua	/^function command.push(addr, msg, sz)$/;"	f
command.queryname	skynet/service/clusterd.lua	/^function command.queryname(source, name)$/;"	f
command.register	skynet/service/clusterd.lua	/^function command.register(source, name, addr)$/;"	f
command.reload	skynet/service/clusterd.lua	/^function command.reload(source, config)$/;"	f
command.req	skynet/service/clustersender.lua	/^function command.req(...)$/;"	f
command.sender	skynet/service/clusterd.lua	/^function command.sender(source, node)$/;"	f
command.senders	skynet/service/clusterd.lua	/^function command.senders(source)$/;"	f
command.set	skynet/test/testservice/kvdb.lua	/^	function command.set(key, value)$/;"	f
command.socket	skynet/service/clusterd.lua	/^function command.socket(source, subcmd, fd, msg)$/;"	f
command.unregister	skynet/service/clusterd.lua	/^function command.unregister(_, name)$/;"	f
command:disconnect	skynet/lualib/skynet/db/redis.lua	/^function command:disconnect()$/;"	f
command:exists	skynet/lualib/skynet/db/redis.lua	/^function command:exists(key)$/;"	f
command:pipeline	skynet/lualib/skynet/db/redis.lua	/^function command:pipeline(ops,resp)$/;"	f
command:sismember	skynet/lualib/skynet/db/redis.lua	/^function command:sismember(key, value)$/;"	f
command_func	skynet/skynet-src/skynet_server.c	/^struct command_func {$/;"	s	file:
comp	skynet/lualib/skynet/datasheet/dump.lua	/^	local function comp(lastr, curr)$/;"	f
compilation_database_folder	skynet/.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
compile	skynet/3rd/lpeg/lpcode.c	/^Instruction *compile (lua_State *L, Pattern *p, uint size) {$/;"	f
compile 	skynet/3rd/lpeg/re.lua	/^local function compile (p, defs)$/;"	f
completestate	skynet/3rd/lua/lstate.h	340;"	d
compose_message	skynet/lualib/skynet/db/redis.lua	/^local function compose_message(cmd, msg)$/;"	f
compose_table	skynet/lualib/skynet/db/redis.lua	/^local function compose_table(lines, msg)$/;"	f
computesizes	skynet/3rd/lua/ltable.c	/^static unsigned int computesizes (unsigned int nums[], unsigned int *pna) {$/;"	f	file:
concat_table	skynet/lualib-src/lua-socket.c	/^concat_table(lua_State *L, int index, void *buffer, size_t tlen) {$/;"	f	file:
concattable	skynet/3rd/lpeg/lptree.c	/^static int concattable (lua_State *L, int idx1, int idx2) {$/;"	f	file:
cond	skynet/3rd/lua/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
cond	skynet/skynet-src/skynet_start.c	/^	pthread_cond_t cond;$/;"	m	struct:monitor	file:
condchangemem	skynet/3rd/lua/llimits.h	374;"	d
condchangemem	skynet/3rd/lua/llimits.h	376;"	d
condjump	skynet/3rd/lua/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C, int k) {$/;"	f	file:
condmovestack	skynet/3rd/lua/llimits.h	366;"	d
condmovestack	skynet/3rd/lua/llimits.h	369;"	d
conf.box	skynet/lualib/skynet/sharedata/corelib.lua	/^function conf.box(obj)$/;"	f
conf.copy	skynet/lualib/skynet/sharedata/corelib.lua	/^function conf.copy(cobj, ...)$/;"	f
conf.flush	skynet/lualib/skynet/sharedata/corelib.lua	/^function conf.flush(obj)$/;"	f
conf.next	skynet/lualib/skynet/sharedata/corelib.lua	/^function conf.next(obj, key)$/;"	f
conf.update	skynet/lualib/skynet/sharedata/corelib.lua	/^function conf.update(self, pointer)$/;"	f
confirm	skynet/lualib-src/sproto/sproto.c	/^	int confirm;	\/\/ confirm == 1 where response nil$/;"	m	struct:protocol	file:
conn	skynet/service-src/service_gate.c	/^	struct connection *conn;$/;"	m	struct:gate	typeref:struct:gate::connection	file:
connect	skynet/lualib/http/httpc.lua	/^local function connect(host, timeout)$/;"	f
connect	skynet/lualib/skynet/socket.lua	/^local function connect(id, func)$/;"	f
connect_once	skynet/lualib/skynet/socketchannel.lua	/^local function connect_once(self)$/;"	f
connect_server	skynet/lualib/skynet/dns.lua	/^local function connect_server()$/;"	f
connect_slave	skynet/service/cslave.lua	/^local function connect_slave(slave_id, address)$/;"	f
connection	skynet/lualib-src/lua-mongo.c	/^struct connection {$/;"	s	file:
connection	skynet/service-src/service_gate.c	/^struct connection {$/;"	s	file:
console_main_loop	skynet/service/console.lua	/^local function console_main_loop()$/;"	f
console_main_loop	skynet/service/debug_console.lua	/^local function console_main_loop(stdin, print, addr)$/;"	f
const2exp	skynet/3rd/lua/lcode.c	/^static void const2exp (TValue *v, expdesc *e) {$/;"	f	file:
const2val	skynet/3rd/lua/lcode.c	/^static TValue *const2val (FuncState *fs, const expdesc *e) {$/;"	f	file:
constfolding	skynet/3rd/lua/lcode.c	/^static int constfolding (FuncState *fs, int op, expdesc *e1,$/;"	f	file:
constructor	skynet/3rd/lua/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
contents	skynet/3rd/lua/lobject.h	/^  char contents[1];$/;"	m	struct:TString
context	skynet/lualib-src/lua-sharedata.c	/^struct context {$/;"	s	file:
context_dec	skynet/skynet-src/skynet_server.c	/^context_dec() {$/;"	f	file:
context_inc	skynet/skynet-src/skynet_server.c	/^context_inc() {$/;"	f	file:
convergeephemerons	skynet/3rd/lua/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
convert.protocol	skynet/lualib/sprotoparser.lua	/^function convert.protocol(all, obj)$/;"	f
convert.type	skynet/lualib/sprotoparser.lua	/^function convert.type(all, obj)$/;"	f
convert_stat	skynet/service/debug_console.lua	/^local function convert_stat(info)$/;"	f
convert_stringmap	skynet/lualib-src/lua-sharedata.c	/^convert_stringmap(struct context *ctx, struct table *tbl) {$/;"	f	file:
converte	skynet/3rd/lua-md5/md5.c	/^static int converte (WORD32 *x, const char *pt, int num, int old_status) {$/;"	f	file:
convtable	skynet/lualib-src/lua-sharedata.c	/^convtable(lua_State *L) {$/;"	f	file:
copy	skynet/lualib-src/lua-stm.c	/^	struct stm_copy * copy;$/;"	m	struct:stm_object	typeref:struct:stm_object::stm_copy	file:
copy2buff	skynet/3rd/lua/lvm.c	/^static void copy2buff (StkId top, int n, char *buff) {$/;"	f	file:
copy_name	skynet/skynet-src/skynet_server.c	/^copy_name(char name[GLOBALNAME_LENGTH], const char * addr) {$/;"	f	file:
copyfromdata	skynet/lualib-src/lua-datasheet.c	/^copyfromdata(lua_State *L) {$/;"	f	file:
copyktable	skynet/3rd/lpeg/lptree.c	/^static void copyktable (lua_State *L, int idx) {$/;"	f	file:
copytable	skynet/lualib-src/lua-datasheet.c	/^copytable(lua_State *L, int tbl, struct proxy *p) {$/;"	f	file:
copywithendian	skynet/3rd/lua/lstrlib.c	/^static void copywithendian (char *dest, const char *src,$/;"	f	file:
core.hmacmd5	skynet/lualib/md5.lua	/^function core.hmacmd5(data,key)$/;"	f
core.sumhexa 	skynet/lualib/md5.lua	/^function core.sumhexa (k)$/;"	f
coresume	skynet/3rd/lua/ltests.c	/^static int coresume (lua_State *L) {$/;"	f	file:
coroutine_resume	skynet/lualib/skynet.lua	/^local function coroutine_resume(co, ...)$/;"	f
correctassociativity	skynet/3rd/lpeg/lptree.c	/^static void correctassociativity (TTree *tree) {$/;"	f	file:
correctcalls	skynet/3rd/lpeg/lpcode.c	/^static void correctcalls (CompileState *compst, int *positions,$/;"	f	file:
correctgraylist	skynet/3rd/lua/lgc.c	/^static GCObject **correctgraylist (GCObject **p) {$/;"	f	file:
correctgraylists	skynet/3rd/lua/lgc.c	/^static void correctgraylists (global_State *g) {$/;"	f	file:
correctkeys	skynet/3rd/lpeg/lptree.c	/^static void correctkeys (TTree *tree, int n) {$/;"	f	file:
correctpointers	skynet/3rd/lua/lgc.c	/^static void correctpointers (global_State *g, GCObject *o) {$/;"	f	file:
correctstack	skynet/3rd/lua/ldo.c	/^static void correctstack (lua_State *L) {$/;"	f	file:
count	skynet/lualib-src/lsha1.c	/^	uint32_t count[2];$/;"	m	struct:__anon39	file:
count	skynet/lualib/snax/interface.lua	/^		local function count( _, name, func)$/;"	f
count	skynet/service-src/hashid.h	/^	int count;$/;"	m	struct:hashid
count	skynet/skynet-src/skynet_module.c	/^	int count;$/;"	m	struct:modules	file:
count	skynet/skynet-src/skynet_start.c	/^	int count;$/;"	m	struct:monitor	file:
count	skynet/skynet-src/socket_server.c	/^	int count;$/;"	m	struct:socket_lock	file:
count_array	skynet/lualib-src/sproto/sproto.c	/^count_array(const uint8_t * stream) {$/;"	f	file:
count_lines	skynet/lualib/sprotoparser.lua	/^local function count_lines(_,pos, parser_state)$/;"	f
count_size	skynet/lualib-src/lua-socket.c	/^count_size(lua_State *L, int index) {$/;"	f	file:
countint	skynet/3rd/lua/ltable.c	/^static int countint (lua_Integer key, unsigned int *nums) {$/;"	f	file:
countlimit	skynet/3rd/lua/ltests.h	/^  unsigned long countlimit;$/;"	m	struct:Memcontrol
countsize	skynet/lualib-src/lua-sharedata.c	/^countsize(lua_State *L, int sizearray) {$/;"	f	file:
cp	skynet/3rd/lpeg/lpcap.c	/^    Capture *cp;  \/* if not a string, respective capture *\/$/;"	m	union:StrAux::__anon1	file:
cpu_cost	skynet/skynet-src/skynet_server.c	/^	uint64_t cpu_cost;	\/\/ in microsec$/;"	m	struct:skynet_context	file:
cpu_start	skynet/skynet-src/skynet_server.c	/^	uint64_t cpu_start;	\/\/ in microsec$/;"	m	struct:skynet_context	file:
create	skynet/skynet-src/skynet_module.h	/^	skynet_dl_create create;$/;"	m	struct:skynet_module
createIndex_onekey	skynet/lualib/skynet/db/mongo.lua	/^local function createIndex_onekey(self, key, option)$/;"	f
create_from_bundle	skynet/lualib-src/sproto/sproto.c	/^create_from_bundle(struct sproto *s, const uint8_t * stream, size_t sz) {$/;"	f	file:
create_proxy	skynet/lualib-src/lua-datasheet.c	/^create_proxy(lua_State *L, const void *data, int index) {$/;"	f	file:
create_thread	skynet/skynet-src/skynet_start.c	/^create_thread(pthread_t *thread, void *(*start_routine) (void *), void *arg) {$/;"	f	file:
create_udp_object	skynet/lualib/skynet/socket.lua	/^local function create_udp_object(id, cb)$/;"	f
createargtable	skynet/3rd/lua/lua.c	/^static void createargtable (lua_State *L, char **argv, int argc, int script) {$/;"	f	file:
createcat	skynet/3rd/lpeg/lptree.c	/^static void createcat (lua_State *L, const char *catname, int (catf) (int)) {$/;"	f	file:
createclibstable	skynet/3rd/lua/loadlib.c	/^static void createclibstable (lua_State *L) {$/;"	f	file:
createlabel	skynet/3rd/lua/lparser.c	/^static int createlabel (LexState *ls, TString *name, int line,$/;"	f	file:
createmeta	skynet/3rd/lua/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	skynet/3rd/lua/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	skynet/3rd/lua/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	skynet/3rd/lua/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	skynet/3rd/lua/lstring.c	/^static TString *createstrobj (lua_State *L, size_t l, int tag, unsigned int h) {$/;"	f	file:
crypt	skynet/3rd/lua-md5/md5lib.c	/^static int crypt (lua_State *L) {$/;"	f	file:
cs	skynet/3rd/lpeg/lpcset.h	/^  const byte *cs;$/;"	m	struct:__anon3
cs	skynet/3rd/lpeg/lptypes.h	/^  byte cs[CHARSETSIZE];$/;"	m	struct:Charset
cs2str 	skynet/3rd/lpeg/test.lua	/^local function cs2str (c)$/;"	f
cs_complement	skynet/3rd/lpeg/lpcode.c	/^static void cs_complement (Charset *cs) {$/;"	f	file:
cs_disjoint	skynet/3rd/lpeg/lpcode.c	/^static int cs_disjoint (const Charset *cs1, const Charset *cs2) {$/;"	f	file:
cs_equal	skynet/3rd/lpeg/lpcode.c	/^static int cs_equal (Instruction *p, charsetinfo *info) {$/;"	f	file:
csv	skynet/3rd/lpeg/lpeg.html	/^function csv (s)$/;"	f
ctb	skynet/3rd/lua/lobject.h	303;"	d
ctd.diff	skynet/lualib/skynet/datasheet/dump.lua	/^function ctd.diff(last, current)$/;"	f
ctd.dump	skynet/lualib/skynet/datasheet/dump.lua	/^function ctd.dump(root)$/;"	f
ctd.undump	skynet/lualib/skynet/datasheet/dump.lua	/^function ctd.undump(v)$/;"	f
ctor 	game/myclient/cmd_buy_t.lua	/^ctor = function(self, ply)$/;"	f
ctor 	game/myclient/player_client_t.lua	/^ctor = function(self, fd, send)$/;"	f
ctor 	game/myservice/city_t.lua	/^ctor = function(self, onlines)$/;"	f
ctor 	game/myservice/npc_chengzhu_t.lua	/^ctor = function(self)$/;"	f
ctor 	game/myservice/npc_mine_t.lua	/^ctor = function(self)$/;"	f
ctor 	game/myservice/npc_mingwu_t.lua	/^ctor = function(self)$/;"	f
ctor 	game/myservice/npc_t.lua	/^ctor = function()$/;"	f
ctor 	game/myservice/npc_tiewan_t.lua	/^ctor = function(self)$/;"	f
ctor 	game/myservice/npc_wuying_t.lua	/^ctor = function(self)$/;"	f
ctor 	game/myservice/player_t.lua	/^ctor = function(self, fd, db, send, dog)$/;"	f
ctrl	skynet/lualib-src/lua-sharedata.c	/^struct ctrl {$/;"	s	file:
ctrl_cmd	skynet/skynet-src/socket_server.c	/^ctrl_cmd(struct socket_server *ss, struct socket_message *result) {$/;"	f	file:
ctx	skynet/3rd/lua/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon28::__anon30
ctx	skynet/lualib-src/ltls.c	/^    SSL_CTX* ctx;$/;"	m	struct:ssl_ctx	file:
ctx	skynet/service-src/service_gate.c	/^	struct skynet_context *ctx;$/;"	m	struct:gate	typeref:struct:gate::skynet_context	file:
ctx	skynet/service-src/service_harbor.c	/^	struct skynet_context *ctx;$/;"	m	struct:harbor	typeref:struct:harbor::skynet_context	file:
ctx	skynet/service-src/service_snlua.c	/^	struct skynet_context * ctx;$/;"	m	struct:snlua	typeref:struct:snlua::skynet_context	file:
currIsNewline	skynet/3rd/lua/llex.c	36;"	d	file:
current	skynet/3rd/lua/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current	skynet/lualib-src/lua-seri.c	/^	struct block * current;$/;"	m	struct:write_block	typeref:struct:write_block::block	file:
current	skynet/lualib-src/sproto/sproto.c	/^	struct chunk * current;$/;"	m	struct:pool	typeref:struct:pool::chunk	file:
current	skynet/skynet-src/skynet_timer.c	/^	uint64_t current;$/;"	m	struct:timer	file:
current_point	skynet/skynet-src/skynet_timer.c	/^	uint64_t current_point;$/;"	m	struct:timer	file:
current_used	skynet/lualib-src/sproto/sproto.c	/^	int current_used;$/;"	m	struct:pool	file:
currentline	skynet/3rd/lua/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	skynet/3rd/lua/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	skynet/3rd/lua/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
cursor_id	skynet/lualib-src/lua-mongo.c	/^	int32_t cursor_id[2];$/;"	m	struct:response	file:
cvt2num	skynet/3rd/lua/lvm.h	24;"	d
cvt2num	skynet/3rd/lua/lvm.h	26;"	d
cvt2str	skynet/3rd/lua/lvm.h	17;"	d
cvt2str	skynet/3rd/lua/lvm.h	19;"	d
d	skynet/3rd/lua/ltests.c	/^  } d;$/;"	m	union:Header	typeref:struct:Header::__anon35	file:
d	skynet/lualib-src/lua-sharedata.c	/^	lua_Integer d;$/;"	m	union:value	file:
d 	game/myclient/player_client_t.lua	/^    d = function(self)$/;"	f
d2s	skynet/3rd/lua/ltests.c	/^static int d2s (lua_State *L) {$/;"	f	file:
daemon	skynet/skynet-src/skynet_imp.h	/^	const char * daemon;$/;"	m	struct:skynet_config
daemon_exit	skynet/skynet-src/skynet_daemon.c	/^daemon_exit(const char *pidfile) {$/;"	f
daemon_init	skynet/skynet-src/skynet_daemon.c	/^daemon_init(const char *pidfile) {$/;"	f
data	skynet/3rd/lua/ldump.c	/^  void *data;$/;"	m	struct:__anon9	file:
data	skynet/3rd/lua/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio
data	skynet/lualib-src/lua-datasheet.c	/^	const char * data;$/;"	m	struct:proxy	file:
data	skynet/lualib-src/lua-multicast.c	/^	void *data;$/;"	m	struct:mc_package	file:
data	skynet/service-src/service_harbor.c	/^	struct harbor_msg * data;$/;"	m	struct:harbor_msg_queue	typeref:struct:harbor_msg_queue::harbor_msg	file:
data	skynet/skynet-src/skynet_mq.h	/^	void * data;$/;"	m	struct:skynet_message
data	skynet/skynet-src/socket_server.h	/^	char * data;$/;"	m	struct:socket_message
database	skynet/.ycm_extra_conf.py	/^  database = None$/;"	v
database	skynet/.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
databuffer	skynet/service-src/databuffer.h	/^struct databuffer {$/;"	s
databuffer_clear	skynet/service-src/databuffer.h	/^databuffer_clear(struct databuffer *db, struct messagepool *mp) {$/;"	f
databuffer_push	skynet/service-src/databuffer.h	/^databuffer_push(struct databuffer *db, struct messagepool *mp, void *data, int sz) {$/;"	f
databuffer_read	skynet/service-src/databuffer.h	/^databuffer_read(struct databuffer *db, struct messagepool *mp, char * buffer, int sz) {$/;"	f
databuffer_readheader	skynet/service-src/databuffer.h	/^databuffer_readheader(struct databuffer *db, struct messagepool *mp, int header_size) {$/;"	f
databuffer_reset	skynet/service-src/databuffer.h	/^databuffer_reset(struct databuffer *db) {$/;"	f
datacenter.get	skynet/lualib/skynet/datacenter.lua	/^function datacenter.get(...)$/;"	f
datacenter.set	skynet/lualib/skynet/datacenter.lua	/^function datacenter.set(...)$/;"	f
datacenter.wait	skynet/lualib/skynet/datacenter.lua	/^function datacenter.wait(...)$/;"	f
datasheet.close	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.close(source)$/;"	f
datasheet.collect	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.collect(source, handle)$/;"	f
datasheet.monitor	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.monitor(source, handle)$/;"	f
datasheet.query	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.query(source, name)$/;"	f
datasheet.query	skynet/lualib/skynet/datasheet/init.lua	/^function datasheet.query(name)$/;"	f
datasheet.release	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.release(source, handle)$/;"	f
datasheet.update	skynet/lualib/skynet/datasheet/builder.lua	/^function datasheet.update(source, name, handle)$/;"	f
datasheet_service	skynet/lualib/skynet/datasheet/builder.lua	/^local function datasheet_service()$/;"	f
db.pipelining 	skynet/test/testpipeline.lua	/^	db.pipelining = function (self, block)$/;"	f
db_debug	skynet/3rd/lua/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	skynet/3rd/lua/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	skynet/3rd/lua/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	skynet/3rd/lua/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	skynet/3rd/lua/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	skynet/3rd/lua/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	skynet/3rd/lua/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	skynet/3rd/lua/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_setcstacklimit	skynet/3rd/lua/ldblib.c	/^static int db_setcstacklimit (lua_State *L) {$/;"	f	file:
db_sethook	skynet/3rd/lua/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_sethook	skynet/lualib-src/lua-debugchannel.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	skynet/3rd/lua/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	skynet/3rd/lua/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	skynet/3rd/lua/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	skynet/3rd/lua/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	skynet/3rd/lua/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	skynet/3rd/lua/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	skynet/3rd/lua/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dbgcmd.EXIT	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.EXIT()$/;"	f
dbgcmd.GC	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.GC()$/;"	f
dbgcmd.INFO	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.INFO(...)$/;"	f
dbgcmd.KILLTASK	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.KILLTASK(threadname)$/;"	f
dbgcmd.LINK	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.LINK()$/;"	f
dbgcmd.MEM	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.MEM()$/;"	f
dbgcmd.PING	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.PING()$/;"	f
dbgcmd.REMOTEDEBUG	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.REMOTEDEBUG(...)$/;"	f
dbgcmd.RUN	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.RUN(source, filename, ...)$/;"	f
dbgcmd.STAT	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.STAT()$/;"	f
dbgcmd.SUPPORT	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.SUPPORT(pname)$/;"	f
dbgcmd.TASK	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.TASK(session)$/;"	f
dbgcmd.TERM	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.TERM(service)$/;"	f
dbgcmd.TRACELOG	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.TRACELOG(proto, flag)$/;"	f
dbgcmd.UNIQTASK	skynet/lualib/skynet/debug.lua	/^		function dbgcmd.UNIQTASK()$/;"	f
dbgcmd.c	skynet/lualib/skynet/remotedebug.lua	/^function dbgcmd.c(co)$/;"	f
dbgcmd.n	skynet/lualib/skynet/remotedebug.lua	/^function dbgcmd.n(co)$/;"	f
dbgcmd.s	skynet/lualib/skynet/remotedebug.lua	/^function dbgcmd.s(co)$/;"	f
dblib	skynet/3rd/lua/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dbname	skynet/test/testservice/init.lua	/^local function dbname(i)$/;"	f
dead_loop	skynet/test/testdeadloop.lua	/^local function dead_loop()$/;"	f
debug_hook	skynet/lualib/skynet/remotedebug.lua	/^	local function debug_hook()$/;"	f
debug_realloc	skynet/3rd/lua/ltests.c	/^void *debug_realloc (void *ud, void *b, size_t oldsize, size_t size) {$/;"	f
dec_item 	game/myservice/player_t.lua	/^dec_item = function(self, name, num)$/;"	f
dec_sending_ref	skynet/skynet-src/socket_server.c	/^dec_sending_ref(struct socket_server *ss, int id) {$/;"	f	file:
dec_stone 	game/myservice/player_t.lua	/^dec_stone = function(self, stone)$/;"	f
decnny	skynet/3rd/lua/lstate.h	114;"	d
decode	skynet/lualib-src/sproto/lsproto.c	/^decode(const struct sproto_arg *args) {$/;"	f	file:
decode	skynet/lualib/http/url.lua	/^local function decode(str)$/;"	f
decode	skynet/lualib/skynet/datasheet/dump.lua	/^	local function decode(n)$/;"	f
decode	skynet/lualib/skynet/sharemap.lua	/^local function decode(msg, sz, self)$/;"	f
decodeNresults	skynet/3rd/lua/lapi.h	50;"	d
decode_array	skynet/lualib-src/sproto/sproto.c	/^decode_array(sproto_callback cb, struct sproto_arg *args, uint8_t * stream) {$/;"	f	file:
decode_array_object	skynet/lualib-src/sproto/sproto.c	/^decode_array_object(sproto_callback cb, struct sproto_arg *args, uint8_t * stream, int sz) {$/;"	f	file:
decode_empty_array	skynet/lualib-src/sproto/sproto.c	/^decode_empty_array(sproto_callback cb, struct sproto_arg *args) {$/;"	f	file:
decode_func	skynet/lualib/http/url.lua	/^local function decode_func(c)$/;"	f
decode_ud	skynet/lualib-src/sproto/lsproto.c	/^struct decode_ud {$/;"	s	file:
decodestream	skynet/3rd/lua-md5/md5lib.c	/^static void decodestream (lua_State *L, const char *cypher, size_t lcypher,$/;"	f	file:
decrypt	skynet/3rd/lua-md5/md5lib.c	/^static int decrypt (lua_State *L) {$/;"	f	file:
deep	skynet/lualib-src/sproto/lsproto.c	/^	int deep;$/;"	m	struct:decode_ud	file:
deep	skynet/lualib-src/sproto/lsproto.c	/^	int deep;$/;"	m	struct:encode_ud	file:
default_warning	skynet/lualib/skynet/socket.lua	/^local function default_warning(id, size)$/;"	f
deflt	skynet/3rd/lpeg/lpcset.h	/^  int deflt;$/;"	m	struct:__anon3
deflt	skynet/3rd/lpeg/lptree.h	/^      byte deflt;  \/* default value *\/$/;"	m	struct:TTree::__anon4::__anon5
defwithfunc 	skynet/3rd/lpeg/re.lua	/^local function defwithfunc (f)$/;"	f
del_task 	game/myservice/player_t.lua	/^del_task = function(self)$/;"	f
delete_context	skynet/skynet-src/skynet_server.c	/^delete_context(struct skynet_context *ctx) {$/;"	f	file:
delete_tbl	skynet/lualib-src/lua-sharedata.c	/^delete_tbl(struct table *tbl) {$/;"	f	file:
deletelist	skynet/3rd/lua/lgc.c	/^static void deletelist (lua_State *L, GCObject *p, GCObject *limit) {$/;"	f	file:
delimits	skynet/3rd/lua/ltests.c	/^static const char *const delimits = " \\t\\n,;";$/;"	v	file:
delta	skynet/3rd/lua/lobject.h	/^    unsigned short delta;$/;"	m	struct:StackValue::__anon13
des_crypt	skynet/lualib-src/lua-crypt.c	/^des_crypt( const uint32_t SK[32], const uint8_t input[8], uint8_t output[8] ) {$/;"	f	file:
des_key	skynet/lualib-src/lua-crypt.c	/^des_key(lua_State *L, uint32_t SK[32]) {$/;"	f	file:
des_main_ks	skynet/lualib-src/lua-crypt.c	/^des_main_ks( uint32_t SK[32], const uint8_t key[8] ) {$/;"	f	file:
desdecode	skynet/test/testcrypt.lua	/^local function desdecode(key, text, padding)$/;"	f
desencode	skynet/test/testcrypt.lua	/^local function desencode(key, text, padding)$/;"	f
destination	skynet/service-src/service_harbor.c	/^	uint32_t destination;$/;"	m	struct:remote_message_header	file:
destination	skynet/skynet-src/skynet_harbor.h	/^	struct remote_name destination;$/;"	m	struct:remote_message	typeref:struct:remote_message::remote_name
destination	skynet/skynet-src/skynet_monitor.c	/^	uint32_t destination;$/;"	m	struct:skynet_monitor	file:
dft_loader	skynet/lualib/snax/interface.lua	/^local function dft_loader(path, name, G)$/;"	f
dict	skynet/lualib-src/lua-datasheet.c	/^	uint32_t dict;$/;"	m	struct:table	file:
diff_time	skynet/service-src/service_snlua.c	/^diff_time(double start) {$/;"	f	file:
diffmap	skynet/lualib/skynet/datasheet/dump.lua	/^local function diffmap(last, current)$/;"	f
digest	skynet/3rd/lua-md5/md5.c	/^static void digest(const WORD32 *m, WORD32 *d) {$/;"	f	file:
digest_md5	skynet/lualib-src/lua-crypt.c	/^digest_md5(uint32_t w[16], uint32_t result[4]) {$/;"	f	file:
digit	skynet/3rd/lua/lstrlib.c	/^static int digit (int c) { return '0' <= c && c <= '9'; }$/;"	f	file:
dirty	skynet/lualib-src/lua-sharedata.c	/^	int dirty;$/;"	m	struct:state	file:
discharge2anyreg	skynet/3rd/lua/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	skynet/3rd/lua/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dispatch 	game/myservice/player_agent.lua	/^	dispatch = function (fd, _, type, ...)$/;"	f
dispatch 	skynet/examples/agent.lua	/^	dispatch = function (fd, _, type, ...)$/;"	f
dispatch 	skynet/examples/simplemonitor.lua	/^	dispatch = function(_, address)$/;"	f
dispatch 	skynet/examples/userlog.lua	/^	dispatch = function()$/;"	f
dispatch 	skynet/examples/userlog.lua	/^	dispatch = function(_, address, msg)$/;"	f
dispatch 	skynet/lualib/skynet/mqueue.lua	/^	dispatch = function(session, from, ...)$/;"	f
dispatch 	skynet/lualib/skynet/socket.lua	/^	dispatch = function (_, _, t, ...)$/;"	f
dispatch 	skynet/lualib/snax/gateserver.lua	/^		dispatch = function (_, _, q, type, ...)$/;"	f
dispatch 	skynet/service/launcher.lua	/^	dispatch = function(session, address , cmd)$/;"	f
dispatch 	skynet/service/multicastd.lua	/^	dispatch = function (...)$/;"	f
dispatch 	skynet/test/testmulticast.lua	/^			dispatch = function (channel, source, ...)$/;"	f
dispatch 	skynet/test/testmulticast2.lua	/^		dispatch = function(...) print("======>", ...) end,$/;"	f
dispatch_by_order	skynet/lualib/skynet/socketchannel.lua	/^local function dispatch_by_order(self)$/;"	f
dispatch_by_session	skynet/lualib/skynet/socketchannel.lua	/^local function dispatch_by_session(self)$/;"	f
dispatch_error_queue	skynet/lualib/skynet.lua	/^local function dispatch_error_queue()$/;"	f
dispatch_function	skynet/lualib/skynet/socketchannel.lua	/^local function dispatch_function(self)$/;"	f
dispatch_list	skynet/skynet-src/skynet_timer.c	/^dispatch_list(struct timer_node *current) {$/;"	f	file:
dispatch_message	skynet/service-src/service_gate.c	/^dispatch_message(struct gate *g, struct connection *c, int id, void * data, int sz) {$/;"	f	file:
dispatch_message	skynet/skynet-src/skynet_server.c	/^dispatch_message(struct skynet_context *ctx, struct skynet_message *msg) {$/;"	f	file:
dispatch_msg	skynet/lualib/snax/gateserver.lua	/^	local function dispatch_msg(fd, msg, sz)$/;"	f
dispatch_name_queue	skynet/service-src/service_harbor.c	/^dispatch_name_queue(struct harbor *h, struct keyvalue * node) {$/;"	f	file:
dispatch_package	game/myclient/client.lua	/^local function dispatch_package()$/;"	f
dispatch_package	skynet/examples/client.lua	/^local function dispatch_package()$/;"	f
dispatch_queue	skynet/lualib/snax/gateserver.lua	/^	local function dispatch_queue()$/;"	f
dispatch_queue	skynet/service-src/service_harbor.c	/^dispatch_queue(struct harbor *h, int id) {$/;"	f	file:
dispatch_reply	skynet/lualib/skynet/db/mongo.lua	/^local function dispatch_reply(so)$/;"	f
dispatch_request	skynet/service/clusteragent.lua	/^local function dispatch_request(_,_,addr, session, msg, sz, padding, is_push)$/;"	f
dispatch_slave	skynet/service/cmaster.lua	/^local function dispatch_slave(fd)$/;"	f
dispatch_socket_message	skynet/service-src/service_gate.c	/^dispatch_socket_message(struct gate *g, const struct skynet_socket_message * message, int sz) {$/;"	f	file:
dispatch_subscribe	skynet/lualib/skynet/multicast.lua	/^local function dispatch_subscribe(channel, source, pack, msg, sz)$/;"	f
dispatch_wakeup	skynet/lualib/skynet.lua	/^local function dispatch_wakeup()$/;"	f
dispatcher	skynet/service/snaxd.lua	/^	local function dispatcher( session , source , id, ...)$/;"	f
disptab	skynet/3rd/lua/ljumptab.h	/^static const void *const disptab[NUM_OPCODES] = {$/;"	v
dns.flush	skynet/lualib/skynet/dns.lua	/^function dns.flush()$/;"	f
dns.resolve	skynet/lualib/skynet/dns.lua	/^function dns.resolve(name, ipv6)$/;"	f
dns.server	skynet/lualib/skynet/dns.lua	/^function dns.server(server, port)$/;"	f
doREPL	skynet/3rd/lua/lua.c	/^static void doREPL (lua_State *L) {$/;"	f	file:
do_auth	skynet/lualib/snax/msgserver.lua	/^	local function do_auth(fd, message, addr)$/;"	f
do_bind	skynet/skynet-src/socket_server.c	/^do_bind(const char *host, int port, int protocol, int *family) {$/;"	f	file:
do_buy	game/myservice/player_handler.lua	/^function do_buy(self, item_name, num)$/;"	f
do_buy 	game/myservice/city_t.lua	/^do_buy = function(self, agent, name, item_name, num)$/;"	f
do_func	skynet/lualib/skynet/mqueue.lua	/^local function do_func(f, msg)$/;"	f
do_listen	skynet/skynet-src/socket_server.c	/^do_listen(const char * host, int port, int backlog) {$/;"	f	file:
do_request	skynet/lualib/snax/msgserver.lua	/^	local function do_request(fd, message)$/;"	f
doargs	skynet/3rd/lua/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	skynet/3rd/lua/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
dochunk	skynet/3rd/lua/lua.c	/^static int dochunk (lua_State *L, int status) {$/;"	f	file:
docmd	skynet/service/debug_console.lua	/^local function docmd(cmdline, print, fd)$/;"	f
docondjump	skynet/3rd/lua/lvm.c	1096;"	d	file:
document	skynet/lualib-src/lua-datasheet.c	/^struct document {$/;"	s	file:
document	skynet/lualib-src/lua-mongo.c	/^typedef void * document;$/;"	t	file:
dofile	skynet/3rd/lua/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	skynet/3rd/lua/lbaselib.c	/^static int dofilecont (lua_State *L, int d1, lua_KContext d2) {$/;"	f	file:
dogtag	skynet/skynet-src/malloc_hook.c	/^	uint32_t dogtag;$/;"	m	struct:mem_cookie	file:
dojump	skynet/3rd/lua/lvm.c	1085;"	d	file:
dolibrary	skynet/3rd/lua/lua.c	/^static int dolibrary (lua_State *L, char *globname) {$/;"	f	file:
donextjump	skynet/3rd/lua/lvm.c	1089;"	d	file:
doonnewstack	skynet/3rd/lua/ltests.c	/^static int doonnewstack (lua_State *L) {$/;"	f	file:
doremote	skynet/3rd/lua/ltests.c	/^static int doremote (lua_State *L) {$/;"	f	file:
dostring	skynet/3rd/lua/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dothecall	skynet/3rd/lua/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
doublestack	skynet/3rd/lpeg/lpvm.c	/^static Stack *doublestack (lua_State *L, Stack **stacklimit, int ptop) {$/;"	f	file:
download	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="download"><\/a>Download<\/h2>$/;"	a
drop_message	skynet/skynet-src/skynet_server.c	/^drop_message(struct skynet_message *msg, void *ud) {$/;"	f	file:
drop_t	skynet/skynet-src/skynet_server.c	/^struct drop_t {$/;"	s	file:
drop_udp	skynet/skynet-src/socket_server.c	/^drop_udp(struct socket_server *ss, struct socket *s, struct wb_list *list, struct write_buffer *tmp) {$/;"	f	file:
dummy	skynet/3rd/lua/lstrlib.c	/^  int dummy;$/;"	m	union:__anon34	file:
dummy	skynet/skynet-src/socket_server.c	/^	uint8_t dummy[256];$/;"	m	struct:request_package	file:
dummy_free	skynet/skynet-src/socket_server.c	/^dummy_free(void *ptr) {$/;"	f	file:
dummynode	skynet/3rd/lua/ltable.c	91;"	d	file:
dummynode_	skynet/3rd/lua/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dump	skynet/test/testdatasheet.lua	/^local function dump(t, prefix)$/;"	f
dump	skynet/test/testmysql.lua	/^local function dump(obj)$/;"	f
dump	skynet/test/testsm.lua	/^local function dump(reader)$/;"	f
dumpBlock	skynet/3rd/lua/ldump.c	/^static void dumpBlock (DumpState *D, const void *b, size_t size) {$/;"	f	file:
dumpByte	skynet/3rd/lua/ldump.c	/^static void dumpByte (DumpState *D, int y) {$/;"	f	file:
dumpCode	skynet/3rd/lua/ldump.c	/^static void dumpCode (DumpState *D, const Proto *f) {$/;"	f	file:
dumpConstants	skynet/3rd/lua/ldump.c	/^static void dumpConstants (DumpState *D, const Proto *f) {$/;"	f	file:
dumpDebug	skynet/3rd/lua/ldump.c	/^static void dumpDebug (DumpState *D, const Proto *f) {$/;"	f	file:
dumpFunction	skynet/3rd/lua/ldump.c	/^static void dumpFunction (DumpState *D, const Proto *f, TString *psource) {$/;"	f	file:
dumpHeader	skynet/3rd/lua/ldump.c	/^static void dumpHeader (DumpState *D) {$/;"	f	file:
dumpInt	skynet/3rd/lua/ldump.c	/^static void dumpInt (DumpState *D, int x) {$/;"	f	file:
dumpInteger	skynet/3rd/lua/ldump.c	/^static void dumpInteger (DumpState *D, lua_Integer x) {$/;"	f	file:
dumpLiteral	skynet/3rd/lua/ldump.c	38;"	d	file:
dumpNumber	skynet/3rd/lua/ldump.c	/^static void dumpNumber (DumpState *D, lua_Number x) {$/;"	f	file:
dumpObj 	skynet/test/testmysql.lua	/^    dumpObj = function(obj, level)$/;"	f
dumpProtos	skynet/3rd/lua/ldump.c	/^static void dumpProtos (DumpState *D, const Proto *f) {$/;"	f	file:
dumpSize	skynet/3rd/lua/ldump.c	/^static void dumpSize (DumpState *D, size_t x) {$/;"	f	file:
dumpString	skynet/3rd/lua/ldump.c	/^static void dumpString (DumpState *D, const TString *s) {$/;"	f	file:
dumpUpvalues	skynet/3rd/lua/ldump.c	/^static void dumpUpvalues (DumpState *D, const Proto *f) {$/;"	f	file:
dumpVar	skynet/3rd/lua/ldump.c	50;"	d	file:
dumpVector	skynet/3rd/lua/ldump.c	36;"	d	file:
dump_c_mem	skynet/skynet-src/malloc_hook.c	/^dump_c_mem() {$/;"	f
dump_line	skynet/service/dbg.lua	/^local function dump_line(key, value)$/;"	f
dump_line	skynet/service/debug_console.lua	/^local function dump_line(print, key, value)$/;"	f
dump_list	skynet/service/dbg.lua	/^local function dump_list(list)$/;"	f
dump_list	skynet/service/debug_console.lua	/^local function dump_list(print, list)$/;"	f
dump_mem_lua	skynet/skynet-src/malloc_hook.c	/^dump_mem_lua(lua_State *L) {$/;"	f
dump_table	skynet/lualib/skynet/datasheet/dump.lua	/^	local function dump_table(t)$/;"	f
dumping	skynet/3rd/lua/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dumpsheet	skynet/lualib/skynet/datasheet/builder.lua	/^local function dumpsheet(v)$/;"	f
dw_buffer	skynet/skynet-src/socket_server.c	/^	const void * dw_buffer;$/;"	m	struct:socket	file:
dw_lock	skynet/skynet-src/socket_server.c	/^	struct spinlock dw_lock;$/;"	m	struct:socket	typeref:struct:socket::spinlock	file:
dw_offset	skynet/skynet-src/socket_server.c	/^	int dw_offset;$/;"	m	struct:socket	file:
dw_size	skynet/skynet-src/socket_server.c	/^	size_t dw_size;$/;"	m	struct:socket	file:
dyd	skynet/3rd/lua/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dyd	skynet/3rd/lua/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
echo	skynet/test/testsocket.lua	/^local function echo(id)$/;"	f
elseif t 	skynet/lualib/http/httpd.lua	/^	elseif t == "function" then$/;"	f
elseif t 	skynet/lualib/skynet/inject.lua	/^		elseif t == "function" then$/;"	f
elseif typ 	game/myservice/tool.lua	/^    elseif typ == "userdata" or typ == "function" then$/;"	f
enable_read	skynet/skynet-src/socket_server.c	/^enable_read(struct socket_server *ss, struct socket *s, bool enable) {$/;"	f	file:
enable_write	skynet/skynet-src/socket_server.c	/^enable_write(struct socket_server *ss, struct socket *s, bool enable) {$/;"	f	file:
encode	skynet/lualib-src/sproto/lsproto.c	/^encode(const struct sproto_arg *args) {$/;"	f	file:
encode	skynet/lualib/skynet/datasheet/dump.lua	/^		local function encode(v)$/;"	f
encode_array	skynet/lualib-src/sproto/sproto.c	/^encode_array(sproto_callback cb, struct sproto_arg *args, uint8_t *data, int size) {$/;"	f	file:
encode_array_object	skynet/lualib-src/sproto/sproto.c	/^encode_array_object(sproto_callback cb, struct sproto_arg *args, uint8_t *buffer, int size, int *noarray) {$/;"	f	file:
encode_bson	skynet/lualib-src/lua-bson.c	/^encode_bson(lua_State *L) {$/;"	f	file:
encode_bson_byorder	skynet/lualib-src/lua-bson.c	/^encode_bson_byorder(lua_State *L) {$/;"	f	file:
encode_default	skynet/lualib-src/sproto/lsproto.c	/^encode_default(const struct sproto_arg *args) {$/;"	f	file:
encode_integer	skynet/lualib-src/sproto/sproto.c	/^encode_integer(uint32_t v, uint8_t * data, int size) {$/;"	f	file:
encode_integer_array	skynet/lualib-src/sproto/sproto.c	/^encode_integer_array(sproto_callback cb, struct sproto_arg *args, uint8_t *buffer, int size, int *noarray) {$/;"	f	file:
encode_object	skynet/lualib-src/sproto/sproto.c	/^encode_object(sproto_callback cb, struct sproto_arg *args, uint8_t *data, int size) {$/;"	f	file:
encode_one	skynet/lualib-src/sproto/lsproto.c	/^encode_one(const struct sproto_arg *args, struct encode_ud *self) {$/;"	f	file:
encode_token	skynet/examples/login/client.lua	/^local function encode_token(token)$/;"	f
encode_ud	skynet/lualib-src/sproto/lsproto.c	/^struct encode_ud {$/;"	s	file:
encode_uint64	skynet/lualib-src/sproto/sproto.c	/^encode_uint64(uint64_t v, uint8_t * data, int size) {$/;"	f	file:
encodeall	skynet/lualib/sprotoparser.lua	/^local function encodeall(r)$/;"	f
end_capture	skynet/3rd/lua/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_sell 	game/myservice/city_t.lua	/^end_sell = function(self, agent, name)$/;"	f
endless	skynet/skynet-src/skynet_server.c	/^	bool endless;$/;"	m	struct:skynet_context	file:
endpc	skynet/3rd/lua/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
enterblock	skynet/3rd/lua/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
entergen	skynet/3rd/lua/lgc.c	/^static lu_mem entergen (lua_State *L, global_State *g) {$/;"	f	file:
enterinc	skynet/3rd/lua/lgc.c	/^static void enterinc (global_State *g) {$/;"	f	file:
enterlevel	skynet/3rd/lua/lparser.c	504;"	d	file:
entersweep	skynet/3rd/lua/lgc.c	/^static void entersweep (lua_State *L) {$/;"	f	file:
envid	skynet/lualib/snax/hotfix.lua	/^local function envid(f)$/;"	f
envn	skynet/3rd/lua/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
eof	skynet/skynet-src/socket_poll.h	/^	bool eof;$/;"	m	struct:event
ephemeron	skynet/3rd/lua/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
eqcharset 	skynet/3rd/lpeg/test.lua	/^local function eqcharset (c1, c2)$/;"	f
eqlpeggsub 	skynet/3rd/lpeg/test.lua	/^function eqlpeggsub (p1, p2)$/;"	f
eqshrstr	skynet/3rd/lua/lstring.h	41;"	d
eqstr	skynet/3rd/lua/lparser.c	43;"	d	file:
equalcap 	skynet/3rd/lpeg/re.lua	/^local function equalcap (s, i, c)$/;"	f
equalkey	skynet/3rd/lua/ltable.c	/^static int equalkey (const TValue *k1, const Node *n2, int deadok) {$/;"	f	file:
errfile	skynet/3rd/lua/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	skynet/3rd/lua/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
errmsg 	skynet/3rd/lpeg/test.lua	/^local function errmsg (p, err)$/;"	f
error	skynet/3rd/lua/lundump.c	/^static l_noret error (LoadState *S, const char *why) {$/;"	f	file:
error	skynet/skynet-src/socket_poll.h	/^	bool error;$/;"	m	struct:event
errorJmp	skynet/3rd/lua/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	skynet/3rd/lua/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
errorlimit	skynet/3rd/lua/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errorstatus	skynet/3rd/lua/ldo.c	38;"	d	file:
escape	skynet/lualib/http/httpc.lua	/^local function escape(s)$/;"	f
esccheck	skynet/3rd/lua/llex.c	/^static void esccheck (LexState *ls, int c, const char *msg) {$/;"	f	file:
ev	skynet/skynet-src/socket_server.c	/^	struct event ev[MAX_EVENT];$/;"	m	struct:socket_server	typeref:struct:socket_server::event	file:
eval	skynet/3rd/lpeg/lpeg.html	/^function eval (v1, op, v2)$/;"	f
eval	skynet/3rd/lpeg/lpeg.html	/^function eval (x)$/;"	f
evalExp	skynet/3rd/lpeg/lpeg.html	/^function evalExp (s)$/;"	f
event	skynet/3rd/lua/lua.h	/^  int event;$/;"	m	struct:lua_Debug
event	skynet/skynet-src/socket_poll.h	/^struct event {$/;"	s
event_fd	skynet/skynet-src/socket_server.c	/^	poll_fd event_fd;$/;"	m	struct:socket_server	file:
event_index	skynet/skynet-src/socket_server.c	/^	int event_index;$/;"	m	struct:socket_server	file:
event_n	skynet/skynet-src/socket_server.c	/^	int event_n;$/;"	m	struct:socket_server	file:
eventname	skynet/3rd/lua/luac.c	218;"	d	file:
ex	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="ex">Some Examples<\/a><\/h2>$/;"	a
ex	skynet/3rd/lpeg/re.html	/^<h2><a name="ex">Some Examples<\/a><\/h2>$/;"	a
ex_or	skynet/3rd/lua-md5/md5lib.c	/^static int ex_or (lua_State *L) {$/;"	f	file:
exchangehashpart	skynet/3rd/lua/ltable.c	/^static void exchangehashpart (Table *t1, Table *t2) {$/;"	f	file:
exec	skynet/lualib/skynet/injectcode.lua	/^local function exec(co, level, func, update, ...)$/;"	f
execute_module	skynet/lualib/skynet/require.lua	/^		local function execute_module()$/;"	f
exit	skynet/test/pingserver.lua	/^function exit(...)$/;"	f
exp1	skynet/3rd/lua/lparser.c	/^static void exp1 (LexState *ls) {$/;"	f	file:
exp2reg	skynet/3rd/lua/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expand64	skynet/lualib-src/sproto/sproto.c	/^expand64(uint32_t v) {$/;"	f	file:
expand_buffer	skynet/lualib-src/sproto/lsproto.c	/^expand_buffer(lua_State *L, int osz, int nsz) {$/;"	f	file:
expand_queue	skynet/lualib-src/lua-netpack.c	/^expand_queue(lua_State *L, struct queue *q) {$/;"	f	file:
expand_queue	skynet/skynet-src/skynet_mq.c	/^expand_queue(struct message_queue *q) {$/;"	f	file:
expdesc	skynet/3rd/lua/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	skynet/3rd/lua/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expire	skynet/skynet-src/skynet_timer.c	/^	uint32_t expire;$/;"	m	struct:timer_node	file:
expkind	skynet/3rd/lua/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon22
explist	skynet/3rd/lua/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
expr	skynet/3rd/lua/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	skynet/3rd/lua/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extra	skynet/3rd/lua/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString
extra	skynet/lualib-src/sproto/sproto.c	/^	int extra;$/;"	m	struct:field	file:
extra	skynet/lualib-src/sproto/sproto.h	/^	int extra; \/\/ SPROTO_TINTEGER: decimal ; SPROTO_TSTRING 0:utf8 string 1:binary$/;"	m	struct:sproto_arg
extra_	skynet/3rd/lua/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:
f	skynet/3rd/lua/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f	skynet/3rd/lua/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	skynet/3rd/lua/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon10	file:
f	skynet/3rd/lua/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	skynet/3rd/lua/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	skynet/3rd/lua/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	skynet/3rd/lua/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc
f	skynet/lualib-src/sproto/sproto.c	/^	struct field *f;$/;"	m	struct:sproto_type	typeref:struct:sproto_type::field	file:
f 	skynet/3rd/lpeg/test.lua	/^  f = m.P(function () touch = touch + 1; return true end)$/;"	f
f 	skynet/3rd/lpeg/test.lua	/^f = function (a, ...) if a ~= "x" then return {a, ...} end end$/;"	f
f 	skynet/3rd/lpeg/test.lua	/^function f (x) return x + 1 end$/;"	f
f-match	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="f-match"><\/a><code>lpeg.match (pattern, subject [, init])<\/code><\/h3>$/;"	a
f-setstack	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="f-setstack"><\/a><code>lpeg.setmaxstack (max)<\/code><\/h3>$/;"	a
f-type	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="f-type"><\/a><code>lpeg.type (value)<\/code><\/h3>$/;"	a
f-version	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="f-version"><\/a><code>lpeg.version<\/code><\/h3>$/;"	a
f1	skynet/test/testdatacenter.lua	/^local function f1()$/;"	f
f2	skynet/test/testdatacenter.lua	/^local function f2()$/;"	f
f_call	skynet/3rd/lua/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_close	skynet/3rd/lua/liolib.c	/^static int f_close (lua_State *L) {$/;"	f	file:
f_factor 	skynet/3rd/lpeg/test.lua	/^local function f_factor (v1, op, v2, d)$/;"	f
f_flush	skynet/3rd/lua/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	skynet/3rd/lua/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	skynet/3rd/lua/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	skynet/3rd/lua/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	skynet/3rd/lua/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	skynet/3rd/lua/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	skynet/3rd/lua/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	skynet/3rd/lua/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_term 	skynet/3rd/lpeg/test.lua	/^local function f_term (v1, op, v2, d)$/;"	f
f_tostring	skynet/3rd/lua/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	skynet/3rd/lua/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
failnext	skynet/3rd/lua/ltests.h	/^  int failnext;$/;"	m	struct:Memcontrol
family	skynet/skynet-src/socket_server.c	/^	int family;$/;"	m	struct:request_udp	file:
fasttm	skynet/3rd/lua/ltm.h	68;"	d
fatal	skynet/3rd/lua/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fchecksize	skynet/3rd/lua/lundump.c	/^static void fchecksize (LoadState *S, size_t size, const char *tname) {$/;"	f	file:
fd	skynet/service-src/service_harbor.c	/^	int fd;$/;"	m	struct:slave	file:
fd	skynet/skynet-src/socket_server.c	/^	int fd;$/;"	m	struct:request_bind	file:
fd	skynet/skynet-src/socket_server.c	/^	int fd;$/;"	m	struct:request_listen	file:
fd	skynet/skynet-src/socket_server.c	/^	int fd;$/;"	m	struct:request_udp	file:
fd	skynet/skynet-src/socket_server.c	/^	int fd;$/;"	m	struct:socket	file:
field	skynet/3rd/lua/lparser.c	/^static void field (LexState *ls, ConsControl *cc) {$/;"	f	file:
field	skynet/lualib-src/sproto/sproto.c	/^struct field {$/;"	s	file:
fieldsel	skynet/3rd/lua/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
filename	skynet/service-src/service_logger.c	/^	char * filename;$/;"	m	struct:logger	file:
fill_header	skynet/lualib-src/lua-cluster.c	/^fill_header(lua_State *L, uint8_t *buf, int sz) {$/;"	f	file:
fill_prefix	skynet/skynet-src/malloc_hook.c	/^fill_prefix(char* ptr) {$/;"	f	file:
fill_size	skynet/lualib-src/sproto/sproto.c	/^fill_size(uint8_t * data, int sz) {$/;"	f	file:
fill_uint32	skynet/lualib-src/lua-cluster.c	/^fill_uint32(uint8_t * buf, uint32_t n) {$/;"	f	file:
fillcolliding	skynet/lualib-src/lua-sharedata.c	/^fillcolliding(lua_State *L, struct context *ctx) {$/;"	f	file:
fillmem	skynet/3rd/lua/ltests.c	179;"	d	file:
fillmem	skynet/3rd/lua/ltests.c	185;"	d	file:
fillnocolliding	skynet/lualib-src/lua-sharedata.c	/^fillnocolliding(lua_State *L, struct context *ctx) {$/;"	f	file:
fillseq	skynet/3rd/lpeg/lptree.c	/^static void fillseq (TTree *tree, int tag, int n, const char *s) {$/;"	f	file:
fillset	skynet/3rd/lpeg/lptypes.h	103;"	d
filter_data	skynet/lualib-src/lua-netpack.c	/^filter_data(lua_State *L, int fd, uint8_t * buffer, int size) {$/;"	f	file:
filter_data_	skynet/lualib-src/lua-netpack.c	/^filter_data_(lua_State *L, int fd, uint8_t * buffer, int size) {$/;"	f	file:
filterpc	skynet/3rd/lua/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
finalfix	skynet/3rd/lpeg/lptree.c	/^static void finalfix (lua_State *L, int postable, TTree *g, TTree *t) {$/;"	f	file:
finallabel	skynet/3rd/lpeg/lpcode.c	/^static int finallabel (Instruction *code, int i) {$/;"	f	file:
finaltarget	skynet/3rd/lpeg/lpcode.c	/^static int finaltarget (Instruction *code, int i) {$/;"	f	file:
finaltarget	skynet/3rd/lua/lcode.c	/^static int finaltarget (Instruction *code, int i) {$/;"	f	file:
find 	skynet/3rd/lpeg/re.lua	/^local function find (s, p, i)$/;"	f
find 	skynet/3rd/lpeg/test.lua	/^local function find (p, s)$/;"	f
find_func	skynet/lualib/snax/hotfix.lua	/^local function find_func(funcs, group , name)$/;"	f
find_node	skynet/lualib/skynet/sharedata/corelib.lua	/^local function find_node(cobj, key, ...)$/;"	f
find_uncomplete	skynet/lualib-src/lua-netpack.c	/^find_uncomplete(struct queue *q, int fd) {$/;"	f	file:
findback	skynet/3rd/lpeg/lpcap.c	/^static Capture *findback (CapState *cs, Capture *ref) {$/;"	f	file:
finddyncap	skynet/3rd/lpeg/lpcap.c	/^int finddyncap (Capture *cap, Capture *last) {$/;"	f
findfield	skynet/3rd/lua/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	skynet/3rd/lua/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	skynet/3rd/lua/ltable.c	/^static unsigned int findindex (lua_State *L, Table *t, TValue *key,$/;"	f	file:
findlabel	skynet/3rd/lua/lparser.c	/^static Labeldesc *findlabel (LexState *ls, TString *name) {$/;"	f	file:
findlast	skynet/3rd/lua/lgc.c	/^static GCObject **findlast (GCObject **p) {$/;"	f	file:
findloader	skynet/3rd/lua/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findopen	skynet/3rd/lpeg/lpcap.c	/^static Capture *findopen (Capture *cap) {$/;"	f	file:
findopen	skynet/3rd/lpeg/lpvm.c	/^static Capture *findopen (Capture *cap, Index_t currindex) {$/;"	f	file:
findpcall	skynet/3rd/lua/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findroot	skynet/lualib/skynet/sharedata/corelib.lua	/^local function findroot(self)$/;"	f
findsetreg	skynet/3rd/lua/ldebug.c	/^static int findsetreg (const Proto *p, int lastpc, int reg) {$/;"	f	file:
findtable	game/myservice/common.lua	/^    local function findtable(tbl,fname)$/;"	f
findtag	skynet/lualib-src/sproto/sproto.c	/^findtag(const struct sproto_type *st, int tag) {$/;"	f	file:
findvararg	skynet/3rd/lua/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	skynet/3rd/lua/ldo.c	/^static void finishCcall (lua_State *L, CallInfo *ci) {$/;"	f	file:
finishbinexpneg	skynet/3rd/lua/lcode.c	/^static int finishbinexpneg (FuncState *fs, expdesc *e1, expdesc *e2,$/;"	f	file:
finishbinexpval	skynet/3rd/lua/lcode.c	/^static void finishbinexpval (FuncState *fs, expdesc *e1, expdesc *e2,$/;"	f	file:
finishgencycle	skynet/3rd/lua/lgc.c	/^static void finishgencycle (lua_State *L, global_State *g) {$/;"	f	file:
finishpcall	skynet/3rd/lua/lbaselib.c	/^static int finishpcall (lua_State *L, int status, lua_KContext extra) {$/;"	f	file:
finishpcallk	skynet/3rd/lua/ldo.c	/^static int finishpcallk (lua_State *L,  CallInfo *ci) {$/;"	f	file:
finishrawget	skynet/3rd/lua/lapi.c	/^l_sinline int finishrawget (lua_State *L, const TValue *val) {$/;"	f
finishrelcode	skynet/3rd/lpeg/lpcode.c	/^static void finishrelcode (lua_State *L, Pattern *p, Instruction *block,$/;"	f	file:
finobj	skynet/3rd/lua/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
finobjold1	skynet/3rd/lua/lstate.h	/^  GCObject *finobjold1;  \/* list of old1 objects with finalizers *\/$/;"	m	struct:global_State
finobjrold	skynet/3rd/lua/lstate.h	/^  GCObject *finobjrold;  \/* list of really old objects with finalizers *\/$/;"	m	struct:global_State
finobjsur	skynet/3rd/lua/lstate.h	/^  GCObject *finobjsur;  \/* list of survival objects with finalizers *\/$/;"	m	struct:global_State
firstcap	skynet/3rd/lpeg/lpcap.h	/^  int firstcap;  \/* stack index of first capture pushed in the stack *\/$/;"	m	struct:CapState
firstdef 	skynet/3rd/lpeg/re.lua	/^local function firstdef (n, r) return adddef({n}, n, r) end$/;"	f
firstgoto	skynet/3rd/lua/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	skynet/3rd/lua/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	skynet/3rd/lua/lparser.h	/^  int firstlabel;  \/* index of first label (in 'dyd->label->arr') *\/$/;"	m	struct:FuncState
firstlocal	skynet/3rd/lua/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
firstold1	skynet/3rd/lua/lstate.h	/^  GCObject *firstold1;  \/* first OLD1 object in the list (if any) *\/$/;"	m	struct:global_State
firsttry	skynet/3rd/lua/lmem.c	/^static void *firsttry (global_State *g, void *block, size_t os, size_t ns) {$/;"	f	file:
firsttry	skynet/3rd/lua/lmem.c	76;"	d	file:
fitsBx	skynet/3rd/lua/lcode.c	/^static int fitsBx (lua_Integer i) {$/;"	f	file:
fitsC	skynet/3rd/lua/lcode.c	/^static int fitsC (lua_Integer i) {$/;"	f	file:
fixedgc	skynet/3rd/lua/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State
fixedlen	skynet/3rd/lpeg/lpcode.c	/^int fixedlen (TTree *tree) {$/;"	f
fixforjump	skynet/3rd/lua/lparser.c	/^static void fixforjump (FuncState *fs, int pc, int dest, int back) {$/;"	f	file:
fixjump	skynet/3rd/lua/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
fixonecall	skynet/3rd/lpeg/lptree.c	/^static void fixonecall (lua_State *L, int postable, TTree *g, TTree *t) {$/;"	f	file:
flags	skynet/.ycm_extra_conf.py	/^flags = [$/;"	v
flags	skynet/3rd/lua/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flags	skynet/lualib-src/lua-mongo.c	/^	int flags;$/;"	m	struct:response	file:
flags	skynet/lualib-src/lua-mongo.c	/^	int32_t flags;$/;"	m	struct:header_t	file:
flattypename	skynet/lualib/sprotoparser.lua	/^local function flattypename(r)$/;"	f
floatforloop	skynet/3rd/lua/lvm.c	/^static int floatforloop (StkId ra) {$/;"	f	file:
fltvalue	skynet/3rd/lua/lobject.h	332;"	d
fltvalueraw	skynet/3rd/lua/lobject.h	335;"	d
foldbinop	skynet/3rd/lua/lcode.h	45;"	d
foldcap	skynet/3rd/lpeg/lpcap.c	/^static int foldcap (CapState *cs) {$/;"	f	file:
foo 	skynet/3rd/lpeg/test.lua	/^  function foo (s, i)$/;"	f
foo 	skynet/3rd/lpeg/test.lua	/^  local function foo (s,i)$/;"	f
forbody	skynet/3rd/lua/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isgen) {$/;"	f	file:
force_close	skynet/skynet-src/socket_server.c	/^force_close(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
force_end_sell	game/myservice/player_handler.lua	/^function force_end_sell(self)$/;"	f
forlimit	skynet/3rd/lua/lvm.c	/^static int forlimit (lua_State *L, lua_Integer init, const TValue *lim,$/;"	f	file:
forlist	skynet/3rd/lua/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format_pipeline	skynet/lualib/skynet/db/mongo.lua	/^local function format_pipeline(self, with_limit_and_skip, is_count)$/;"	f
format_table	skynet/service/dbg.lua	/^local function format_table(t)$/;"	f
format_table	skynet/service/debug_console.lua	/^local function format_table(t)$/;"	f
formatvarinfo	skynet/3rd/lua/ldebug.c	/^static const char *formatvarinfo (lua_State *L, const char *kind,$/;"	f	file:
fornum	skynet/3rd/lua/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forprep	skynet/3rd/lua/lvm.c	/^static int forprep (lua_State *L, StkId ra) {$/;"	f	file:
forstat	skynet/3rd/lua/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forward_cb	skynet/lualib-src/lua-skynet.c	/^forward_cb(struct skynet_context * context, void * ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
forward_cmd	skynet/service/debug_console.lua	/^	local function forward_cmd()$/;"	f
forward_local_messsage	skynet/service-src/service_harbor.c	/^forward_local_messsage(struct harbor *h, void *msg, int sz) {$/;"	f	file:
forward_message	skynet/skynet-src/skynet_socket.c	/^forward_message(int type, bool padding, struct socket_message * result) {$/;"	f	file:
forward_message_tcp	skynet/skynet-src/socket_server.c	/^forward_message_tcp(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message * result) {$/;"	f	file:
forward_message_udp	skynet/skynet-src/socket_server.c	/^forward_message_udp(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message * result) {$/;"	f	file:
frealloc	skynet/3rd/lua/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free	skynet/skynet-src/socket_server.h	/^	void (*free)(void *);$/;"	m	struct:socket_object_interface
free_buffer	skynet/skynet-src/socket_server.c	/^free_buffer(struct socket_server *ss, struct socket_sendbuffer *buf) {$/;"	f	file:
free_func	skynet/skynet-src/socket_server.c	/^	void (*free_func)(void *);$/;"	m	struct:send_object	file:
free_monitor	skynet/skynet-src/skynet_start.c	/^free_monitor(struct monitor *m) {$/;"	f	file:
free_wb_list	skynet/skynet-src/socket_server.c	/^free_wb_list(struct socket_server *ss, struct wb_list *list) {$/;"	f	file:
freeblock	skynet/3rd/lua/ltests.c	/^static void freeblock (Memcontrol *mc, Header *block) {$/;"	f	file:
freecode	skynet/3rd/lpeg/lpcode.c	/^void freecode (lua_State *L, Pattern *p) {$/;"	f
freeexp	skynet/3rd/lua/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeexps	skynet/3rd/lua/lcode.c	/^static void freeexps (FuncState *fs, expdesc *e1, expdesc *e2) {$/;"	f	file:
freehash	skynet/3rd/lua/ltable.c	/^static void freehash (lua_State *L, Table *t) {$/;"	f	file:
freelist	skynet/3rd/lua/lauxlib.c	654;"	d	file:
freelist	skynet/service-src/databuffer.h	/^	struct message * freelist;$/;"	m	struct:messagepool	typeref:struct:messagepool::message
freeobj	skynet/3rd/lua/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	skynet/3rd/lua/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	skynet/3rd/lua/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freeregs	skynet/3rd/lua/lcode.c	/^static void freeregs (FuncState *fs, int r1, int r2) {$/;"	f	file:
freestack	skynet/3rd/lua/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
freeupval	skynet/3rd/lua/lgc.c	/^static void freeupval (lua_State *L, UpVal *uv) {$/;"	f	file:
from_bigendian	skynet/service-src/service_harbor.c	/^from_bigendian(uint32_t n) {$/;"	f	file:
fromstate	skynet/3rd/lua/lstate.c	51;"	d	file:
fs	skynet/3rd/lua/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
ftransfer	skynet/3rd/lua/lstate.h	/^      unsigned short ftransfer;  \/* offset of first value transferred *\/$/;"	m	struct:CallInfo::__anon31::__anon32
ftransfer	skynet/3rd/lua/lua.h	/^  unsigned short ftransfer;   \/* (r) index of first value transferred *\/$/;"	m	struct:lua_Debug
fullgen	skynet/3rd/lua/lgc.c	/^static lu_mem fullgen (lua_State *L, global_State *g) {$/;"	f	file:
fullinc	skynet/3rd/lua/lgc.c	/^static void fullinc (lua_State *L, global_State *g) {$/;"	f	file:
fullset	skynet/3rd/lpeg/lpcode.c	/^static const Charset *fullset = &fullset_;$/;"	v	file:
fullset_	skynet/3rd/lpeg/lpcode.c	/^static const Charset fullset_ =$/;"	v	file:
func	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="func">Functions<\/a><\/h2>$/;"	a
func	skynet/3rd/lpeg/re.html	/^<h2><a name="func">Functions<\/a><\/h2>$/;"	a
func	skynet/3rd/lua/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	skynet/3rd/lua/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	skynet/3rd/lua/lstate.h	/^  StkIdRel func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
func	skynet/skynet-src/skynet_server.c	/^	const char * (*func)(struct skynet_context * context, const char * param);$/;"	m	struct:command_func	file:
func_id	skynet/lualib/snax/interface.lua	/^	local function func_id(id, group)$/;"	f
funcargs	skynet/3rd/lua/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcidx	skynet/3rd/lua/lstate.h	/^    int funcidx;  \/* called-function index *\/$/;"	m	union:CallInfo::__anon31
funcinfo	skynet/3rd/lua/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcinstsize	skynet/3rd/lpeg/lptypes.h	142;"	d
funcname	skynet/3rd/lua/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcnamefromcall	skynet/3rd/lua/ldebug.c	/^static const char *funcnamefromcall (lua_State *L, CallInfo *ci,$/;"	f	file:
funcnamefromcode	skynet/3rd/lua/ldebug.c	/^static const char *funcnamefromcode (lua_State *L, const Proto *p,$/;"	f	file:
funcs	skynet/3rd/lua/lutf8lib.c	/^static const luaL_Reg funcs[] = {$/;"	v	file:
funcstat	skynet/3rd/lua/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function (c, p) return c 	skynet/3rd/lpeg/re.lua	/^                          function (c, p) return c == "^" and any - p or p end$/;"	f
function addtag (s, i, t, tag) t.tag 	skynet/3rd/lpeg/test.lua	/^function addtag (s, i, t, tag) t.tag = tag; return i, t end$/;"	f
function eq (_, _, a, b) return a 	skynet/3rd/lpeg/test.lua	/^function eq (_, _, a, b) return a == b end$/;"	f
function foo (p) t[#t + 1] 	skynet/3rd/lpeg/test.lua	/^function foo (p) t[#t + 1] = p; return p .. "x" end$/;"	f
functioncap	skynet/3rd/lpeg/lpcap.c	/^static int functioncap (CapState *cs) {$/;"	f	file:
fvalue	skynet/3rd/lua/lobject.h	606;"	d
fvalueraw	skynet/3rd/lua/lobject.h	609;"	d
g	skynet/3rd/lua/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g 	skynet/3rd/lpeg/test.lua	/^g = function (...) return 1, ... end$/;"	f
g_iofile	skynet/3rd/lua/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	skynet/3rd/lua/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	skynet/3rd/lua/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gate	skynet/service-src/service_gate.c	/^struct gate {$/;"	s	file:
gate_create	skynet/service-src/service_gate.c	/^gate_create(void) {$/;"	f
gate_init	skynet/service-src/service_gate.c	/^gate_init(struct gate *g , struct skynet_context * ctx, char * parm) {$/;"	f
gate_release	skynet/service-src/service_gate.c	/^gate_release(struct gate *g) {$/;"	f
gateserver.closeclient	skynet/lualib/snax/gateserver.lua	/^function gateserver.closeclient(fd)$/;"	f
gateserver.openclient	skynet/lualib/snax/gateserver.lua	/^function gateserver.openclient(fd)$/;"	f
gateserver.start	skynet/lualib/snax/gateserver.lua	/^function gateserver.start(handler)$/;"	f
gc	skynet/3rd/lua/lobject.h	/^  struct GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value	typeref:struct:Value::GCObject
gc	skynet/3rd/lua/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion
gc_age	skynet/3rd/lua/ltests.c	/^static int gc_age (lua_State *L) {$/;"	f	file:
gc_color	skynet/3rd/lua/ltests.c	/^static int gc_color (lua_State *L) {$/;"	f	file:
gc_printobj	skynet/3rd/lua/ltests.c	/^static int gc_printobj (lua_State *L) {$/;"	f	file:
gc_state	skynet/3rd/lua/ltests.c	/^static int gc_state (lua_State *L) {$/;"	f	file:
gcemergency	skynet/3rd/lua/lstate.h	/^  lu_byte gcemergency;  \/* true if this is an emergency collection *\/$/;"	m	struct:global_State
gckey	skynet/3rd/lua/lobject.h	769;"	d
gckeyN	skynet/3rd/lua/lobject.h	770;"	d
gckind	skynet/3rd/lua/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	skynet/3rd/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	skynet/3rd/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	skynet/3rd/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Udata
gclist	skynet/3rd/lua/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2ccl	skynet/3rd/lua/lstate.h	376;"	d
gco2cl	skynet/3rd/lua/lstate.h	377;"	d
gco2lcl	skynet/3rd/lua/lstate.h	375;"	d
gco2p	skynet/3rd/lua/lstate.h	380;"	d
gco2t	skynet/3rd/lua/lstate.h	379;"	d
gco2th	skynet/3rd/lua/lstate.h	381;"	d
gco2ts	skynet/3rd/lua/lstate.h	372;"	d
gco2u	skynet/3rd/lua/lstate.h	374;"	d
gco2upv	skynet/3rd/lua/lstate.h	382;"	d
gcpause	skynet/3rd/lua/lstate.h	/^  lu_byte gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	skynet/3rd/lua/lgc.h	163;"	d
gcstate	skynet/3rd/lua/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	skynet/3rd/lua/lstate.h	/^  lu_byte gcstepmul;  \/* GC "speed" *\/$/;"	m	struct:global_State
gcstepsize	skynet/3rd/lua/lstate.h	/^  lu_byte gcstepsize;  \/* (log2 of) GC granularity *\/$/;"	m	struct:global_State
gcstopem	skynet/3rd/lua/lstate.h	/^  lu_byte gcstopem;  \/* stops emergency collections *\/$/;"	m	struct:global_State
gcstp	skynet/3rd/lua/lstate.h	/^  lu_byte gcstp;  \/* control whether GC is running *\/$/;"	m	struct:global_State
gctm	skynet/3rd/lua/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	skynet/3rd/lua/lobject.h	305;"	d
gcvalueN	skynet/3rd/lua/lgc.c	91;"	d	file:
gcvalueraw	skynet/3rd/lua/lobject.h	307;"	d
gen_interface	game/myservice/simpleweb.lua	/^local function gen_interface(protocol, fd)$/;"	f
gen_interface	skynet/examples/simpleweb.lua	/^local function gen_interface(protocol, fd)$/;"	f
gen_interface	skynet/lualib/http/httpc.lua	/^local function gen_interface(protocol, fd, hostname)$/;"	f
gen_metatable	skynet/lualib-src/lua-datasheet.c	/^gen_metatable(lua_State *L) {$/;"	f	file:
gen_post	skynet/lualib/skynet/snax.lua	/^local function gen_post(type, handle)$/;"	f
gen_print	skynet/lualib/skynet/remotedebug.lua	/^local function gen_print(fd)$/;"	f
gen_req	skynet/lualib/skynet/snax.lua	/^local function gen_req(type, handle)$/;"	f
gen_response	skynet/lualib/sproto.lua	/^local function gen_response(self, response, session)$/;"	f
gen_tid	skynet/lualib/skynet/dns.lua	/^local function gen_tid()$/;"	f
gen_udp_address	skynet/skynet-src/socket_server.c	/^gen_udp_address(int protocol, union sockaddr_all *sa, uint8_t * udp_address) {$/;"	f	file:
generic_reader	skynet/3rd/lua/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
genkey	skynet/lualib/skynet/sharedata/corelib.lua	/^local function genkey(self)$/;"	f
genlink	skynet/3rd/lua/lgc.c	/^static void genlink (global_State *g, GCObject *o) {$/;"	f	file:
genmajormul	skynet/3rd/lua/lstate.h	/^  lu_byte genmajormul;  \/* control for major generational collections *\/$/;"	m	struct:global_State
genminormul	skynet/3rd/lua/lstate.h	/^  lu_byte genminormul;  \/* control for minor generational collections *\/$/;"	m	struct:global_State
genstep	skynet/3rd/lua/lgc.c	/^static void genstep (lua_State *L, global_State *g) {$/;"	f	file:
get2digits	skynet/3rd/lua/lstrlib.c	/^static const char *get2digits (const char *s) {$/;"	f	file:
getCcalls	skynet/3rd/lua/lstate.h	107;"	d
getF	skynet/3rd/lua/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getGtable	skynet/3rd/lua/lapi.c	662;"	d	file:
getIndent 	skynet/test/testmysql.lua	/^    getIndent = function(level)$/;"	f
getOpMode	skynet/3rd/lua/lopcodes.h	383;"	d
getS	skynet/3rd/lua/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_address	skynet/service/multicastd.lua	/^local function get_address(t, id)$/;"	f
get_allocated_field	skynet/skynet-src/malloc_hook.c	/^get_allocated_field(uint32_t handle) {$/;"	f	file:
get_api	skynet/skynet-src/skynet_module.c	/^get_api(struct skynet_module *mod, const char *api_name) {$/;"	f	file:
get_base_info 	game/myservice/player_t.lua	/^get_base_info = function(self)$/;"	f
get_buffer	skynet/lualib-src/lua-seri.c	/^get_buffer(lua_State *L, struct read_block *rb, int len) {$/;"	f	file:
get_buffer	skynet/lualib-src/lua-socket.c	/^get_buffer(lua_State *L, int index, struct socket_sendbuffer *buf) {$/;"	f	file:
get_card_rest 	game/myclient/player_client_t.lua	/^get_card_rest = function(self)$/;"	f
get_data	game/myservice/status.lua	/^function get_data(what)$/;"	f
get_dest_string	skynet/lualib-src/lua-skynet.c	/^get_dest_string(lua_State *L, int index) {$/;"	f	file:
get_encodefield	skynet/lualib-src/sproto/lsproto.c	/^get_encodefield(const struct sproto_arg *args) {$/;"	f	file:
get_fd 	game/myservice/player_t.lua	/^get_fd = function(self)$/;"	f
get_integer	skynet/lualib-src/lua-seri.c	/^get_integer(lua_State *L, struct read_block *rb, int cookie) {$/;"	f	file:
get_ipad	skynet/lualib/md5.lua	/^local function get_ipad(c)$/;"	f
get_length	skynet/lualib-src/lua-bson.c	/^get_length(const uint8_t * data) {$/;"	f	file:
get_length	skynet/lualib-src/lua-mongo.c	/^get_length(document buffer) {$/;"	f	file:
get_limits	skynet/3rd/lua/ltests.c	/^static int get_limits (lua_State *L) {$/;"	f	file:
get_lv_name 	game/myclient/player_client_t.lua	/^get_lv_name = function(self)$/;"	f
get_lv_name 	game/myservice/player_t.lua	/^get_lv_name = function(self)$/;"	f
get_matrix	skynet/lualib-src/lua-sharetable.c	/^get_matrix(lua_State *L) {$/;"	f	file:
get_mine_min 	game/myservice/player_t.lua	/^get_mine_min = function(self)$/;"	f
get_name 	game/myservice/player_t.lua	/^get_name = function(self)$/;"	f
get_npc 	game/myservice/player_t.lua	/^get_npc = function(self, name)$/;"	f
get_onecapture	skynet/3rd/lua/lstrlib.c	/^static size_t get_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
get_opad	skynet/lualib/md5.lua	/^local function get_opad(c)$/;"	f
get_pointer	skynet/lualib-src/lua-seri.c	/^get_pointer(lua_State *L, struct read_block *rb) {$/;"	f	file:
get_pre_name 	game/myclient/cmd_base_t.lua	/^get_pre_name = function(self, fname)$/;"	f
get_pre_name 	game/myclient/cmd_buy_t.lua	/^get_pre_name = function(self, fname)$/;"	f
get_prompt	skynet/3rd/lua/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_provider	skynet/lualib/skynet/service.lua	/^local function get_provider()$/;"	f
get_queue	skynet/lualib-src/lua-netpack.c	/^get_queue(lua_State *L) {$/;"	f	file:
get_queue	skynet/lualib/skynet/cluster.lua	/^local function get_queue(t, node)$/;"	f
get_quit_tips 	game/myclient/cmd_base_t.lua	/^get_quit_tips = function(self, ply)$/;"	f
get_quit_tips 	game/myclient/cmd_buy_t.lua	/^get_quit_tips = function(self, ply)$/;"	f
get_real	skynet/lualib-src/lua-seri.c	/^get_real(lua_State *L, struct read_block *rb) {$/;"	f	file:
get_response	skynet/lualib/skynet/socketchannel.lua	/^local function get_response(func, sock)$/;"	f
get_role 	game/myservice/npc_mingwu_t.lua	/^get_role = function(self)$/;"	f
get_role 	game/myservice/npc_t.lua	/^get_role = function(self)$/;"	f
get_save_info 	game/myservice/player_t.lua	/^get_save_info = function(self)$/;"	f
get_sender	skynet/lualib/skynet/cluster.lua	/^local function get_sender(node)$/;"	f
get_size	skynet/lualib-src/lua-sharetable.c	/^get_size(lua_State *L) {$/;"	f	file:
get_state 	game/myservice/player_t.lua	/^get_state = function(self)$/;"	f
get_table	skynet/lualib-src/lua-sharedata.c	/^get_table(lua_State *L, int index) {$/;"	f	file:
get_time	game/myservice/common.lua	/^function get_time()$/;"	f
get_time	skynet/lualib-src/lua-skynet.c	/^get_time() {$/;"	f	file:
get_time	skynet/service-src/service_snlua.c	/^get_time() {$/;"	f	file:
get_typename	skynet/lualib-src/sproto/sproto.c	/^get_typename(int type, struct field *f) {$/;"	f	file:
getage	skynet/3rd/lua/lgc.h	117;"	d
getarg	skynet/3rd/lua/lopcodes.h	121;"	d
getbaseline	skynet/3rd/lua/ldebug.c	/^static int getbaseline (const Proto *f, int pc, int *basepc) {$/;"	f	file:
getbinopr	skynet/3rd/lua/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	skynet/3rd/lua/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getbuff	skynet/3rd/lua/lobject.c	/^static char *getbuff (BuffFS *buff, int sz) {$/;"	f	file:
getbuffer	skynet/lualib-src/sproto/lsproto.c	/^getbuffer(lua_State *L, int index, size_t *sz) {$/;"	f	file:
getbytefromcharset	skynet/3rd/lpeg/lpcset.c	/^byte getbytefromcharset (const charsetinfo *info, int index) {$/;"	f
getcaptures	skynet/3rd/lpeg/lpcap.c	/^int getcaptures (lua_State *L, const char *s, const char *r, int ptop) {$/;"	f
getcistrecst	skynet/3rd/lua/lstate.h	233;"	d
getco	skynet/3rd/lua/lcorolib.c	/^static lua_State *getco (lua_State *L) {$/;"	f	file:
getcobj	skynet/lualib/skynet/sharedata/corelib.lua	/^local function getcobj(self)$/;"	f
getcurrentline	skynet/3rd/lua/ldebug.c	/^static int getcurrentline (CallInfo *ci) {$/;"	f	file:
getdef 	skynet/3rd/lpeg/re.lua	/^local function getdef (id, defs)$/;"	f
getdetails	skynet/3rd/lua/lstrlib.c	/^static KOption getdetails (Header *h, size_t totalsize,$/;"	f	file:
getendpos	skynet/3rd/lua/lstrlib.c	/^static size_t getendpos (lua_State *L, int arg, lua_Integer def,$/;"	f	file:
getfield	skynet/3rd/lua/loslib.c	/^static int getfield (lua_State *L, const char *key, int d, int delta) {$/;"	f	file:
getfirst	skynet/3rd/lpeg/lpcode.c	/^static int getfirst (TTree *tree, const Charset *follow, Charset *firstset) {$/;"	f	file:
getfirstrule	skynet/3rd/lpeg/lptree.c	/^static void getfirstrule (lua_State *L, int arg, int postab) {$/;"	f	file:
getfloat	skynet/lualib-src/lua-datasheet.c	/^getfloat(const void *v) {$/;"	f	file:
getformat	skynet/3rd/lua/lstrlib.c	/^static const char *getformat (lua_State *L, const char *strfrmt,$/;"	f	file:
getfreepos	skynet/3rd/lua/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfromktable	skynet/3rd/lpeg/lpcap.c	10;"	d	file:
getfuncname	skynet/3rd/lua/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
getgclist	skynet/3rd/lua/lgc.c	/^static GCObject **getgclist (GCObject *o) {$/;"	f	file:
getgcparam	skynet/3rd/lua/lgc.h	140;"	d
getgeneric	skynet/3rd/lua/ltable.c	/^static const TValue *getgeneric (Table *t, const TValue *key, int deadok) {$/;"	f	file:
gethere	skynet/3rd/lpeg/lpcode.c	513;"	d	file:
gethexa	skynet/3rd/lua/llex.c	/^static int gethexa (LexState *ls) {$/;"	f	file:
getindex	skynet/3rd/lua/ltests.c	1382;"	d	file:
getindex_aux	skynet/3rd/lua/ltests.c	/^static int getindex_aux (lua_State *L, lua_State *L1, const char **pc) {$/;"	f	file:
getinfo	skynet/lualib-src/lua-socket.c	/^getinfo(lua_State *L, struct socket_info *si) {$/;"	f	file:
getinstr	skynet/3rd/lpeg/lpcode.c	459;"	d	file:
getinstruction	skynet/3rd/lua/lcode.h	55;"	d
getiofile	skynet/3rd/lua/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	skynet/3rd/lua/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	skynet/3rd/lua/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getkind	skynet/3rd/lpeg/lptypes.h	117;"	d
getlocalattribute	skynet/3rd/lua/lparser.c	/^static int getlocalattribute (LexState *ls) {$/;"	f	file:
getlocalvardesc	skynet/3rd/lua/lparser.c	/^static Vardesc *getlocalvardesc (FuncState *fs, int vidx) {$/;"	f	file:
getlock	skynet/3rd/lua/ltests.h	85;"	d
getname	skynet/skynet-src/socket_server.c	/^getname(union sockaddr_all *u, char *buffer, size_t sz) {$/;"	f	file:
getnextfilename	skynet/3rd/lua/loadlib.c	/^static const char *getnextfilename (char **path, char *end) {$/;"	f	file:
getnodekey	skynet/3rd/lua/lobject.h	721;"	d
getnum	skynet/3rd/lua/lstrlib.c	/^static int getnum (const char **fmt, int df) {$/;"	f	file:
getnum	skynet/3rd/lua/ltests.c	1380;"	d	file:
getnum_aux	skynet/3rd/lua/ltests.c	/^static int getnum_aux (lua_State *L, lua_State *L1, const char **pc) {$/;"	f	file:
getnumlimit	skynet/3rd/lua/lstrlib.c	/^static int getnumlimit (Header *h, const char **fmt, int df) {$/;"	f	file:
getnv	skynet/lualib/skynet/sharetable.lua	/^    local function getnv(v)$/;"	f
getoah	skynet/3rd/lua/lstate.h	248;"	d
getobjname	skynet/3rd/lua/ldebug.c	/^static const char *getobjname (const Proto *p, int lastpc, int reg,$/;"	f	file:
getoff	skynet/3rd/lpeg/lptypes.h	118;"	d
getoffset	skynet/3rd/lpeg/lpvm.c	21;"	d	file:
getoption	skynet/3rd/lua/lstrlib.c	/^static KOption getoption (Header *h, const char **fmt, int *size) {$/;"	f	file:
getpatt	skynet/3rd/lpeg/lptree.c	/^static TTree *getpatt (lua_State *L, int idx, int *len) {$/;"	f	file:
getpattern	skynet/3rd/lpeg/lptree.c	/^static Pattern *getpattern (lua_State *L, int idx) {$/;"	f	file:
getproto	skynet/3rd/lua/lobject.h	670;"	d
getref	skynet/3rd/lua/ltests.c	/^static int getref (lua_State *L) {$/;"	f	file:
getsize	skynet/3rd/lpeg/lptree.c	/^static int getsize (lua_State *L, int idx) {$/;"	f	file:
getstackbase	skynet/3rd/lpeg/lpvm.c	79;"	d	file:
getstate	skynet/3rd/lua/ltests.c	/^static lua_State *getstate (lua_State *L) {$/;"	f	file:
getstr	skynet/3rd/lua/lobject.h	404;"	d
getstrcaps	skynet/3rd/lpeg/lpcap.c	/^static int getstrcaps (CapState *cs, StrAux *cps, int n) {$/;"	f	file:
getstring	skynet/3rd/lua/ltests.c	1381;"	d	file:
getstring_aux	skynet/3rd/lua/ltests.c	/^static const char *getstring_aux (lua_State *L, char *buff, const char **pc) {$/;"	f	file:
gettable	skynet/3rd/lua/lapi.c	/^static Table *gettable (lua_State *L, int idx) {$/;"	f	file:
gettable	skynet/lualib-src/lua-datasheet.c	/^gettable(const struct document *doc, int index) {$/;"	f	file:
getthread	skynet/3rd/lua/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
getthread	skynet/lualib-src/lua-debugchannel.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettime	skynet/skynet-src/skynet_timer.c	/^gettime() {$/;"	f	file:
gettotalbytes	skynet/3rd/lua/lstate.h	393;"	d
gettree	skynet/3rd/lpeg/lptree.c	/^static TTree *gettree (lua_State *L, int idx, int *len) {$/;"	f	file:
getudatamem	skynet/3rd/lua/lobject.h	496;"	d
getuint32	skynet/lualib-src/lua-datasheet.c	/^getuint32(const void *v) {$/;"	f	file:
getunopr	skynet/3rd/lua/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	skynet/3rd/lua/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	skynet/3rd/lua/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
getupvaluetable	skynet/lualib/skynet/inject.lua	/^local function getupvaluetable(u, func, unique)$/;"	f
gfasttm	skynet/3rd/lua/ltm.h	65;"	d
giveup	skynet/3rd/lpeg/lpvm.c	/^static const Instruction giveup = {{IGiveup, 0, {0}}};$/;"	v	file:
globalL	skynet/3rd/lua/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	skynet/3rd/lua/lstate.h	/^typedef struct global_State {$/;"	s
global_State	skynet/3rd/lua/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_queue	skynet/skynet-src/skynet_mq.c	/^struct global_queue {$/;"	s	file:
globalname	skynet/lualib/skynet/manager.lua	/^local function globalname(name, handle)$/;"	f
gmatch	skynet/3rd/lua/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	skynet/3rd/lua/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	skynet/3rd/lua/ltable.h	15;"	d
gnode	skynet/3rd/lua/ltable.h	13;"	d
gnodelast	skynet/3rd/lua/lgc.c	122;"	d	file:
go_clear	game/myservice/table_ext.lua	/^local function go_clear(t, k, tail, ...)$/;"	f
go_inject	game/myservice/table_ext.lua	/^local function go_inject(t, k, v, tail, ...)$/;"	f
gotostat	skynet/3rd/lua/lparser.c	/^static void gotostat (LexState *ls) {$/;"	f	file:
grammar	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="grammar">Grammars<\/a><\/h2>$/;"	a
gray	skynet/3rd/lua/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
grayagain	skynet/3rd/lua/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
growcap	skynet/3rd/lpeg/lpvm.c	/^static Capture *growcap (lua_State *L, Capture *capture, int *capsize,$/;"	f	file:
growstrtab	skynet/3rd/lua/lstring.c	/^static void growstrtab (lua_State *L, stringtable *tb) {$/;"	f	file:
gsub	skynet/3rd/lpeg/lpeg.html	/^function gsub (s, patt, repl)$/;"	f
gsub 	skynet/3rd/lpeg/re.lua	/^local function gsub (s, p, rep)$/;"	f
gt	skynet/3rd/lua/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
guess_name_type	skynet/lualib/skynet/dns.lua	/^local function guess_name_type(name)$/;"	f
gval	skynet/3rd/lua/ltable.h	14;"	d
gxf	skynet/3rd/lua/ldebug.c	/^static const char *gxf (const Proto *p, int pc, Instruction i, int isup) {$/;"	f	file:
h	skynet/3rd/lua/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState
h	skynet/3rd/lua/lmathlib.c	/^  lu_int32 h;  \/* higher half *\/$/;"	m	struct:Rand64	file:
h	skynet/3rd/lua/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table
h 	game/myclient/player_client_t.lua	/^    h = function(self)$/;"	f
halfProtect	skynet/3rd/lua/lvm.c	1125;"	d	file:
halfclose_read	skynet/skynet-src/socket_server.c	/^halfclose_read(struct socket *s) {$/;"	f	file:
handle	skynet/service-src/service_logger.c	/^	FILE * handle;$/;"	m	struct:logger	file:
handle	skynet/skynet-src/malloc_hook.c	/^	ATOM_ULONG handle;$/;"	m	struct:mem_data	file:
handle	skynet/skynet-src/malloc_hook.c	/^	uint32_t handle;$/;"	m	struct:mem_cookie	file:
handle	skynet/skynet-src/skynet_handle.c	/^	uint32_t handle;$/;"	m	struct:handle_name	file:
handle	skynet/skynet-src/skynet_harbor.h	/^	uint32_t handle;$/;"	m	struct:remote_name
handle	skynet/skynet-src/skynet_mq.c	/^	uint32_t handle;$/;"	m	struct:message_queue	file:
handle	skynet/skynet-src/skynet_server.c	/^	uint32_t handle;$/;"	m	struct:drop_t	file:
handle	skynet/skynet-src/skynet_server.c	/^	uint32_t handle;$/;"	m	struct:skynet_context	file:
handle	skynet/skynet-src/skynet_timer.c	/^	uint32_t handle;$/;"	m	struct:timer_event	file:
handle.close	skynet/examples/simplewebsocket.lua	/^    function handle.close(id, code, reason)$/;"	f
handle.connect	skynet/examples/simplewebsocket.lua	/^    function handle.connect(id)$/;"	f
handle.error	skynet/examples/simplewebsocket.lua	/^    function handle.error(id)$/;"	f
handle.handshake	skynet/examples/simplewebsocket.lua	/^    function handle.handshake(id, header, url)$/;"	f
handle.message	skynet/examples/simplewebsocket.lua	/^    function handle.message(id, msg, msg_type)$/;"	f
handle.ping	skynet/examples/simplewebsocket.lua	/^    function handle.ping(id)$/;"	f
handle.pong	skynet/examples/simplewebsocket.lua	/^    function handle.pong(id)$/;"	f
handle_exit	skynet/skynet-src/skynet_server.c	/^handle_exit(struct skynet_context * context, uint32_t handle) {$/;"	f	file:
handle_hup	skynet/skynet-src/skynet_start.c	/^handle_hup(int signal) {$/;"	f	file:
handle_index	skynet/skynet-src/skynet_handle.c	/^	uint32_t handle_index;$/;"	m	struct:handle_storage	file:
handle_key	skynet/skynet-src/skynet_server.c	/^	pthread_key_t handle_key;$/;"	m	struct:skynet_node	file:
handle_luainit	skynet/3rd/lua/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_name	skynet/skynet-src/skynet_handle.c	/^struct handle_name {$/;"	s	file:
handle_script	skynet/3rd/lua/lua.c	/^static int handle_script (lua_State *L, char **argv) {$/;"	f	file:
handle_storage	skynet/skynet-src/skynet_handle.c	/^struct handle_storage {$/;"	s	file:
handle_to_address	skynet/service/launcher.lua	/^local function handle_to_address(handle)$/;"	f
handler.command	skynet/lualib/snax/msgserver.lua	/^	function handler.command(cmd, source, ...)$/;"	f
handler.command	skynet/service/gate.lua	/^function handler.command(cmd, source, ...)$/;"	f
handler.connect	skynet/lualib/snax/msgserver.lua	/^	function handler.connect(fd, addr)$/;"	f
handler.connect	skynet/service/gate.lua	/^function handler.connect(fd, addr)$/;"	f
handler.disconnect	skynet/lualib/snax/msgserver.lua	/^	function handler.disconnect(fd)$/;"	f
handler.disconnect	skynet/service/gate.lua	/^function handler.disconnect(fd)$/;"	f
handler.error	skynet/service/gate.lua	/^function handler.error(fd, msg)$/;"	f
handler.message	skynet/lualib/snax/msgserver.lua	/^	function handler.message(fd, msg, sz)$/;"	f
handler.message	skynet/service/gate.lua	/^function handler.message(fd, msg, sz)$/;"	f
handler.open	skynet/lualib/snax/msgserver.lua	/^	function handler.open(source, gateconf)$/;"	f
handler.open	skynet/service/gate.lua	/^function handler.open(source, conf)$/;"	f
handler.warning	skynet/service/gate.lua	/^function handler.warning(fd, size)$/;"	f
handshake	game/myservice/player_handler.lua	/^function handshake(self, pack)$/;"	f
handshake	skynet/service-src/service_harbor.c	/^handshake(struct harbor *h, int id) {$/;"	f	file:
handshake	skynet/service/cmaster.lua	/^local function handshake(fd)$/;"	f
harbor	skynet/service-src/service_harbor.c	/^struct harbor {$/;"	s	file:
harbor	skynet/skynet-src/skynet_handle.c	/^	uint32_t harbor;$/;"	m	struct:handle_storage	file:
harbor	skynet/skynet-src/skynet_imp.h	/^	int harbor;$/;"	m	struct:skynet_config
harbor.CONNECT	skynet/service/cdummy.lua	/^function harbor.CONNECT(id)$/;"	f
harbor.CONNECT	skynet/service/cslave.lua	/^function harbor.CONNECT(fd, id)$/;"	f
harbor.LINK	skynet/service/cdummy.lua	/^function harbor.LINK(id)$/;"	f
harbor.LINK	skynet/service/cslave.lua	/^function harbor.LINK(fd, id)$/;"	f
harbor.LINKMASTER	skynet/service/cslave.lua	/^function harbor.LINKMASTER()$/;"	f
harbor.QUERYNAME	skynet/service/cdummy.lua	/^function harbor.QUERYNAME(name)$/;"	f
harbor.QUERYNAME	skynet/service/cslave.lua	/^function harbor.QUERYNAME(fd, name)$/;"	f
harbor.REGISTER	skynet/service/cdummy.lua	/^function harbor.REGISTER(name, handle)$/;"	f
harbor.REGISTER	skynet/service/cslave.lua	/^function harbor.REGISTER(fd, name, handle)$/;"	f
harbor.connect	skynet/lualib/skynet/harbor.lua	/^function harbor.connect(id)$/;"	f
harbor.globalname	skynet/lualib/skynet/harbor.lua	/^function harbor.globalname(name, handle)$/;"	f
harbor.link	skynet/lualib/skynet/harbor.lua	/^function harbor.link(id)$/;"	f
harbor.linkmaster	skynet/lualib/skynet/harbor.lua	/^function harbor.linkmaster()$/;"	f
harbor.queryname	skynet/lualib/skynet/harbor.lua	/^function harbor.queryname(name)$/;"	f
harbor_command	skynet/service-src/service_harbor.c	/^harbor_command(struct harbor * h, const char * msg, size_t sz, int session, uint32_t source) {$/;"	f	file:
harbor_create	skynet/service-src/service_harbor.c	/^harbor_create(void) {$/;"	f
harbor_id	skynet/service-src/service_harbor.c	/^harbor_id(struct harbor *h, int fd) {$/;"	f	file:
harbor_init	skynet/service-src/service_harbor.c	/^harbor_init(struct harbor *h, struct skynet_context *ctx, const char * args) {$/;"	f
harbor_msg	skynet/service-src/service_harbor.c	/^struct harbor_msg {$/;"	s	file:
harbor_msg_queue	skynet/service-src/service_harbor.c	/^struct harbor_msg_queue {$/;"	s	file:
harbor_release	skynet/service-src/service_harbor.c	/^harbor_release(struct harbor *h) {$/;"	f
has_E	skynet/3rd/lua/lua.c	267;"	d	file:
has_book 	game/myservice/player_t.lua	/^has_book = function(self)$/;"	f
has_card 	game/myservice/player_t.lua	/^has_card = function(self)$/;"	f
has_cmd	skynet/skynet-src/socket_server.c	/^has_cmd(struct socket_server *ss) {$/;"	f	file:
has_e	skynet/3rd/lua/lua.c	266;"	d	file:
has_error	skynet/3rd/lua/lua.c	263;"	d	file:
has_i	skynet/3rd/lua/lua.c	264;"	d	file:
has_task 	game/myclient/player_client_t.lua	/^has_task = function(self)$/;"	f
has_task 	game/myservice/player_t.lua	/^has_task = function(self)$/;"	f
has_v	skynet/3rd/lua/lua.c	265;"	d	file:
hascaptures	skynet/3rd/lpeg/lpcode.c	/^int hascaptures (TTree *tree) {$/;"	f
hash	skynet/3rd/lua/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString
hash	skynet/3rd/lua/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable
hash	skynet/lualib-src/lua-netpack.c	/^	struct uncomplete * hash[HASHSIZE];$/;"	m	struct:queue	typeref:struct:queue::uncomplete	file:
hash	skynet/lualib-src/lua-sharedata.c	/^	struct node * hash;$/;"	m	struct:table	typeref:struct:table::node	file:
hash	skynet/service-src/hashid.h	/^	struct hashid_node **hash;$/;"	m	struct:hashid	typeref:struct:hashid::hashid_node
hash	skynet/service-src/service_gate.c	/^	struct hashid hash;$/;"	m	struct:gate	typeref:struct:gate::hashid	file:
hash	skynet/service-src/service_harbor.c	/^	uint32_t hash;$/;"	m	struct:keyvalue	file:
hash_delete	skynet/service-src/service_harbor.c	/^hash_delete(struct hashmap *hash) {$/;"	f	file:
hash_fd	skynet/lualib-src/lua-netpack.c	/^hash_fd(int fd) {$/;"	f	file:
hash_insert	skynet/service-src/service_harbor.c	/^hash_insert(struct hashmap * hash, const char name[GLOBALNAME_LENGTH]) {$/;"	f	file:
hash_new	skynet/service-src/service_harbor.c	/^hash_new() {$/;"	f	file:
hash_query	skynet/3rd/lua/ltests.c	/^static int hash_query (lua_State *L) {$/;"	f	file:
hash_search	skynet/3rd/lua/ltable.c	/^static lua_Unsigned hash_search (Table *t, lua_Unsigned j) {$/;"	f	file:
hash_search	skynet/service-src/service_harbor.c	/^hash_search(struct hashmap * hash, const char name[GLOBALNAME_LENGTH]) {$/;"	f	file:
hashboolean	skynet/3rd/lua/ltable.c	85;"	d	file:
hashid	skynet/service-src/hashid.h	/^struct hashid {$/;"	s
hashid_clear	skynet/service-src/hashid.h	/^hashid_clear(struct hashid *hi) {$/;"	f
hashid_full	skynet/service-src/hashid.h	/^hashid_full(struct hashid *hi) {$/;"	f
hashid_init	skynet/service-src/hashid.h	/^hashid_init(struct hashid *hi, int max) {$/;"	f
hashid_insert	skynet/service-src/hashid.h	/^hashid_insert(struct hashid * hi, int id) {$/;"	f
hashid_lookup	skynet/service-src/hashid.h	/^hashid_lookup(struct hashid *hi, int id) {$/;"	f
hashid_node	skynet/service-src/hashid.h	/^struct hashid_node {$/;"	s
hashid_remove	skynet/service-src/hashid.h	/^hashid_remove(struct hashid *hi, int id) {$/;"	f
hashint	skynet/3rd/lua/ltable.c	/^static Node *hashint (const Table *t, lua_Integer i) {$/;"	f	file:
hashmap	skynet/service-src/service_harbor.c	/^struct hashmap {$/;"	s	file:
hashmod	skynet/3rd/lua/ltable.c	81;"	d	file:
hashmod	skynet/service-src/hashid.h	/^	int hashmod;$/;"	m	struct:hashid
hashpointer	skynet/3rd/lua/ltable.c	88;"	d	file:
hashpow2	skynet/3rd/lua/ltable.c	75;"	d	file:
hashstr	skynet/3rd/lua/ltable.c	84;"	d	file:
hasjumps	skynet/3rd/lua/lcode.c	38;"	d	file:
hasmultret	skynet/3rd/lua/lparser.c	38;"	d	file:
hastocloseCfunc	skynet/3rd/lua/lapi.h	46;"	d
head	skynet/lualib-src/lua-clientsocket.c	/^	int head;$/;"	m	struct:queue	file:
head	skynet/lualib-src/lua-debugchannel.c	/^	struct command * head;$/;"	m	struct:channel	typeref:struct:channel::command	file:
head	skynet/lualib-src/lua-netpack.c	/^	int head;$/;"	m	struct:queue	file:
head	skynet/lualib-src/lua-seri.c	/^	struct block * head;$/;"	m	struct:write_block	typeref:struct:write_block::block	file:
head	skynet/lualib-src/lua-socket.c	/^	struct buffer_node *head;$/;"	m	struct:socket_buffer	typeref:struct:socket_buffer::buffer_node	file:
head	skynet/service-src/databuffer.h	/^	struct message * head;$/;"	m	struct:databuffer	typeref:struct:databuffer::message
head	skynet/service-src/service_harbor.c	/^	int head;$/;"	m	struct:harbor_msg_queue	file:
head	skynet/skynet-src/skynet_mq.c	/^	int head;$/;"	m	struct:message_queue	file:
head	skynet/skynet-src/skynet_mq.c	/^	struct message_queue *head;$/;"	m	struct:global_queue	typeref:struct:global_queue::message_queue	file:
head	skynet/skynet-src/skynet_timer.c	/^	struct timer_node head;$/;"	m	struct:link_list	typeref:struct:link_list::timer_node	file:
head	skynet/skynet-src/socket_server.c	/^	struct write_buffer * head;$/;"	m	struct:wb_list	typeref:struct:wb_list::write_buffer	file:
header	skynet/lualib-src/lua-netpack.c	/^	int header;$/;"	m	struct:uncomplete	file:
header	skynet/lualib-src/sproto/sproto.c	/^	struct chunk * header;$/;"	m	struct:pool	typeref:struct:pool::chunk	file:
header	skynet/service-src/databuffer.h	/^	int header;$/;"	m	struct:databuffer
header	skynet/service-src/service_harbor.c	/^	struct remote_message_header header;$/;"	m	struct:harbor_msg	typeref:struct:harbor_msg::remote_message_header	file:
header	skynet/skynet-src/socket_server.c	/^	uint8_t header[8];	\/\/ 6 bytes dummy$/;"	m	struct:request_package	file:
header_size	skynet/service-src/service_gate.c	/^	int header_size;$/;"	m	struct:gate	file:
header_t	skynet/lualib-src/lua-mongo.c	/^struct header_t {$/;"	s	file:
header_to_message	skynet/service-src/service_harbor.c	/^header_to_message(const struct remote_message_header * header, uint8_t * message) {$/;"	f	file:
headfail	skynet/3rd/lpeg/lpcode.c	/^static int headfail (TTree *tree) {$/;"	f	file:
help	game/myservice/player_handler.lua	/^function help(self)$/;"	f
hextoint	skynet/lualib-src/lua-bson.c	/^hextoint(char c) {$/;"	f	file:
high	skynet/skynet-src/socket_server.c	/^	struct wb_list high;$/;"	m	struct:socket	typeref:struct:socket::wb_list	file:
hmac	skynet/lualib-src/lua-crypt.c	/^hmac(uint32_t x[2], uint32_t y[2], uint32_t result[2]) {$/;"	f	file:
hmac_md5	skynet/lualib-src/lua-crypt.c	/^hmac_md5(uint32_t x[2], uint32_t y[2], uint32_t result[2]) {$/;"	f	file:
hmac_sha1	skynet/test/testsha.lua	/^local function hmac_sha1(key, text)$/;"	f
hnext	skynet/3rd/lua/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon15	typeref:struct:TString::__anon15::TString
hook	skynet/3rd/lua/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State
hook	skynet/lualib/skynet/remotedebug.lua	/^	local function hook(...)$/;"	f
hook_dispatch	skynet/lualib/skynet/remotedebug.lua	/^local function hook_dispatch(dispatcher, resp, fd, channel)$/;"	f
hookcount	skynet/3rd/lua/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	skynet/3rd/lua/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookf	skynet/lualib-src/lua-debugchannel.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	skynet/3rd/lua/lstate.h	/^  volatile l_signalT hookmask;$/;"	m	struct:lua_State
host	skynet/skynet-src/socket_server.c	/^	char host[1];$/;"	m	struct:request_listen	file:
host	skynet/skynet-src/socket_server.c	/^	char host[1];$/;"	m	struct:request_open	file:
host 	skynet/test/testudp.lua	/^	host = socket.udp(function(str, from)$/;"	f
host:attach	skynet/lualib/sproto.lua	/^function host:attach(sp)$/;"	f
host:dispatch	skynet/lualib/sproto.lua	/^function host:dispatch(...)$/;"	f
hotfix	skynet/test/testping.lua	/^function hotfix(...)$/;"	f
http_head_test	game/myservice/testhttp.lua	/^local function http_head_test()$/;"	f
http_head_test	skynet/test/testhttp.lua	/^local function http_head_test()$/;"	f
http_stream_test	game/myservice/testhttp.lua	/^local function http_stream_test()$/;"	f
http_stream_test	skynet/test/testhttp.lua	/^local function http_stream_test()$/;"	f
http_test	game/myservice/testhttp.lua	/^local function http_test(protocol)$/;"	f
http_test	skynet/test/testhttp.lua	/^local function http_test(protocol)$/;"	f
httpc.dns	skynet/lualib/http/httpc.lua	/^function httpc.dns(server,port)$/;"	f
httpc.get	skynet/lualib/http/httpc.lua	/^function httpc.get(...)$/;"	f
httpc.head	skynet/lualib/http/httpc.lua	/^function httpc.head(hostname, url, recvheader, header, content)$/;"	f
httpc.post	skynet/lualib/http/httpc.lua	/^function httpc.post(host, url, form, recvheader)$/;"	f
httpc.request	skynet/lualib/http/httpc.lua	/^function httpc.request(method, hostname, url, recvheader, header, content)$/;"	f
httpc.request_stream	skynet/lualib/http/httpc.lua	/^function httpc.request_stream(method, hostname, url, recvheader, header, content)$/;"	f
httpd.read_request	skynet/lualib/http/httpd.lua	/^function httpd.read_request(...)$/;"	f
httpd.write_response	skynet/lualib/http/httpd.lua	/^function httpd.write_response(...)$/;"	f
hvalue	skynet/3rd/lua/lobject.h	685;"	d
i	skynet/3rd/lpeg/lpvm.h	/^  } i;$/;"	m	union:Instruction	typeref:struct:Instruction::Inst
i	skynet/3rd/lua/llex.h	/^  lua_Integer i;$/;"	m	union:__anon11
i	skynet/3rd/lua/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value
iABC	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iABx	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iAsBx	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iAx	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
i_ci	skynet/3rd/lua/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_val	skynet/3rd/lua/lobject.h	/^  TValue i_val;  \/* direct access to node's value as a proper 'TValue' *\/$/;"	m	union:Node
id	skynet/3rd/lpeg/test.lua	/^local function id(s, i, x)$/;"	f
id	skynet/3rd/lua/lobject.h	/^  size_t id;	\/* id for short strings *\/$/;"	m	struct:TString
id	skynet/lualib-src/lua-mongo.c	/^	int id;$/;"	m	struct:connection	file:
id	skynet/lualib-src/lua-netpack.c	/^	int id;$/;"	m	struct:netpack	file:
id	skynet/service-src/hashid.h	/^	int id;$/;"	m	struct:hashid_node
id	skynet/service-src/hashid.h	/^	struct hashid_node *id;$/;"	m	struct:hashid	typeref:struct:hashid::hashid_node
id	skynet/service-src/service_gate.c	/^	int id;	\/\/ skynet_socket id$/;"	m	struct:connection	file:
id	skynet/service-src/service_harbor.c	/^	int id;$/;"	m	struct:harbor	file:
id	skynet/skynet-src/skynet_socket.h	/^	int id;$/;"	m	struct:skynet_socket_message
id	skynet/skynet-src/skynet_start.c	/^	int id;$/;"	m	struct:worker_parm	file:
id	skynet/skynet-src/socket_buffer.h	/^	int id;$/;"	m	struct:socket_sendbuffer
id	skynet/skynet-src/socket_info.h	/^	int id;$/;"	m	struct:socket_info
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_bind	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_close	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_listen	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_open	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_resumepause	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_send	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_setopt	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_setudp	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:request_udp	file:
id	skynet/skynet-src/socket_server.c	/^	int id;$/;"	m	struct:socket	file:
id	skynet/skynet-src/socket_server.h	/^	int id;$/;"	m	struct:socket_message
id 	skynet/3rd/lpeg/test.lua	/^local function id (s, i, ...)$/;"	f
id_to_hex	skynet/skynet-src/skynet_server.c	/^id_to_hex(char * str, uint32_t id) {$/;"	f	file:
idle	skynet/lualib/skynet/remotedebug.lua	/^		local function idle()$/;"	f
idx	skynet/3rd/lpeg/lpcap.c	/^      Index_t idx;  \/* starts here *\/$/;"	m	struct:StrAux::__anon1::__anon2	file:
idx	skynet/3rd/lpeg/lpcap.h	/^  unsigned short idx;  \/* extra info (group name, arg index, etc.) *\/$/;"	m	struct:Capture
idx	skynet/3rd/lua/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	skynet/3rd/lua/lparser.h	/^      short idx;  \/* index (R or "long" K) *\/$/;"	m	struct:expdesc::__anon23::__anon24
if type(f) ~	skynet/lualib/snax/interface.lua	/^			if type(f) ~= "function" then$/;"	f
if type(func) ~	skynet/lualib/snax/interface.lua	/^			if type(func) ~= "function" then$/;"	f
if type(value) 	skynet/lualib/snax/hotfix.lua	/^			if type(value) == "function" then$/;"	f
ifstat	skynet/3rd/lua/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
import_field	skynet/lualib-src/sproto/sproto.c	/^import_field(struct sproto *s, struct field *f, const uint8_t * stream) {$/;"	f	file:
import_protocol	skynet/lualib-src/sproto/sproto.c	/^import_protocol(struct sproto *s, struct protocol *p, const uint8_t * stream) {$/;"	f	file:
import_string	skynet/lualib-src/sproto/sproto.c	/^import_string(struct sproto *s, const uint8_t * stream) {$/;"	f	file:
import_type	skynet/lualib-src/sproto/sproto.c	/^import_type(struct sproto *s, struct sproto_type *t, const uint8_t * stream) {$/;"	f	file:
in_bio	skynet/lualib-src/ltls.c	/^    BIO* in_bio;$/;"	m	struct:tls_context	file:
in_global	skynet/skynet-src/skynet_mq.c	/^	int in_global;$/;"	m	struct:message_queue	file:
inc_sending_ref	skynet/skynet-src/socket_server.c	/^inc_sending_ref(struct socket *s, int id) {$/;"	f	file:
incifingray	skynet/3rd/lua/ltests.c	/^static void incifingray (global_State *g, GCObject *o, lu_mem *count) {$/;"	f	file:
inclinenumber	skynet/3rd/lua/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incnny	skynet/3rd/lua/lstate.h	111;"	d
incomplete	skynet/3rd/lua/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incstep	skynet/3rd/lua/lgc.c	/^static void incstep (lua_State *L, global_State *g) {$/;"	f	file:
ind	skynet/3rd/lua/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon23	typeref:struct:expdesc::__anon23::__anon24
index	skynet/3rd/lpeg/lpcap.h	/^  Index_t index;  \/* subject position *\/$/;"	m	struct:Capture
index	skynet/lualib-src/lua-datasheet.c	/^	int index;$/;"	m	struct:proxy	file:
index	skynet/lualib-src/lua-datasheet.c	/^	uint32_t index[1];$/;"	m	struct:document	file:
index	skynet/lualib-src/sproto/sproto.h	/^	int index;	\/\/ array base 1, negative value indicates that it is a empty array$/;"	m	struct:sproto_arg
index2stack	skynet/3rd/lua/lapi.c	/^l_sinline StkId index2stack (lua_State *L, int idx) {$/;"	f
index2value	skynet/3rd/lua/lapi.c	/^static TValue *index2value (lua_State *L, int idx) {$/;"	f	file:
info	skynet/3rd/lua/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon23
info	skynet/test/testselect.lua	/^local function info(fmt, ...)$/;"	f
inic_digest	skynet/3rd/lua-md5/md5.c	/^static void inic_digest(WORD32 *d) {$/;"	f	file:
init	skynet/3rd/lua/lauxlib.c	/^init(void) {$/;"	f	file:
init	skynet/3rd/lua/lauxlib.h	/^  } init;$/;"	m	struct:luaL_Buffer	typeref:union:luaL_Buffer::__anon8
init	skynet/3rd/lua/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon33	file:
init	skynet/3rd/lua/lstrlib.c	/^  int init;  \/* true iff buffer has been initialized *\/$/;"	m	struct:str_Writer	file:
init	skynet/lualib/skynet/debug.lua	/^local function init(skynet, export)$/;"	f
init	skynet/lualib/skynet/multicast.lua	/^local function init()$/;"	f
init	skynet/lualib/snax/gateserver.lua	/^	local function init()$/;"	f
init	skynet/skynet-src/skynet_module.h	/^	skynet_dl_init init;$/;"	m	struct:skynet_module
init	skynet/skynet-src/skynet_server.c	/^	bool init;$/;"	m	struct:skynet_context	file:
init	skynet/skynet-src/skynet_server.c	/^	int init;$/;"	m	struct:skynet_node	file:
init	skynet/test/pingserver.lua	/^function init( ... )$/;"	f
init.init	skynet/service/service_cell.lua	/^function init.init(code, ...)$/;"	f
init_cb	skynet/service-src/service_snlua.c	/^init_cb(struct snlua *l, struct skynet_context *ctx, const char * args, size_t sz) {$/;"	f	file:
init_dbgcmd	skynet/lualib/skynet/debug.lua	/^	local function init_dbgcmd()$/;"	f
init_exp	skynet/3rd/lua/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_oid_header	skynet/lualib-src/lua-bson.c	/^init_oid_header() {$/;"	f	file:
init_profile	skynet/service-src/service_snlua.c	/^init_profile(lua_State *L) {$/;"	f	file:
init_registry	skynet/3rd/lua/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
init_stringify_proxies	game/myservice/tool.lua	/^local function init_stringify_proxies()$/;"	f
init_system	skynet/lualib/snax/interface.lua	/^	local function init_system(t, name, f)$/;"	f
init_thread 	skynet/lualib/skynet.lua	/^	init_thread = skynet.timeout(0, function()$/;"	f
init_var	skynet/3rd/lua/lparser.c	/^static void init_var (FuncState *fs, expdesc *e, int vidx) {$/;"	f	file:
initblock	skynet/3rd/lua-md5/md5lib.c	/^static int initblock (lua_State *L, const char *seed, int lseed, char *block) {$/;"	f	file:
initheader	skynet/3rd/lua/lstrlib.c	/^static void initheader (lua_State *L, Header *h) {$/;"	f	file:
initialrulename	skynet/3rd/lpeg/lptree.c	/^static void initialrulename (lua_State *L, TTree *grammar, int frule) {$/;"	f	file:
initposition	skynet/3rd/lpeg/lptree.c	/^static size_t initposition (lua_State *L, size_t len) {$/;"	f	file:
inject	skynet/lualib/snax/hotfix.lua	/^local function inject(funcs, source, ...)$/;"	f
inline	skynet/lualib-src/sproto/msvcint.h	5;"	d
insert_replace	skynet/lualib/skynet/sharetable.lua	/^local function insert_replace(old_t, new_t, replace_map)$/;"	f
insidetbc	skynet/3rd/lua/lparser.c	/^  lu_byte insidetbc;  \/* true if inside the scope of a to-be-closed var. *\/$/;"	m	struct:BlockCnt	file:
instack	skynet/3rd/lua/ldebug.c	/^static int instack (CallInfo *ci, const TValue *o) {$/;"	f	file:
instack	skynet/3rd/lua/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc
instance	skynet/skynet-src/skynet_server.c	/^	void * instance;$/;"	m	struct:skynet_context	file:
instsize	skynet/3rd/lpeg/lptypes.h	134;"	d
int16_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed __int16    int16_t;$/;"	t
int16_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed short      int16_t;$/;"	t
int2sC	skynet/3rd/lua/lopcodes.h	100;"	d
int32_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed __int32    int32_t;$/;"	t
int32_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed int        int32_t;$/;"	t
int64_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed __int8     int8_t;$/;"	t
int8_t	skynet/lualib-src/sproto/msvcint.h	/^typedef signed char       int8_t;$/;"	t
intarith	skynet/3rd/lua/lobject.c	/^static lua_Integer intarith (lua_State *L, int op, lua_Integer v1,$/;"	f	file:
internshrstr	skynet/3rd/lua/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interror	skynet/3rd/lua/lauxlib.c	/^static void interror (lua_State *L, int arg) {$/;"	f	file:
intop	skynet/3rd/lua/lvm.h	73;"	d
intro	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="intro">Introduction<\/a><\/h2>$/;"	a
invalid_stream	skynet/lualib-src/lua-seri.c	367;"	d	file:
invalid_stream_line	skynet/lualib-src/lua-seri.c	/^invalid_stream_line(lua_State *L, struct read_block *rb, int line) {$/;"	f	file:
invalid_type	skynet/skynet-src/skynet_harbor.c	/^invalid_type(int type) {$/;"	f	file:
invalidateTMcache	skynet/3rd/lua/ltable.h	23;"	d
io_close	skynet/3rd/lua/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	skynet/3rd/lua/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	skynet/3rd/lua/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	skynet/3rd/lua/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	skynet/3rd/lua/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	skynet/3rd/lua/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	skynet/3rd/lua/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	skynet/3rd/lua/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	skynet/3rd/lua/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	skynet/3rd/lua/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	skynet/3rd/lua/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	skynet/3rd/lua/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	skynet/3rd/lua/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	skynet/3rd/lua/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	skynet/3rd/lua/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	skynet/3rd/lua/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipairsaux	skynet/3rd/lua/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
isCint	skynet/3rd/lua/lcode.c	/^static int isCint (expdesc *e) {$/;"	f	file:
isIT	skynet/3rd/lua/lopcodes.h	396;"	d
isJ	skynet/3rd/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
isKstr	skynet/3rd/lua/lcode.c	/^static int isKstr (FuncState *fs, expdesc *e) {$/;"	f	file:
isLfunction	skynet/3rd/lua/lobject.h	602;"	d
isLua	skynet/3rd/lua/lstate.h	241;"	d
isLuacode	skynet/3rd/lua/lstate.h	244;"	d
isOT	skynet/3rd/lua/lopcodes.h	391;"	d
isSCint	skynet/3rd/lua/lcode.c	/^static int isSCint (expdesc *e) {$/;"	f	file:
isSCnumber	skynet/3rd/lua/lcode.c	/^static int isSCnumber (expdesc *e, int *pi, int *isfloat) {$/;"	f	file:
is_32bit	skynet/lualib-src/lua-bson.c	/^is_32bit(int64_t v) {$/;"	f	file:
is_bag_empty 	game/myservice/player_t.lua	/^is_bag_empty = function(self)$/;"	f
is_close	skynet/lualib-src/ltls.c	/^    bool is_close;$/;"	m	struct:tls_context	file:
is_online 	game/myservice/player_t.lua	/^is_online = function(self)$/;"	f
is_rawarray	skynet/lualib-src/lua-bson.c	/^is_rawarray(lua_State *L) {$/;"	f	file:
is_server	skynet/lualib-src/ltls.c	/^    bool is_server;$/;"	m	struct:tls_context	file:
is_state 	game/myservice/player_t.lua	/^is_state = function(self, state)$/;"	f
is_vararg	skynet/3rd/lua/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
isabstkey	skynet/3rd/lua/lobject.h	203;"	d
isblack	skynet/3rd/lua/lgc.h	88;"	d
iscleared	skynet/3rd/lua/lgc.c	/^static int iscleared (global_State *g, const GCObject *o) {$/;"	f	file:
isclosecap	skynet/3rd/lpeg/lpcap.h	64;"	d
isclosed	skynet/3rd/lua/liolib.c	160;"	d	file:
iscollectable	skynet/3rd/lua/lobject.h	300;"	d
iscont	skynet/3rd/lua/lutf8lib.c	41;"	d	file:
iscontp	skynet/3rd/lua/lutf8lib.c	42;"	d	file:
isdead	skynet/3rd/lua/lgc.h	96;"	d
isdeadm	skynet/3rd/lua/lgc.h	95;"	d
isdecGCmodegen	skynet/3rd/lua/lgc.h	154;"	d
isdummy	skynet/3rd/lua/ltable.h	27;"	d
isempty	skynet/3rd/lua/lobject.h	217;"	d
isemptystr	skynet/3rd/lua/lvm.c	623;"	d	file:
isgray	skynet/3rd/lua/lgc.h	89;"	d
ishashkey	skynet/lualib-src/lua-sharedata.c	/^ishashkey(struct context * ctx, lua_State *L, int index, int *key, uint32_t *keyhash, int *keytype) {$/;"	f	file:
isintwups	skynet/3rd/lua/lfunc.h	22;"	d
islittle	skynet/3rd/lua/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:
isloop	skynet/3rd/lua/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	skynet/3rd/lua/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnonstrictnil	skynet/3rd/lua/lobject.h	209;"	d
isnullable 	skynet/3rd/lpeg/test.lua	/^local function isnullable (p)$/;"	f
isold	skynet/3rd/lua/lgc.h	119;"	d
isopencap	skynet/3rd/lpeg/lpcap.h	65;"	d
ispow2	skynet/3rd/lua/llimits.h	66;"	d
ispow2realasize	skynet/3rd/lua/ltable.c	/^static int ispow2realasize (const Table *t) {$/;"	f	file:
ispseudo	skynet/3rd/lua/lapi.c	50;"	d	file:
ispurewhite	skynet/3rd/lua/lgc.h	123;"	d
isrealasize	skynet/3rd/lua/lobject.h	735;"	d
isreserved	skynet/3rd/lua/lstring.h	35;"	d
isshared	skynet/3rd/lua/lgc.h	121;"	d
isstring	skynet/3rd/lpeg/lpcap.c	/^  int isstring;  \/* whether capture is a string *\/$/;"	m	struct:StrAux	file:
issweepphase	skynet/3rd/lua/lgc.h	42;"	d
istailcall	skynet/3rd/lua/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isupvalue	skynet/3rd/lua/lapi.c	53;"	d	file:
isvalid	skynet/3rd/lua/lapi.c	46;"	d	file:
isvararg	skynet/3rd/lua/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	skynet/3rd/lua/lgc.h	87;"	d
iter_aux	skynet/3rd/lua/lutf8lib.c	/^static int iter_aux (lua_State *L, int strict) {$/;"	f	file:
iter_auxlax	skynet/3rd/lua/lutf8lib.c	/^static int iter_auxlax (lua_State *L) {$/;"	f	file:
iter_auxstrict	skynet/3rd/lua/lutf8lib.c	/^static int iter_auxstrict (lua_State *L) {$/;"	f	file:
iter_codes	skynet/3rd/lua/lutf8lib.c	/^static int iter_codes (lua_State *L) {$/;"	f	file:
iter_func	skynet/lualib-src/sproto/lsproto.c	/^	int iter_func;$/;"	m	struct:encode_ud	file:
iter_key	skynet/lualib-src/sproto/lsproto.c	/^	int iter_key;$/;"	m	struct:encode_ud	file:
iter_table	skynet/lualib-src/sproto/lsproto.c	/^	int iter_table;$/;"	m	struct:encode_ud	file:
ival	skynet/3rd/lua/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon23
ivalue	skynet/3rd/lua/lobject.h	333;"	d
ivalueraw	skynet/3rd/lua/lobject.h	336;"	d
iwthabs	skynet/3rd/lua/lparser.h	/^  lu_byte iwthabs;  \/* instructions issued since last absolute line info *\/$/;"	m	struct:FuncState
j 	game/myclient/player_client_t.lua	/^    j = function(self)$/;"	f
jb	skynet/3rd/lua/ltests.c	/^struct Aux { jmp_buf jb; const char *paniccode; lua_State *L; };$/;"	m	struct:Aux	file:
joinkindoff	skynet/3rd/lpeg/lptypes.h	119;"	d
joinktables	skynet/3rd/lpeg/lptree.c	/^static void joinktables (lua_State *L, int p1, TTree *t2, int p2) {$/;"	f	file:
json	request_ak.py	/^import json$/;"	i
jumponcond	skynet/3rd/lua/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
jumpscopeerror	skynet/3rd/lua/lparser.c	/^static l_noret jumpscopeerror (LexState *ls, Labeldesc *gt) {$/;"	f	file:
jumptohere	skynet/3rd/lpeg/lpcode.c	/^static void jumptohere (CompileState *compst, int instruction) {$/;"	f	file:
jumptothere	skynet/3rd/lpeg/lpcode.c	/^static void jumptothere (CompileState *compst, int instruction, int target) {$/;"	f	file:
k	skynet/3rd/lua/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	skynet/3rd/lua/lparser.h	/^  TValue k;  \/* constant value (if any) *\/$/;"	m	union:Vardesc
k	skynet/3rd/lua/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	skynet/3rd/lua/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon28::__anon30
k	skynet/lualib-src/lua-crypt.c	/^static const uint32_t k[64] = {$/;"	v	file:
k 	game/myclient/player_client_t.lua	/^    k = function(self)$/;"	f
keepinvariant	skynet/3rd/lua/lgc.h	54;"	d
key	skynet/3rd/lpeg/lptree.h	/^  unsigned short key;  \/* key in ktable for Lua data (0 if no key) *\/$/;"	m	struct:TTree
key	skynet/3rd/lpeg/lpvm.h	/^      short key;$/;"	m	union:Instruction::Inst::__anon6
key	skynet/lualib-src/lua-sharedata.c	/^	int key;	\/\/ integer key or index of string table$/;"	m	struct:node	file:
key	skynet/lualib-src/sproto/sproto.c	/^	int key;$/;"	m	struct:field	file:
key	skynet/service-src/service_harbor.c	/^	char key[GLOBALNAME_LENGTH];$/;"	m	struct:keyvalue	file:
key_index	skynet/lualib-src/sproto/lsproto.c	/^	int key_index;$/;"	m	struct:decode_ud	file:
key_tt	skynet/3rd/lua/lobject.h	/^    lu_byte key_tt;  \/* key type *\/$/;"	m	struct:Node::NodeKey
key_val	skynet/3rd/lua/lobject.h	/^    Value key_val;  \/* key value *\/$/;"	m	struct:Node::NodeKey
keyhash	skynet/lualib-src/lua-sharedata.c	/^	uint32_t keyhash;$/;"	m	struct:node	file:
keyiscollectable	skynet/3rd/lua/lobject.h	767;"	d
keyisdead	skynet/3rd/lua/lobject.h	780;"	d
keyisinteger	skynet/3rd/lua/lobject.h	760;"	d
keyisnil	skynet/3rd/lua/lobject.h	759;"	d
keyisshrstr	skynet/3rd/lua/lobject.h	762;"	d
keyiswhite	skynet/3rd/lua/lgc.c	85;"	d	file:
keyival	skynet/3rd/lua/lobject.h	761;"	d
keystrval	skynet/3rd/lua/lobject.h	763;"	d
keytt	skynet/3rd/lua/lobject.h	756;"	d
keytype	skynet/lualib-src/lua-sharedata.c	/^	uint8_t keytype;	\/\/ key type must be integer or string$/;"	m	struct:node	file:
keyval	skynet/3rd/lua/lobject.h	757;"	d
keyvalue	skynet/service-src/service_harbor.c	/^struct keyvalue {$/;"	s	file:
kind	skynet/3rd/lpeg/lpcap.h	/^  byte kind;  \/* kind of capture *\/$/;"	m	struct:Capture
kind	skynet/3rd/lua/lobject.h	/^  lu_byte kind;  \/* kind of corresponding variable *\/$/;"	m	struct:Upvaldesc
kind	skynet/3rd/lua/lparser.h	/^    lu_byte kind;$/;"	m	struct:Vardesc::__anon26
kname	skynet/3rd/lua/ldebug.c	/^static void kname (const Proto *p, int c, const char **name) {$/;"	f	file:
ktableidx	skynet/3rd/lpeg/lptypes.h	77;"	d
ktablelen	skynet/3rd/lpeg/lptree.c	/^static int ktablelen (lua_State *L, int idx) {$/;"	f	file:
ktagname	skynet/lualib-src/sproto/sproto.h	/^	const char *ktagname;$/;"	m	struct:sproto_arg
kvdb.get	skynet/test/testservice/kvdb.lua	/^function kvdb.get(db,key)$/;"	f
kvdb.new	skynet/test/testservice/kvdb.lua	/^function kvdb.new(db)$/;"	f
kvdb.set	skynet/test/testservice/kvdb.lua	/^function kvdb.set(db,key, value)$/;"	f
l	skynet/3rd/lua/lmathlib.c	/^  lu_int32 l;  \/* lower half *\/$/;"	m	struct:Rand64	file:
l	skynet/3rd/lua/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	skynet/3rd/lua/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	skynet/3rd/lua/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l	skynet/3rd/lua/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon28	typeref:struct:CallInfo::__anon28::__anon29
l_G	skynet/3rd/lua/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_Trick	skynet/3rd/lua/ltests.c	/^void *l_Trick = 0;$/;"	v
l_addi	skynet/3rd/lua/lvm.c	885;"	d	file:
l_alloc	skynet/3rd/lua/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_band	skynet/3rd/lua/lvm.c	888;"	d	file:
l_bor	skynet/3rd/lua/lvm.c	889;"	d	file:
l_bxor	skynet/3rd/lua/lvm.c	890;"	d	file:
l_castS2U	skynet/3rd/lua/llimits.h	152;"	d
l_castU2S	skynet/3rd/lua/llimits.h	161;"	d
l_checkmode	skynet/3rd/lua/liolib.c	/^static int l_checkmode (const char *mode) {$/;"	f	file:
l_checkmodep	skynet/3rd/lua/liolib.c	69;"	d	file:
l_checkmodep	skynet/3rd/lua/liolib.c	89;"	d	file:
l_checktime	skynet/3rd/lua/loslib.c	/^static time_t l_checktime (lua_State *L, int arg) {$/;"	f	file:
l_floatatt	skynet/3rd/lua/luaconf.h	435;"	d
l_floatatt	skynet/3rd/lua/luaconf.h	451;"	d
l_floatatt	skynet/3rd/lua/luaconf.h	466;"	d
l_floor	skynet/3rd/lua/luaconf.h	409;"	d
l_fseek	skynet/3rd/lua/liolib.c	122;"	d	file:
l_fseek	skynet/3rd/lua/liolib.c	130;"	d	file:
l_fseek	skynet/3rd/lua/liolib.c	137;"	d	file:
l_ftell	skynet/3rd/lua/liolib.c	123;"	d	file:
l_ftell	skynet/3rd/lua/liolib.c	131;"	d	file:
l_ftell	skynet/3rd/lua/liolib.c	138;"	d	file:
l_gei	skynet/3rd/lua/lvm.c	895;"	d	file:
l_getc	skynet/3rd/lua/liolib.c	102;"	d	file:
l_getc	skynet/3rd/lua/liolib.c	98;"	d	file:
l_gettime	skynet/3rd/lua/loslib.c	60;"	d	file:
l_gettime	skynet/3rd/lua/loslib.c	66;"	d	file:
l_gmtime	skynet/3rd/lua/loslib.c	79;"	d	file:
l_gmtime	skynet/3rd/lua/loslib.c	85;"	d	file:
l_gti	skynet/3rd/lua/lvm.c	894;"	d	file:
l_hashfloat	skynet/3rd/lua/ltable.c	/^static int l_hashfloat (lua_Number n) {$/;"	f	file:
l_inline	skynet/3rd/lua/llimits.h	185;"	d
l_inline	skynet/3rd/lua/llimits.h	187;"	d
l_inline	skynet/3rd/lua/llimits.h	189;"	d
l_inspectstat	skynet/3rd/lua/lauxlib.c	272;"	d	file:
l_inspectstat	skynet/3rd/lua/lauxlib.c	278;"	d	file:
l_intfitsf	skynet/3rd/lua/lvm.c	74;"	d	file:
l_intfitsf	skynet/3rd/lua/lvm.c	78;"	d	file:
l_isfalse	skynet/3rd/lua/lobject.h	247;"	d
l_lei	skynet/3rd/lua/lvm.c	893;"	d	file:
l_likely	skynet/3rd/lua/luaconf.h	687;"	d
l_localtime	skynet/3rd/lua/loslib.c	80;"	d	file:
l_localtime	skynet/3rd/lua/loslib.c	86;"	d	file:
l_lockfile	skynet/3rd/lua/liolib.c	103;"	d	file:
l_lockfile	skynet/3rd/lua/liolib.c	99;"	d	file:
l_lti	skynet/3rd/lua/lvm.c	892;"	d	file:
l_mathop	skynet/3rd/lua/luaconf.h	442;"	d
l_mathop	skynet/3rd/lua/luaconf.h	458;"	d
l_mathop	skynet/3rd/lua/luaconf.h	473;"	d
l_mathop	skynet/3rd/lua/luaconf.h	631;"	d
l_mathop	skynet/3rd/lua/luaconf.h	633;"	d
l_mem	skynet/3rd/lua/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_mem	skynet/3rd/lua/llimits.h	/^typedef long l_mem;$/;"	t
l_mem	skynet/3rd/lua/llimits.h	/^typedef ptrdiff_t l_mem;$/;"	t
l_memcontrol	skynet/3rd/lua/ltests.c	/^Memcontrol l_memcontrol =$/;"	v
l_memcontrol	skynet/3rd/lua/ltests.h	/^LUA_API Memcontrol l_memcontrol;$/;"	v
l_message	skynet/3rd/lua/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_muli	skynet/3rd/lua/lvm.c	887;"	d	file:
l_noret	skynet/3rd/lua/llimits.h	171;"	d
l_noret	skynet/3rd/lua/llimits.h	173;"	d
l_noret	skynet/3rd/lua/llimits.h	175;"	d
l_pclose	skynet/3rd/lua/liolib.c	60;"	d	file:
l_pclose	skynet/3rd/lua/liolib.c	65;"	d	file:
l_pclose	skynet/3rd/lua/liolib.c	80;"	d	file:
l_popen	skynet/3rd/lua/liolib.c	59;"	d	file:
l_popen	skynet/3rd/lua/liolib.c	64;"	d	file:
l_popen	skynet/3rd/lua/liolib.c	76;"	d	file:
l_print	skynet/3rd/lua/lua.c	/^static void l_print (lua_State *L) {$/;"	f	file:
l_pushtime	skynet/3rd/lua/loslib.c	59;"	d	file:
l_pushtime	skynet/3rd/lua/loslib.c	65;"	d	file:
l_randomizePivot	skynet/3rd/lua/ltablib.c	/^static unsigned int l_randomizePivot (void) {$/;"	f	file:
l_registry	skynet/3rd/lua/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	skynet/3rd/lua/liolib.c	124;"	d	file:
l_seeknum	skynet/3rd/lua/liolib.c	132;"	d	file:
l_seeknum	skynet/3rd/lua/liolib.c	139;"	d	file:
l_setbit	skynet/3rd/lua/lgc.h	65;"	d
l_signalT	skynet/3rd/lua/lstate.h	131;"	d
l_sinline	skynet/3rd/lua/llimits.h	192;"	d
l_sprintf	skynet/3rd/lua/ltests.h	31;"	d
l_sprintf	skynet/3rd/lua/ltests.h	33;"	d
l_sprintf	skynet/3rd/lua/ltests.h	35;"	d
l_sprintf	skynet/3rd/lua/luaconf.h	588;"	d
l_sprintf	skynet/3rd/lua/luaconf.h	590;"	d
l_str2d	skynet/3rd/lua/lobject.c	/^static const char *l_str2d (const char *s, lua_Number *result) {$/;"	f	file:
l_str2dloc	skynet/3rd/lua/lobject.c	/^static const char *l_str2dloc (const char *s, lua_Number *result, int mode) {$/;"	f	file:
l_str2int	skynet/3rd/lua/lobject.c	/^static const char *l_str2int (const char *s, lua_Integer *result) {$/;"	f	file:
l_strcmp	skynet/3rd/lua/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_strton	skynet/3rd/lua/lvm.c	/^static int l_strton (const TValue *obj, TValue *result) {$/;"	f	file:
l_subi	skynet/3rd/lua/lvm.c	886;"	d	file:
l_system	skynet/3rd/lua/loslib.c	135;"	d	file:
l_system	skynet/3rd/lua/loslib.c	137;"	d	file:
l_timet	skynet/3rd/lua/loslib.c	58;"	d	file:
l_timet	skynet/3rd/lua/loslib.c	64;"	d	file:
l_uacInt	skynet/3rd/lua/llimits.h	/^typedef LUAI_UACINT l_uacInt;$/;"	t
l_uacNumber	skynet/3rd/lua/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_uint32	skynet/3rd/lua/llimits.h	/^typedef unsigned int l_uint32;$/;"	t
l_uint32	skynet/3rd/lua/llimits.h	/^typedef unsigned long l_uint32;$/;"	t
l_unlikely	skynet/3rd/lua/luaconf.h	688;"	d
l_unlockfile	skynet/3rd/lua/liolib.c	100;"	d	file:
l_unlockfile	skynet/3rd/lua/liolib.c	104;"	d	file:
label	skynet/3rd/lua/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	skynet/3rd/lua/lparser.c	/^static void labelstat (LexState *ls, TString *name, int line) {$/;"	f	file:
laction	skynet/3rd/lua/lua.c	/^static void laction (int i) {$/;"	f	file:
laddresscommand	skynet/lualib-src/lua-skynet.c	/^laddresscommand(lua_State *L) {$/;"	f	file:
lalloc	skynet/service-src/service_snlua.c	/^lalloc(void * ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
lapi_c	skynet/3rd/lua/lapi.c	7;"	d	file:
lapi_h	skynet/3rd/lua/lapi.h	8;"	d
lappend	skynet/lualib-src/lua-cluster.c	/^lappend(lua_State *L) {$/;"	f	file:
lastatomic	skynet/3rd/lua/lstate.h	/^  lu_mem lastatomic;  \/* see function 'genstep' in file 'lgc.c' *\/$/;"	m	struct:global_State
lastcopy	skynet/lualib-src/lua-stm.c	/^	struct stm_copy *lastcopy;$/;"	m	struct:boxreader	typeref:struct:boxreader::stm_copy	file:
lastfree	skynet/3rd/lua/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastlevel	skynet/3rd/lua/lauxlib.c	/^static int lastlevel (lua_State *L) {$/;"	f	file:
lastline	skynet/3rd/lua/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState
lastlinedefined	skynet/3rd/lua/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto
lastlinedefined	skynet/3rd/lua/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	skynet/3rd/lua/lparser.c	/^static void lastlistfield (FuncState *fs, ConsControl *cc) {$/;"	f	file:
lastmatch	skynet/3rd/lua/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:
lasttarget	skynet/3rd/lua/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
launch_cb	skynet/service-src/service_snlua.c	/^launch_cb(struct skynet_context * context, void *ud, int type, int session, uint32_t source , const void * msg, size_t sz) {$/;"	f	file:
launch_master	skynet/lualib/snax/loginserver.lua	/^local function launch_master(conf)$/;"	f
launch_service	skynet/service/launcher.lua	/^local function launch_service(service, ...)$/;"	f
launch_slave	skynet/lualib/snax/loginserver.lua	/^local function launch_slave(auth_handler)$/;"	f
lauxlib_c	skynet/3rd/lua/lauxlib.c	7;"	d	file:
lauxlib_h	skynet/3rd/lua/lauxlib.h	9;"	d
lb64decode	skynet/lualib-src/lua-crypt.c	/^lb64decode(lua_State *L) {$/;"	f	file:
lb64encode	skynet/lualib-src/lua-crypt.c	/^lb64encode(lua_State *L) {$/;"	f	file:
lbaselib_c	skynet/3rd/lua/lbaselib.c	7;"	d	file:
lbinary	skynet/lualib-src/lua-bson.c	/^lbinary(lua_State *L) {$/;"	f	file:
lbind	skynet/lualib-src/lua-socket.c	/^lbind(lua_State *L) {$/;"	f	file:
lblock	skynet/lualib-src/lua-memory.c	/^lblock(lua_State *L) {$/;"	f	file:
lboxconf	skynet/lualib-src/lua-sharedata.c	/^lboxconf(lua_State *L) {$/;"	f	file:
lcallback	skynet/lualib-src/lua-skynet.c	/^lcallback(lua_State *L) {$/;"	f	file:
lclear	skynet/lualib-src/lua-netpack.c	/^lclear(lua_State *L) {$/;"	f	file:
lclearbuffer	skynet/lualib-src/lua-socket.c	/^lclearbuffer(lua_State *L) {$/;"	f	file:
lclose	skynet/lualib-src/lua-clientsocket.c	/^lclose(lua_State *L) {$/;"	f	file:
lclose	skynet/lualib-src/lua-socket.c	/^lclose(lua_State *L) {$/;"	f	file:
lco_stackvalues	skynet/lualib-src/lua-sharetable.c	/^lco_stackvalues(lua_State* L) {$/;"	f	file:
lcode_c	skynet/3rd/lua/lcode.c	7;"	d	file:
lcode_h	skynet/3rd/lua/lcode.h	8;"	d
lcommand	skynet/lualib-src/lua-skynet.c	/^lcommand(lua_State *L) {$/;"	f	file:
lconcat	skynet/lualib-src/lua-cluster.c	/^lconcat(lua_State *L) {$/;"	f	file:
lconnect	skynet/lualib-src/lua-clientsocket.c	/^lconnect(lua_State *L) {$/;"	f	file:
lconnect	skynet/lualib-src/lua-debugchannel.c	/^lconnect(lua_State *L) {$/;"	f	file:
lconnect	skynet/lualib-src/lua-socket.c	/^lconnect(lua_State *L) {$/;"	f	file:
lcopy	skynet/lualib-src/lua-stm.c	/^lcopy(lua_State *L) {$/;"	f	file:
lcorolib_c	skynet/3rd/lua/lcorolib.c	7;"	d	file:
lcreate	skynet/lualib-src/lua-debugchannel.c	/^lcreate(lua_State *L) {$/;"	f	file:
lctype_c	skynet/3rd/lua/lctype.c	7;"	d	file:
lctype_h	skynet/3rd/lua/lctype.h	8;"	d
lcurrent	skynet/lualib-src/lua-memory.c	/^lcurrent(lua_State *L) {$/;"	f	file:
ldate	skynet/lualib-src/lua-bson.c	/^ldate(lua_State *L) {$/;"	f	file:
ldblib_c	skynet/3rd/lua/ldblib.c	7;"	d	file:
ldebug_c	skynet/3rd/lua/ldebug.c	7;"	d	file:
ldebug_h	skynet/3rd/lua/ldebug.h	8;"	d
ldecode	skynet/lualib-src/lua-bson.c	/^ldecode(lua_State *L) {$/;"	f	file:
ldecode	skynet/lualib-src/sproto/lsproto.c	/^ldecode(lua_State *L) {$/;"	f	file:
ldecref	skynet/lualib-src/lua-sharedata.c	/^ldecref(lua_State *L) {$/;"	f	file:
ldefault	skynet/lualib-src/sproto/lsproto.c	/^ldefault(lua_State *L) {$/;"	f	file:
ldeleteconf	skynet/lualib-src/lua-sharedata.c	/^ldeleteconf(lua_State *L) {$/;"	f	file:
ldeleteproto	skynet/lualib-src/sproto/lsproto.c	/^ldeleteproto(lua_State *L) {$/;"	f	file:
ldeletereader	skynet/lualib-src/lua-stm.c	/^ldeletereader(lua_State *L) {$/;"	f	file:
ldeletewriter	skynet/lualib-src/lua-stm.c	/^ldeletewriter(lua_State *L) {$/;"	f	file:
ldesdecode	skynet/lualib-src/lua-crypt.c	/^ldesdecode(lua_State *L) {$/;"	f	file:
ldesencode	skynet/lualib-src/lua-crypt.c	/^ldesencode(lua_State *L) {$/;"	f	file:
ldhexchange	skynet/lualib-src/lua-crypt.c	/^ldhexchange(lua_State *L) {$/;"	f	file:
ldhsecret	skynet/lualib-src/lua-crypt.c	/^ldhsecret(lua_State *L) {$/;"	f	file:
ldo_c	skynet/3rd/lua/ldo.c	7;"	d	file:
ldo_h	skynet/3rd/lua/ldo.h	8;"	d
ldrop	skynet/lualib-src/lua-socket.c	/^ldrop(lua_State *L) {$/;"	f	file:
ldump	skynet/lualib-src/lua-memory.c	/^ldump(lua_State *L) {$/;"	f	file:
ldump_c	skynet/3rd/lua/ldump.c	7;"	d	file:
ldumpheap	skynet/lualib-src/lua-memory.c	/^ldumpheap(lua_State *L) {$/;"	f	file:
ldumpinfo	skynet/lualib-src/lua-memory.c	/^ldumpinfo(lua_State *L) {$/;"	f	file:
ldumpproto	skynet/lualib-src/sproto/lsproto.c	/^ldumpproto(lua_State *L) {$/;"	f	file:
leaveblock	skynet/3rd/lua/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	skynet/3rd/lua/lparser.c	507;"	d	file:
left	skynet/3rd/lua/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon21	file:
len	skynet/3rd/lua/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata
len	skynet/3rd/lua/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata0
len	skynet/3rd/lua/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon33	file:
len	skynet/lualib-src/lua-seri.c	/^	int len;$/;"	m	struct:read_block	file:
len	skynet/lualib-src/lua-seri.c	/^	int len;$/;"	m	struct:write_block	file:
lencode	skynet/lualib-src/lua-bson.c	/^lencode(lua_State *L) {$/;"	f	file:
lencode	skynet/lualib-src/sproto/lsproto.c	/^lencode(lua_State *L) {$/;"	f	file:
lencode_order	skynet/lualib-src/lua-bson.c	/^lencode_order(lua_State *L) {$/;"	f	file:
length	skynet/lualib-src/sproto/sproto.h	/^	int length;$/;"	m	struct:sproto_arg
length	skynet/service-src/service_harbor.c	/^	int length;$/;"	m	struct:slave	file:
lerror	skynet/lualib-src/lua-skynet.c	/^lerror(lua_State *L) {$/;"	f	file:
lessequalothers	skynet/3rd/lua/lvm.c	/^static int lessequalothers (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
lessthanothers	skynet/3rd/lua/lvm.c	/^static int lessthanothers (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	skynet/3rd/lua/ldo.c	/^  StkId level;$/;"	m	struct:CloseP	file:
level	skynet/3rd/lua/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	skynet/3rd/lua/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfilter	skynet/lualib-src/lua-netpack.c	/^lfilter(lua_State *L) {$/;"	f	file:
lfreepool	skynet/lualib-src/lua-socket.c	/^lfreepool(lua_State *L) {$/;"	f	file:
lfromhex	skynet/lualib-src/lua-crypt.c	/^lfromhex(lua_State *L) {$/;"	f	file:
lfunc_c	skynet/3rd/lua/lfunc.c	7;"	d	file:
lfunc_h	skynet/3rd/lua/lfunc.h	8;"	d
lgc_c	skynet/3rd/lua/lgc.c	7;"	d	file:
lgc_h	skynet/3rd/lua/lgc.h	8;"	d
lgenid	skynet/lualib-src/lua-skynet.c	/^lgenid(lua_State *L) {$/;"	f	file:
lgetref	skynet/lualib-src/lua-sharedata.c	/^lgetref(lua_State *L) {$/;"	f	file:
lharbor	skynet/lualib-src/lua-skynet.c	/^lharbor(lua_State *L) {$/;"	f	file:
lhashkey	skynet/lualib-src/lua-crypt.c	/^lhashkey(lua_State *L) {$/;"	f	file:
lhashlen	skynet/lualib-src/lua-sharedata.c	/^lhashlen(lua_State *L) {$/;"	f	file:
lheader	skynet/lualib-src/lua-socket.c	/^lheader(lua_State *L) {$/;"	f	file:
lhmac64	skynet/lualib-src/lua-crypt.c	/^lhmac64(lua_State *L) {$/;"	f	file:
lhmac64_md5	skynet/lualib-src/lua-crypt.c	/^lhmac64_md5(lua_State *L) {$/;"	f	file:
lhmac_hash	skynet/lualib-src/lua-crypt.c	/^lhmac_hash(lua_State *L) {$/;"	f	file:
lhmac_sha1	skynet/lualib-src/lsha1.c	/^lhmac_sha1(lua_State *L) {$/;"	f
lhpc	skynet/lualib-src/lua-skynet.c	/^lhpc(lua_State *L) {$/;"	f	file:
license	skynet/3rd/lpeg/lpeg.html	/^<h2><a name="license">License<\/a><\/h2>$/;"	a
license	skynet/3rd/lpeg/re.html	/^<h2><a name="license">License<\/a><\/h2>$/;"	a
limitasasize	skynet/3rd/lua/ltable.c	292;"	d	file:
limitequalsasize	skynet/3rd/lua/ltable.c	246;"	d	file:
lincref	skynet/lualib-src/lua-sharedata.c	/^lincref(lua_State *L) {$/;"	f	file:
lindex	skynet/lualib-src/lua-datasheet.c	/^lindex(lua_State *L) {$/;"	f	file:
lindexconf	skynet/lualib-src/lua-sharedata.c	/^lindexconf(lua_State *L) {$/;"	f	file:
line	skynet/3rd/lua/lobject.h	/^  int line;$/;"	m	struct:AbsLineInfo
line	skynet/3rd/lua/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
line	skynet/lualib-src/lua-skynet.c	/^	int line;$/;"	m	struct:source_info	file:
linedefined	skynet/3rd/lua/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto
linedefined	skynet/3rd/lua/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
linehook	skynet/lualib/skynet/remotedebug.lua	/^function linehook(mode, line)$/;"	f
lineinfo	skynet/3rd/lua/lobject.h	/^  ls_byte *lineinfo;  \/* information about source lines (debug information) *\/$/;"	m	struct:Proto
linenumber	skynet/3rd/lua/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
linfo	skynet/lualib-src/lua-socket.c	/^linfo(lua_State *L) {$/;"	f	file:
linit_c	skynet/3rd/lua/linit.c	8;"	d	file:
link	skynet/skynet-src/skynet_timer.c	/^link(struct link_list *list,struct timer_node *node) {$/;"	f	file:
link_clear	skynet/skynet-src/skynet_timer.c	/^link_clear(struct link_list *list) {$/;"	f	file:
link_list	skynet/skynet-src/skynet_timer.c	/^struct link_list {$/;"	s	file:
linkgclist	skynet/3rd/lua/lgc.c	146;"	d	file:
linkgclist_	skynet/3rd/lua/lgc.c	/^static void linkgclist_ (GCObject *o, GCObject **pnext, GCObject **list) {$/;"	f	file:
linkobjgclist	skynet/3rd/lua/lgc.c	159;"	d	file:
lint64	skynet/lualib-src/lua-bson.c	/^lint64(lua_State *L) {$/;"	f	file:
lintcommand	skynet/lualib-src/lua-skynet.c	/^lintcommand(lua_State *L) {$/;"	f	file:
liolib_c	skynet/3rd/lua/liolib.c	7;"	d	file:
lis_sharedtable	skynet/lualib-src/lua-sharetable.c	/^lis_sharedtable(lua_State* L) {$/;"	f	file:
lisdigit	skynet/3rd/lua/lctype.h	59;"	d
lisdirty	skynet/lualib-src/lua-sharedata.c	/^lisdirty(lua_State *L) {$/;"	f	file:
lislalnum	skynet/3rd/lua/lctype.h	58;"	d
lislalpha	skynet/3rd/lua/lctype.h	57;"	d
lisname	skynet/lualib-src/lua-cluster.c	/^lisname(lua_State *L) {$/;"	f	file:
lisprint	skynet/3rd/lua/lctype.h	61;"	d
lisspace	skynet/3rd/lua/lctype.h	60;"	d
list_service	skynet/service/service_mgr.lua	/^local function list_service()$/;"	f
list_srv	skynet/service/launcher.lua	/^local function list_srv(ti, fmt_func, ...)$/;"	f
list_uncomplete	skynet/skynet-src/socket_server.c	/^list_uncomplete(struct wb_list *s) {$/;"	f	file:
listabslineinfo	skynet/3rd/lua/ltests.c	/^static int listabslineinfo (lua_State *L) {$/;"	f	file:
listcode	skynet/3rd/lua/ltests.c	/^static int listcode (lua_State *L) {$/;"	f	file:
listen	skynet/skynet-src/socket_server.c	/^		struct request_listen listen;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_listen	file:
listen_id	skynet/service-src/service_gate.c	/^	int listen_id;$/;"	m	struct:gate	file:
listen_socket	skynet/skynet-src/socket_server.c	/^listen_socket(struct socket_server *ss, struct request_listen * request, struct socket_message *result) {$/;"	f	file:
listfield	skynet/3rd/lua/lparser.c	/^static void listfield (LexState *ls, ConsControl *cc) {$/;"	f	file:
listing	skynet/3rd/lua/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
listk	skynet/3rd/lua/ltests.c	/^static int listk (lua_State *L) {$/;"	f	file:
listlocals	skynet/3rd/lua/ltests.c	/^static int listlocals (lua_State *L) {$/;"	f	file:
lisxdigit	skynet/3rd/lua/lctype.h	62;"	d
little	skynet/3rd/lua/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon34	file:
little_endian	skynet/lualib-src/lua-mongo.c	/^little_endian(uint32_t v) {$/;"	f	file:
ljestat	skynet/lualib-src/lua-memory.c	/^ljestat(lua_State *L) {$/;"	f	file:
ll_funcs	skynet/3rd/lua/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_loadlib	skynet/3rd/lua/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_require	skynet/3rd/lua/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	skynet/3rd/lua/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
llen	skynet/lualib-src/lua-bson.c	/^llen(lua_State *L) {$/;"	f	file:
llen	skynet/lualib-src/lua-datasheet.c	/^llen(lua_State *L) {$/;"	f	file:
llen	skynet/lualib-src/lua-sharedata.c	/^llen(lua_State *L) {$/;"	f	file:
llex	skynet/3rd/lua/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	skynet/3rd/lua/llex.c	7;"	d	file:
llex_h	skynet/3rd/lua/llex.h	8;"	d
llimits_h	skynet/3rd/lua/llimits.h	8;"	d
llisten	skynet/lualib-src/lua-socket.c	/^llisten(lua_State *L) {$/;"	f	file:
lloadproto	skynet/lualib-src/sproto/lsproto.c	/^lloadproto(lua_State *L) {$/;"	f	file:
lmakeindex	skynet/lualib-src/lua-bson.c	/^lmakeindex(lua_State *L) {$/;"	f	file:
lmallctl	skynet/lualib-src/lua-memory.c	/^lmallctl(lua_State *L) {$/;"	f	file:
lmarkdirty	skynet/lualib-src/lua-sharedata.c	/^lmarkdirty(lua_State *L) {$/;"	f	file:
lmathlib_c	skynet/3rd/lua/lmathlib.c	7;"	d	file:
lmd5	skynet/3rd/lua-md5/md5lib.c	/^static int lmd5 (lua_State *L) {$/;"	f	file:
lmem_c	skynet/3rd/lua/lmem.c	7;"	d	file:
lmem_h	skynet/3rd/lua/lmem.h	8;"	d
lmemfind	skynet/3rd/lua/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	skynet/3rd/lua/lobject.h	789;"	d
lneedupdate	skynet/lualib-src/lua-sharedata.c	/^lneedupdate(lua_State *L) {$/;"	f	file:
lnew	skynet/lualib-src/lua-datasheet.c	/^lnew(lua_State *L) {$/;"	f	file:
lnew_ctx	skynet/lualib-src/ltls.c	/^lnew_ctx(lua_State* L) {$/;"	f	file:
lnew_tls	skynet/lualib-src/ltls.c	/^lnew_tls(lua_State* L) {$/;"	f	file:
lnewbuffer	skynet/lualib-src/lua-socket.c	/^lnewbuffer(lua_State *L) {$/;"	f	file:
lnewconf	skynet/lualib-src/lua-sharedata.c	/^lnewconf(lua_State *L) {$/;"	f	file:
lnewpool	skynet/lualib-src/lua-socket.c	/^lnewpool(lua_State *L, int sz) {$/;"	f	file:
lnewproto	skynet/lualib-src/sproto/lsproto.c	/^lnewproto(lua_State *L) {$/;"	f	file:
lnewreader	skynet/lualib-src/lua-stm.c	/^lnewreader(lua_State *L) {$/;"	f	file:
lnewwriter	skynet/lualib-src/lua-stm.c	/^lnewwriter(lua_State *L) {$/;"	f	file:
lnext	skynet/lualib-src/lua-datasheet.c	/^lnext(lua_State *L) {$/;"	f	file:
lnextkey	skynet/lualib-src/lua-sharedata.c	/^lnextkey(lua_State *L) {$/;"	f	file:
lnglen	skynet/3rd/lua/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon15
lnodelay	skynet/lualib-src/lua-socket.c	/^lnodelay(lua_State *L) {$/;"	f	file:
lnodename	skynet/lualib-src/lua-cluster.c	/^lnodename(lua_State *L) {$/;"	f	file:
lnow	skynet/lualib-src/lua-skynet.c	/^lnow(lua_State *L) {$/;"	f	file:
loadBlock	skynet/3rd/lua/lundump.c	/^static void loadBlock (LoadState *S, void *b, size_t size) {$/;"	f	file:
loadByte	skynet/3rd/lua/lundump.c	/^static lu_byte loadByte (LoadState *S) {$/;"	f	file:
loadCode	skynet/3rd/lua/lundump.c	/^static void loadCode (LoadState *S, Proto *f) {$/;"	f	file:
loadConstants	skynet/3rd/lua/lundump.c	/^static void loadConstants (LoadState *S, Proto *f) {$/;"	f	file:
loadDebug	skynet/3rd/lua/lundump.c	/^static void loadDebug (LoadState *S, Proto *f) {$/;"	f	file:
loadFunction	skynet/3rd/lua/lundump.c	/^static void loadFunction (LoadState *S, Proto *f, TString *psource) {$/;"	f	file:
loadInt	skynet/3rd/lua/lundump.c	/^static int loadInt (LoadState *S) {$/;"	f	file:
loadInteger	skynet/3rd/lua/lundump.c	/^static lua_Integer loadInteger (LoadState *S) {$/;"	f	file:
loadNumber	skynet/3rd/lua/lundump.c	/^static lua_Number loadNumber (LoadState *S) {$/;"	f	file:
loadProtos	skynet/3rd/lua/lundump.c	/^static void loadProtos (LoadState *S, Proto *f) {$/;"	f	file:
loadSize	skynet/3rd/lua/lundump.c	/^static size_t loadSize (LoadState *S) {$/;"	f	file:
loadString	skynet/3rd/lua/lundump.c	/^static TString *loadString (LoadState *S, Proto *p) {$/;"	f	file:
loadStringN	skynet/3rd/lua/lundump.c	/^static TString *loadStringN (LoadState *S, Proto *p) {$/;"	f	file:
loadUnsigned	skynet/3rd/lua/lundump.c	/^static size_t loadUnsigned (LoadState *S, size_t limit) {$/;"	f	file:
loadUpvalues	skynet/3rd/lua/lundump.c	/^static void loadUpvalues (LoadState *S, Proto *f) {$/;"	f	file:
loadVar	skynet/3rd/lua/lundump.c	58;"	d	file:
loadVector	skynet/3rd/lua/lundump.c	50;"	d	file:
load_aux	skynet/3rd/lua/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
load_config	skynet/skynet-src/skynet_main.c	/^static const char * load_config = "\\$/;"	v	file:
load_data	game/myservice/status.lua	/^function load_data(db)$/;"	f
load_matrixfile	skynet/lualib-src/lua-sharetable.c	/^load_matrixfile(lua_State *L) {$/;"	f	file:
load_proto	skynet/3rd/lua/lauxlib.c	/^load_proto(const char *key) {$/;"	f	file:
load_service	skynet/lualib/skynet/sharetable.lua	/^local function load_service(t, key)$/;"	f
loadconfig	skynet/service/clusterd.lua	/^local function loadconfig(tmp)$/;"	f
loadedlibs	skynet/3rd/lua/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loader	skynet/lualib/snax/hotfix.lua	/^local function loader(source)$/;"	f
loader.load	skynet/lualib/sprotoloader.lua	/^function loader.load(index)$/;"	f
loader.register	skynet/lualib/sprotoloader.lua	/^function loader.register(filename, index)$/;"	f
loader.save	skynet/lualib/sprotoloader.lua	/^function loader.save(bin, index)$/;"	f
loadfunc	skynet/3rd/lua/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib	skynet/3rd/lua/ltests.c	/^static int loadlib (lua_State *L) {$/;"	f	file:
loadlib_c	skynet/3rd/lua/loadlib.c	11;"	d	file:
loadline	skynet/3rd/lua/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
loadsp	skynet/lualib/skynet/sharemap.lua	/^local function loadsp()$/;"	f
loadtable	skynet/lualib/skynet/sharetable.lua	/^	local function loadtable(filename, ptr, len)$/;"	f
lobject_c	skynet/3rd/lua/lobject.c	7;"	d	file:
lobject_h	skynet/3rd/lua/lobject.h	9;"	d
lobjectid	skynet/lualib-src/lua-bson.c	/^lobjectid(lua_State *L) {$/;"	f	file:
local CMD 	game/myservice/luagate.lua	/^local CMD = setmetatable({}, {__index = function(_, fname)$/;"	f
local CMD 	game/myservice/player_agent.lua	/^local CMD = setmetatable({}, {__index = function(_, fname)$/;"	f
local CMD 	skynet/lualib/snax/gateserver.lua	/^local CMD = setmetatable({}, { __gc = function() netpack.clear(queue) end })$/;"	f
local G 	skynet/lualib/skynet/snax.lua	/^local G = interface_g and require (interface_g) or { require = function() end }$/;"	f
local I 	skynet/3rd/lpeg/re.lua	/^local I = m.P(function (s,i) print(i, s:sub(1, i-1)); return i end)$/;"	f
local _, data 	skynet/lualib/skynet/sharemap.lua	/^	local _, data = stmobj(function(msg, sz, sth)$/;"	f
local c 	skynet/test/testudp.lua	/^	local c = socket.udp(function(str, from)$/;"	f
local co 	skynet/lualib/skynet/coroutine.lua	/^	local co = skynetco.create(function(...)$/;"	f
local command_cache 	skynet/lualib/skynet/db/redis.lua	/^local command_cache = make_cache(function(t,cmd)$/;"	f
local command_np_cache 	skynet/lualib/skynet/db/redis.lua	/^local command_np_cache = make_cache(function(t, cmd)$/;"	f
local count_cache 	skynet/lualib/skynet/db/redis.lua	/^local count_cache = make_cache(function(t,k)$/;"	f
local defined 	skynet/3rd/lpeg/re.lua	/^local defined = "%" * Def \/ function (c,Defs)$/;"	f
local exception 	skynet/lualib/sprotoparser.lua	/^local exception = lpeg.Cmt( lpeg.Carg(1) , function ( _ , pos, parser_state)$/;"	f
local exitfunc 	skynet/service/snaxd.lua	/^				local exitfunc = method[4] or function() end$/;"	f
local f 	skynet/lualib/skynet/db/redis.lua	/^	local f = function (self, v, ...)$/;"	f
local fd 	skynet/lualib/skynet/dns.lua	/^	local fd = socket.udp(function(str, from)$/;"	f
local function aux (...) x 	skynet/3rd/lpeg/test.lua	/^  local function aux (...) x = #{...}; return false end$/;"	f
local function check(n) n 	skynet/3rd/lpeg/test.lua	/^  local function check(n) n = n or 1; assert(touch == n); touch = 0 end$/;"	f
local header_cache 	skynet/lualib/skynet/db/redis.lua	/^local header_cache = make_cache(function(t,k)$/;"	f
local initfunc 	skynet/service/snaxd.lua	/^				local initfunc = method[4] or function() end$/;"	f
local instance 	skynet/service/launcher.lua	/^local instance = {} -- for confirm (function command.LAUNCH \/ command.ERROR \/ command.LAUNCHOK)$/;"	f
local meta 	skynet/lualib/skynet/snax.lua	/^local meta = { __tostring = function(v) return string.format("[%s:%x]", v.type, v.handle) end}$/;"	f
local nextIdx 	game/myservice/resmng.lua	/^local nextIdx = function()$/;"	f
local ok 	skynet/lualib/skynet/db/redis/cluster.lua	/^		local ok = pcall(function ()$/;"	f
local ok, err 	skynet/examples/share.lua	/^	local ok, err = pcall(function()$/;"	f
local ok, err 	skynet/lualib/http/websocket.lua	/^    local ok, err = xpcall(function ()$/;"	f
local ok, err 	skynet/service/cslave.lua	/^	local ok, err = pcall(function()$/;"	f
local ok, err 	skynet/service/debug_console.lua	/^	local ok, err = pcall(function()$/;"	f
local ok, err 	skynet/test/testmemlimit.lua	/^    local ok, err = pcall(function()$/;"	f
local ok,conn 	skynet/lualib/skynet/db/redis/cluster.lua	/^		local ok,conn = pcall(function ()$/;"	f
local ok,conn 	skynet/lualib/skynet/db/redis/cluster.lua	/^	local ok,conn = sync.once.Do(name,function ()$/;"	f
local ok,errmsg 	skynet/test/testrediscluster.lua	/^		local ok,errmsg = pcall(function ()$/;"	f
local result 	skynet/lualib/skynet/db/redis/cluster.lua	/^		local result = {pcall(function ()$/;"	f
local ret 	skynet/test/testpipeline.lua	/^		local ret = db:pipelining(function (red)$/;"	f
local set_upvalue 	game/myservice/common.lua	/^local set_upvalue = function (f, name, value)$/;"	f
local socket_error 	skynet/lualib/http/sockethelper.lua	/^local socket_error = setmetatable({} , { __tostring = function() return "[Socket Error]" end })$/;"	f
local socket_error 	skynet/lualib/skynet/socketchannel.lua	/^local socket_error = setmetatable({}, {__tostring = function() return "[Error: socket]" end })	-- alias for error object$/;"	f
local_resolve	skynet/lualib/skynet/dns.lua	/^local function local_resolve(name, ipv6)$/;"	f
localdebuginfo	skynet/3rd/lua/lparser.c	/^static LocVar *localdebuginfo (FuncState *fs, int vidx) {$/;"	f	file:
localfunc	skynet/3rd/lua/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	skynet/3rd/lua/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
lock	skynet/3rd/lua/lauxlib.c	/^	struct spinlock lock;$/;"	m	struct:codecache	typeref:struct:codecache::spinlock	file:
lock	skynet/3rd/lua/ltests.h	/^struct L_EXTRA { int lock; int *plock; };$/;"	m	struct:L_EXTRA
lock	skynet/lualib-src/lua-clientsocket.c	/^	pthread_mutex_t lock;$/;"	m	struct:queue	file:
lock	skynet/lualib-src/lua-debugchannel.c	/^	struct spinlock lock;$/;"	m	struct:channel	typeref:struct:channel::spinlock	file:
lock	skynet/lualib-src/lua-stm.c	/^	struct rwlock lock;$/;"	m	struct:stm_object	typeref:struct:stm_object::rwlock	file:
lock	skynet/skynet-src/rwlock.h	/^	pthread_rwlock_t lock;$/;"	m	struct:rwlock
lock	skynet/skynet-src/skynet_env.c	/^	struct spinlock lock;$/;"	m	struct:skynet_env	typeref:struct:skynet_env::spinlock	file:
lock	skynet/skynet-src/skynet_handle.c	/^	struct rwlock lock;$/;"	m	struct:handle_storage	typeref:struct:handle_storage::rwlock	file:
lock	skynet/skynet-src/skynet_module.c	/^	struct spinlock lock;$/;"	m	struct:modules	typeref:struct:modules::spinlock	file:
lock	skynet/skynet-src/skynet_mq.c	/^	struct spinlock lock;$/;"	m	struct:global_queue	typeref:struct:global_queue::spinlock	file:
lock	skynet/skynet-src/skynet_mq.c	/^	struct spinlock lock;$/;"	m	struct:message_queue	typeref:struct:message_queue::spinlock	file:
lock	skynet/skynet-src/skynet_timer.c	/^	struct spinlock lock;$/;"	m	struct:timer	typeref:struct:timer::spinlock	file:
lock	skynet/skynet-src/socket_server.c	/^	struct spinlock *lock;$/;"	m	struct:socket_lock	typeref:struct:socket_lock::spinlock	file:
lock	skynet/skynet-src/spinlock.h	/^	STD_ atomic_int lock;$/;"	m	struct:spinlock
lock	skynet/skynet-src/spinlock.h	/^	atomic_flag_ lock;$/;"	m	struct:spinlock
lock	skynet/skynet-src/spinlock.h	/^	pthread_mutex_t lock;$/;"	m	struct:spinlock
locvars	skynet/3rd/lua/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
log2_aux	skynet/3rd/lua/ltests.c	/^static int log2_aux (lua_State *L) {$/;"	f	file:
log2maxs	skynet/3rd/lua/llimits.h	60;"	d
log_blob	skynet/skynet-src/skynet_log.c	/^log_blob(FILE *f, void * buffer, size_t sz) {$/;"	f	file:
log_socket	skynet/skynet-src/skynet_log.c	/^log_socket(FILE * f, struct skynet_socket_message * message, size_t sz) {$/;"	f	file:
logfile	skynet/skynet-src/skynet_server.c	/^	ATOM_POINTER logfile;$/;"	m	struct:skynet_context	file:
logger	skynet/service-src/service_logger.c	/^struct logger {$/;"	s	file:
logger	skynet/skynet-src/skynet_imp.h	/^	const char * logger;$/;"	m	struct:skynet_config
logger_cb	skynet/service-src/service_logger.c	/^logger_cb(struct skynet_context * context, void *ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
logger_create	skynet/service-src/service_logger.c	/^logger_create(void) {$/;"	f
logger_init	skynet/service-src/service_logger.c	/^logger_init(struct logger * inst, struct skynet_context *ctx, const char * parm) {$/;"	f
logger_release	skynet/service-src/service_logger.c	/^logger_release(struct logger * inst) {$/;"	f
login	skynet/lualib/snax/loginserver.lua	/^local function login(conf)$/;"	f
logout	skynet/examples/login/msgagent.lua	/^local function logout()$/;"	f
logservice	skynet/skynet-src/skynet_imp.h	/^	const char * logservice;$/;"	m	struct:skynet_config
look	game/myservice/player_handler.lua	/^function look(self)$/;"	f
lookahead	skynet/3rd/lua/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookforfunc	skynet/3rd/lua/loadlib.c	/^static int lookforfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
lookup_cache	skynet/lualib/skynet/dns.lua	/^local function lookup_cache(name, qtype, ignorettl)$/;"	f
lookup_key	skynet/lualib-src/lua-sharedata.c	/^lookup_key(struct table *tbl, uint32_t keyhash, int key, int keytype, const char *str, size_t sz) {$/;"	f	file:
loopset	skynet/3rd/lpeg/lptypes.h	101;"	d
lopcodes_c	skynet/3rd/lua/lopcodes.c	7;"	d	file:
lopcodes_h	skynet/3rd/lua/lopcodes.h	8;"	d
lopnames_h	skynet/3rd/lua/lopnames.h	8;"	d
loslib_c	skynet/3rd/lua/loslib.c	7;"	d	file:
low	skynet/skynet-src/socket_server.c	/^	struct wb_list low;$/;"	m	struct:socket	typeref:struct:socket::wb_list	file:
lp_P	skynet/3rd/lpeg/lptree.c	/^static int lp_P (lua_State *L) {$/;"	f	file:
lp_V	skynet/3rd/lpeg/lptree.c	/^static int lp_V (lua_State *L) {$/;"	f	file:
lp_acccapture	skynet/3rd/lpeg/lptree.c	/^static int lp_acccapture (lua_State *L) {$/;"	f	file:
lp_and	skynet/3rd/lpeg/lptree.c	/^static int lp_and (lua_State *L) {$/;"	f	file:
lp_argcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_argcapture (lua_State *L) {$/;"	f	file:
lp_backref	skynet/3rd/lpeg/lptree.c	/^static int lp_backref (lua_State *L) {$/;"	f	file:
lp_behind	skynet/3rd/lpeg/lptree.c	/^static int lp_behind (lua_State *L) {$/;"	f	file:
lp_choice	skynet/3rd/lpeg/lptree.c	/^static int lp_choice (lua_State *L) {$/;"	f	file:
lp_constcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_constcapture (lua_State *L) {$/;"	f	file:
lp_divcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_divcapture (lua_State *L) {$/;"	f	file:
lp_equal	skynet/3rd/lpeg/lptypes.h	30;"	d
lp_equal	skynet/3rd/lpeg/lptypes.h	46;"	d
lp_foldcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_foldcapture (lua_State *L) {$/;"	f	file:
lp_gc	skynet/3rd/lpeg/lptree.c	/^int lp_gc (lua_State *L) {$/;"	f
lp_groupcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_groupcapture (lua_State *L) {$/;"	f	file:
lp_locale	skynet/3rd/lpeg/lptree.c	/^static int lp_locale (lua_State *L) {$/;"	f	file:
lp_match	skynet/3rd/lpeg/lptree.c	/^static int lp_match (lua_State *L) {$/;"	f	file:
lp_matchtime	skynet/3rd/lpeg/lptree.c	/^static int lp_matchtime (lua_State *L) {$/;"	f	file:
lp_not	skynet/3rd/lpeg/lptree.c	/^static int lp_not (lua_State *L) {$/;"	f	file:
lp_poscapture	skynet/3rd/lpeg/lptree.c	/^static int lp_poscapture (lua_State *L) {$/;"	f	file:
lp_printcode	skynet/3rd/lpeg/lptree.c	/^static int lp_printcode (lua_State *L) {$/;"	f	file:
lp_printtree	skynet/3rd/lpeg/lptree.c	/^static int lp_printtree (lua_State *L) {$/;"	f	file:
lp_range	skynet/3rd/lpeg/lptree.c	/^static int lp_range (lua_State *L) {$/;"	f	file:
lp_seq	skynet/3rd/lpeg/lptree.c	/^static int lp_seq (lua_State *L) {$/;"	f	file:
lp_set	skynet/3rd/lpeg/lptree.c	/^static int lp_set (lua_State *L) {$/;"	f	file:
lp_setmax	skynet/3rd/lpeg/lptree.c	/^static int lp_setmax (lua_State *L) {$/;"	f	file:
lp_simplecapture	skynet/3rd/lpeg/lptree.c	/^static int lp_simplecapture (lua_State *L) {$/;"	f	file:
lp_star	skynet/3rd/lpeg/lptree.c	/^static int lp_star (lua_State *L) {$/;"	f	file:
lp_sub	skynet/3rd/lpeg/lptree.c	/^static int lp_sub (lua_State *L) {$/;"	f	file:
lp_substcapture	skynet/3rd/lpeg/lptree.c	/^static int lp_substcapture (lua_State *L) {$/;"	f	file:
lp_tablecapture	skynet/3rd/lpeg/lptree.c	/^static int lp_tablecapture (lua_State *L) {$/;"	f	file:
lp_type	skynet/3rd/lpeg/lptree.c	/^static int lp_type (lua_State *L) {$/;"	f	file:
lp_utfr	skynet/3rd/lpeg/lptree.c	/^static int lp_utfr (lua_State *L) {$/;"	f	file:
lpack	skynet/lualib-src/lua-netpack.c	/^lpack(lua_State *L) {$/;"	f	file:
lpack	skynet/lualib-src/sproto/lsproto.c	/^lpack(lua_State *L) {$/;"	f	file:
lpackpush	skynet/lualib-src/lua-cluster.c	/^lpackpush(lua_State *L) {$/;"	f	file:
lpackrequest	skynet/lualib-src/lua-cluster.c	/^lpackrequest(lua_State *L) {$/;"	f	file:
lpackresponse	skynet/lualib-src/lua-cluster.c	/^lpackresponse(lua_State *L) {$/;"	f	file:
lpackstring	skynet/lualib-src/lua-skynet.c	/^lpackstring(lua_State *L) {$/;"	f	file:
lpacktrace	skynet/lualib-src/lua-cluster.c	/^lpacktrace(lua_State *L) {$/;"	f	file:
lpairs	skynet/lualib-src/lua-datasheet.c	/^lpairs(lua_State *L) {$/;"	f	file:
lparser_c	skynet/3rd/lua/lparser.c	7;"	d	file:
lparser_h	skynet/3rd/lua/lparser.h	8;"	d
lpause	skynet/lualib-src/lua-socket.c	/^lpause(lua_State *L) {$/;"	f	file:
lpcap_h	skynet/3rd/lpeg/lpcap.h	3;"	d
lpcode_h	skynet/3rd/lpeg/lpcode.h	3;"	d
lpop	skynet/lualib-src/lua-netpack.c	/^lpop(lua_State *L) {$/;"	f	file:
lpopbuffer	skynet/lualib-src/lua-socket.c	/^lpopbuffer(lua_State *L) {$/;"	f	file:
lpprint_h	skynet/3rd/lpeg/lpprint.h	3;"	d
lprefix_h	skynet/3rd/lua/lprefix.h	8;"	d
lprofactive	skynet/lualib-src/lua-memory.c	/^lprofactive(lua_State *L) {$/;"	f	file:
lprotocol	skynet/lualib-src/sproto/lsproto.c	/^lprotocol(lua_State *L) {$/;"	f	file:
lpset_h	skynet/3rd/lpeg/lpcset.h	3;"	d
lptree_h	skynet/3rd/lpeg/lptree.h	3;"	d
lptypes_h	skynet/3rd/lpeg/lptypes.h	8;"	d
lpushbuffer	skynet/lualib-src/lua-socket.c	/^lpushbuffer(lua_State *L) {$/;"	f	file:
lpvm_h	skynet/3rd/lpeg/lpvm.h	3;"	d
lquerytype	skynet/lualib-src/sproto/lsproto.c	/^lquerytype(lua_State *L) {$/;"	f	file:
lrandomkey	skynet/lualib-src/lua-crypt.c	/^lrandomkey(lua_State *L) {$/;"	f	file:
lread	skynet/lualib-src/lua-debugchannel.c	/^lread(lua_State *L) {$/;"	f	file:
lread	skynet/lualib-src/lua-stm.c	/^lread(lua_State *L) {$/;"	f	file:
lreadall	skynet/lualib-src/lua-socket.c	/^lreadall(lua_State *L) {$/;"	f	file:
lreadline	skynet/lualib-src/lua-socket.c	/^lreadline(lua_State *L) {$/;"	f	file:
lreadstdin	skynet/lualib-src/lua-clientsocket.c	/^lreadstdin(lua_State *L) {$/;"	f	file:
lrecv	skynet/lualib-src/lua-clientsocket.c	/^lrecv(lua_State *L) {$/;"	f	file:
lredirect	skynet/lualib-src/lua-skynet.c	/^lredirect(lua_State *L) {$/;"	f	file:
lregex	skynet/lualib-src/lua-bson.c	/^lregex(lua_State *L) {$/;"	f	file:
lrelease	skynet/lualib-src/lua-debugchannel.c	/^lrelease(lua_State *L) {$/;"	f	file:
lreplace	skynet/lualib-src/lua-bson.c	/^lreplace(lua_State *L) {$/;"	f	file:
lresolve	skynet/lualib-src/lua-socket.c	/^lresolve(lua_State *L) {$/;"	f	file:
ls	skynet/3rd/lua/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
ls_byte	skynet/3rd/lua/llimits.h	/^typedef signed char ls_byte;$/;"	t
lsaveproto	skynet/lualib-src/sproto/lsproto.c	/^lsaveproto(lua_State *L) {$/;"	f	file:
lsend	skynet/lualib-src/lua-clientsocket.c	/^lsend(lua_State *L) {$/;"	f	file:
lsend	skynet/lualib-src/lua-skynet.c	/^lsend(lua_State *L) {$/;"	f	file:
lsend	skynet/lualib-src/lua-socket.c	/^lsend(lua_State *L) {$/;"	f	file:
lsendlow	skynet/lualib-src/lua-socket.c	/^lsendlow(lua_State *L) {$/;"	f	file:
lsha1	skynet/lualib-src/lsha1.c	/^lsha1(lua_State *L) {$/;"	f
lshutdown	skynet/lualib-src/lua-clientsocket.c	/^lshutdown(lua_State *L) {$/;"	f	file:
lshutdown	skynet/lualib-src/lua-socket.c	/^lshutdown(lua_State *L) {$/;"	f	file:
lsizenode	skynet/3rd/lua/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table
lstart	skynet/lualib-src/lua-socket.c	/^lstart(lua_State *L) {$/;"	f	file:
lstart	skynet/service-src/service_snlua.c	/^lstart(lua_State *L) {$/;"	f	file:
lstate_c	skynet/3rd/lua/lstate.c	7;"	d	file:
lstate_h	skynet/3rd/lua/lstate.h	8;"	d
lstop	skynet/3rd/lua/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstop	skynet/service-src/service_snlua.c	/^lstop(lua_State *L) {$/;"	f	file:
lstr2p	skynet/lualib-src/lua-socket.c	/^lstr2p(lua_State *L) {$/;"	f	file:
lstring_c	skynet/3rd/lua/lstring.c	7;"	d	file:
lstring_h	skynet/3rd/lua/lstring.h	8;"	d
lstringpointer	skynet/lualib-src/lua-datasheet.c	/^lstringpointer(lua_State *L) {$/;"	f	file:
lstrlib_c	skynet/3rd/lua/lstrlib.c	7;"	d	file:
lsubtype	skynet/lualib-src/lua-bson.c	/^lsubtype(lua_State *L, int subtype, const uint8_t * buf, size_t sz) {$/;"	f	file:
lsys_load	skynet/3rd/lua/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
lsys_sym	skynet/3rd/lua/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
lsys_unloadlib	skynet/3rd/lua/loadlib.c	/^static void lsys_unloadlib (void *lib) {$/;"	f	file:
ltable_c	skynet/3rd/lua/ltable.c	7;"	d	file:
ltable_c	skynet/3rd/lua/onelua.c	47;"	d	file:
ltable_h	skynet/3rd/lua/ltable.h	8;"	d
ltablib_c	skynet/3rd/lua/ltablib.c	7;"	d	file:
ltests_c	skynet/3rd/lua/ltests.c	7;"	d	file:
ltests_h	skynet/3rd/lua/ltests.h	8;"	d
ltimestamp	skynet/lualib-src/lua-bson.c	/^ltimestamp(lua_State *L) {$/;"	f	file:
ltls_init_constructor	skynet/lualib-src/ltls.c	/^ltls_init_constructor(lua_State* L) {$/;"	f	file:
ltls_init_destructor	skynet/lualib-src/ltls.c	/^ltls_init_destructor(lua_State* L) {$/;"	f	file:
ltm_c	skynet/3rd/lua/ltm.c	7;"	d	file:
ltm_h	skynet/3rd/lua/ltm.h	8;"	d
ltohex	skynet/lualib-src/lua-crypt.c	/^ltohex(lua_State *L) {$/;"	f	file:
ltolower	skynet/3rd/lua/lctype.h	71;"	d
ltostring	skynet/lualib-src/lua-bson.c	/^ltostring(lua_State *L) {$/;"	f	file:
ltostring	skynet/lualib-src/lua-netpack.c	/^ltostring(lua_State *L) {$/;"	f	file:
ltostring	skynet/lualib-src/lua-skynet.c	/^ltostring(lua_State *L) {$/;"	f	file:
ltotal	skynet/lualib-src/lua-memory.c	/^ltotal(lua_State *L) {$/;"	f	file:
ltrace	skynet/lualib-src/lua-skynet.c	/^ltrace(lua_State *L) {$/;"	f	file:
ltrash	skynet/lualib-src/lua-skynet.c	/^ltrash(lua_State *L) {$/;"	f	file:
ltype	skynet/lualib-src/lua-bson.c	/^ltype(lua_State *L) {$/;"	f	file:
lu_byte	skynet/3rd/lua/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	skynet/3rd/lua/lmathlib.c	/^typedef unsigned int lu_int32;$/;"	t	file:
lu_int32	skynet/3rd/lua/lmathlib.c	/^typedef unsigned long lu_int32;$/;"	t	file:
lu_mem	skynet/3rd/lua/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lu_mem	skynet/3rd/lua/llimits.h	/^typedef size_t lu_mem;$/;"	t
lu_mem	skynet/3rd/lua/llimits.h	/^typedef unsigned long lu_mem;$/;"	t
luaB_assert	skynet/3rd/lua/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	skynet/3rd/lua/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_auxwrap	skynet/service-src/service_snlua.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_close	skynet/3rd/lua/lcorolib.c	/^static int luaB_close (lua_State *L) {$/;"	f	file:
luaB_cocreate	skynet/3rd/lua/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_cocreate	skynet/service-src/service_snlua.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	skynet/3rd/lua/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	skynet/3rd/lua/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_coresume	skynet/service-src/service_snlua.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	skynet/3rd/lua/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	skynet/3rd/lua/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	skynet/3rd/lua/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_cowrap	skynet/service-src/service_snlua.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	skynet/3rd/lua/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	skynet/3rd/lua/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	skynet/3rd/lua/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	skynet/3rd/lua/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	skynet/3rd/lua/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	skynet/3rd/lua/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	skynet/3rd/lua/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_opentests	skynet/3rd/lua/ltests.c	/^int luaB_opentests (lua_State *L) {$/;"	f
luaB_pairs	skynet/3rd/lua/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	skynet/3rd/lua/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	skynet/3rd/lua/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	skynet/3rd/lua/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	skynet/3rd/lua/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	skynet/3rd/lua/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	skynet/3rd/lua/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	skynet/3rd/lua/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	skynet/3rd/lua/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	skynet/3rd/lua/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	skynet/3rd/lua/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	skynet/3rd/lua/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_warn	skynet/3rd/lua/lbaselib.c	/^static int luaB_warn (lua_State *L) {$/;"	f	file:
luaB_xpcall	skynet/3rd/lua/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	skynet/3rd/lua/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaB_yieldable	skynet/3rd/lua/lcorolib.c	/^static int luaB_yieldable (lua_State *L) {$/;"	f	file:
luaC_barrier	skynet/3rd/lua/lgc.h	184;"	d
luaC_barrier_	skynet/3rd/lua/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	skynet/3rd/lua/lgc.h	190;"	d
luaC_barrierback_	skynet/3rd/lua/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_changemode	skynet/3rd/lua/lgc.c	/^void luaC_changemode (lua_State *L, int newmode) {$/;"	f
luaC_checkGC	skynet/3rd/lua/lgc.h	177;"	d
luaC_checkfinalizer	skynet/3rd/lua/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_condGC	skynet/3rd/lua/lgc.h	172;"	d
luaC_fix	skynet/3rd/lua/lgc.c	/^void luaC_fix (lua_State *L, GCObject *o) {$/;"	f
luaC_freeallobjects	skynet/3rd/lua/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	skynet/3rd/lua/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	skynet/3rd/lua/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {$/;"	f
luaC_newobjdt	skynet/3rd/lua/lgc.c	/^GCObject *luaC_newobjdt (lua_State *L, int tt, size_t sz, size_t offset) {$/;"	f
luaC_objbarrier	skynet/3rd/lua/lgc.h	180;"	d
luaC_objbarrierback	skynet/3rd/lua/lgc.h	187;"	d
luaC_runtilstate	skynet/3rd/lua/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	skynet/3rd/lua/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	skynet/3rd/lua/lgc.h	102;"	d
luaD_call	skynet/3rd/lua/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callnoyield	skynet/3rd/lua/ldo.c	/^void luaD_callnoyield (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_checkstack	skynet/3rd/lua/ldo.h	32;"	d
luaD_checkstackaux	skynet/3rd/lua/ldo.h	26;"	d
luaD_closeprotected	skynet/3rd/lua/ldo.c	/^int luaD_closeprotected (lua_State *L, ptrdiff_t level, int status) {$/;"	f
luaD_growstack	skynet/3rd/lua/ldo.c	/^int luaD_growstack (lua_State *L, int n, int raiseerror) {$/;"	f
luaD_hook	skynet/3rd/lua/ldo.c	/^void luaD_hook (lua_State *L, int event, int line,$/;"	f
luaD_hookcall	skynet/3rd/lua/ldo.c	/^void luaD_hookcall (lua_State *L, CallInfo *ci) {$/;"	f
luaD_inctop	skynet/3rd/lua/ldo.c	/^void luaD_inctop (lua_State *L) {$/;"	f
luaD_pcall	skynet/3rd/lua/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	skynet/3rd/lua/ldo.c	/^void luaD_poscall (lua_State *L, CallInfo *ci, int nres) {$/;"	f
luaD_precall	skynet/3rd/lua/ldo.c	/^CallInfo *luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_pretailcall	skynet/3rd/lua/ldo.c	/^int luaD_pretailcall (lua_State *L, CallInfo *ci, StkId func,$/;"	f
luaD_protectedparser	skynet/3rd/lua/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	skynet/3rd/lua/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	skynet/3rd/lua/ldo.c	/^int luaD_reallocstack (lua_State *L, int newsize, int raiseerror) {$/;"	f
luaD_seterrorobj	skynet/3rd/lua/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_shrinkstack	skynet/3rd/lua/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	skynet/3rd/lua/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaD_tryfuncTM	skynet/3rd/lua/ldo.c	/^StkId luaD_tryfuncTM (lua_State *L, StkId func) {$/;"	f
luaE_checkcstack	skynet/3rd/lua/lstate.c	/^void luaE_checkcstack (lua_State *L) {$/;"	f
luaE_extendCI	skynet/3rd/lua/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	skynet/3rd/lua/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	skynet/3rd/lua/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_incCstack	skynet/3rd/lua/lstate.c	/^LUAI_FUNC void luaE_incCstack (lua_State *L) {$/;"	f
luaE_resetthread	skynet/3rd/lua/lstate.c	/^int luaE_resetthread (lua_State *L, int status) {$/;"	f
luaE_setdebt	skynet/3rd/lua/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaE_shrinkCI	skynet/3rd/lua/lstate.c	/^void luaE_shrinkCI (lua_State *L) {$/;"	f
luaE_warnerror	skynet/3rd/lua/lstate.c	/^void luaE_warnerror (lua_State *L, const char *where) {$/;"	f
luaE_warning	skynet/3rd/lua/lstate.c	/^void luaE_warning (lua_State *L, const char *msg, int tocont) {$/;"	f
luaF_close	skynet/3rd/lua/lfunc.c	/^StkId luaF_close (lua_State *L, StkId level, int status, int yy) {$/;"	f
luaF_closeupval	skynet/3rd/lua/lfunc.c	/^void luaF_closeupval (lua_State *L, StkId level) {$/;"	f
luaF_findupval	skynet/3rd/lua/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	skynet/3rd/lua/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_getlocalname	skynet/3rd/lua/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_initupvals	skynet/3rd/lua/lfunc.c	/^void luaF_initupvals (lua_State *L, LClosure *cl) {$/;"	f
luaF_newCclosure	skynet/3rd/lua/lfunc.c	/^CClosure *luaF_newCclosure (lua_State *L, int nupvals) {$/;"	f
luaF_newLclosure	skynet/3rd/lua/lfunc.c	/^LClosure *luaF_newLclosure (lua_State *L, int nupvals) {$/;"	f
luaF_newproto	skynet/3rd/lua/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newtbcupval	skynet/3rd/lua/lfunc.c	/^void luaF_newtbcupval (lua_State *L, StkId level) {$/;"	f
luaF_shareproto	skynet/3rd/lua/lfunc.c	/^void luaF_shareproto (Proto *f) {$/;"	f
luaF_unlinkupval	skynet/3rd/lua/lfunc.c	/^void luaF_unlinkupval (UpVal *uv) {$/;"	f
luaG_addinfo	skynet/3rd/lua/ldebug.c	/^const char *luaG_addinfo (lua_State *L, const char *msg, TString *src,$/;"	f
luaG_callerror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_callerror (lua_State *L, const TValue *o) {$/;"	f
luaG_concaterror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_errormsg	skynet/3rd/lua/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_findlocal	skynet/3rd/lua/ldebug.c	/^const char *luaG_findlocal (lua_State *L, CallInfo *ci, int n, StkId *pos) {$/;"	f
luaG_forerror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_forerror (lua_State *L, const TValue *o, const char *what) {$/;"	f
luaG_getfuncline	skynet/3rd/lua/ldebug.c	/^int luaG_getfuncline (const Proto *f, int pc) {$/;"	f
luaG_opinterror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	f
luaG_ordererror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_tointerror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_tointerror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_traceexec	skynet/3rd/lua/ldebug.c	/^int luaG_traceexec (lua_State *L, const Instruction *pc) {$/;"	f
luaG_typeerror	skynet/3rd/lua/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_finishset	skynet/3rd/lua/ltable.c	/^void luaH_finishset (lua_State *L, Table *t, const TValue *key,$/;"	f
luaH_free	skynet/3rd/lua/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	skynet/3rd/lua/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	skynet/3rd/lua/ltable.c	/^const TValue *luaH_getint (Table *t, lua_Integer key) {$/;"	f
luaH_getn	skynet/3rd/lua/ltable.c	/^lua_Unsigned luaH_getn (Table *t) {$/;"	f
luaH_getshortstr	skynet/3rd/lua/ltable.c	/^const TValue *luaH_getshortstr (Table *t, TString *key) {$/;"	f
luaH_getstr	skynet/3rd/lua/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_mainposition	skynet/3rd/lua/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	skynet/3rd/lua/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	skynet/3rd/lua/ltable.c	/^void luaH_newkey (lua_State *L, Table *t, const TValue *key, TValue *value) {$/;"	f
luaH_next	skynet/3rd/lua/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_realasize	skynet/3rd/lua/ltable.c	/^LUAI_FUNC unsigned int luaH_realasize (const Table *t) {$/;"	f
luaH_resize	skynet/3rd/lua/ltable.c	/^void luaH_resize (lua_State *L, Table *t, unsigned int newasize,$/;"	f
luaH_resizearray	skynet/3rd/lua/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize) {$/;"	f
luaH_set	skynet/3rd/lua/ltable.c	/^void luaH_set (lua_State *L, Table *t, const TValue *key, TValue *value) {$/;"	f
luaH_setint	skynet/3rd/lua/ltable.c	/^void luaH_setint (lua_State *L, Table *t, lua_Integer key, TValue *value) {$/;"	f
luaK_checkstack	skynet/3rd/lua/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	skynet/3rd/lua/lcode.c	/^int luaK_code (FuncState *fs, Instruction i) {$/;"	f
luaK_codeABC	skynet/3rd/lua/lcode.h	48;"	d
luaK_codeABCk	skynet/3rd/lua/lcode.c	/^int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {$/;"	f
luaK_codeABx	skynet/3rd/lua/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	skynet/3rd/lua/lcode.c	/^int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {$/;"	f
luaK_codek	skynet/3rd/lua/lcode.c	/^static int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f	file:
luaK_concat	skynet/3rd/lua/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	skynet/3rd/lua/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2K	skynet/3rd/lua/lcode.c	/^static int luaK_exp2K (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_exp2RK	skynet/3rd/lua/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	skynet/3rd/lua/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	skynet/3rd/lua/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2const	skynet/3rd/lua/lcode.c	/^int luaK_exp2const (FuncState *fs, const expdesc *e, TValue *v) {$/;"	f
luaK_exp2nextreg	skynet/3rd/lua/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	skynet/3rd/lua/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_finish	skynet/3rd/lua/lcode.c	/^void luaK_finish (FuncState *fs) {$/;"	f
luaK_fixline	skynet/3rd/lua/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_float	skynet/3rd/lua/lcode.c	/^static void luaK_float (FuncState *fs, int reg, lua_Number f) {$/;"	f	file:
luaK_getlabel	skynet/3rd/lua/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	skynet/3rd/lua/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	skynet/3rd/lua/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	skynet/3rd/lua/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	skynet/3rd/lua/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_int	skynet/3rd/lua/lcode.c	/^void luaK_int (FuncState *fs, int reg, lua_Integer i) {$/;"	f
luaK_intK	skynet/3rd/lua/lcode.c	/^static int luaK_intK (FuncState *fs, lua_Integer n) {$/;"	f	file:
luaK_isKint	skynet/3rd/lua/lcode.c	/^int luaK_isKint (expdesc *e) {$/;"	f
luaK_jump	skynet/3rd/lua/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	skynet/3rd/lua/lcode.h	60;"	d
luaK_nil	skynet/3rd/lua/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	skynet/3rd/lua/lcode.c	/^static int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	file:
luaK_patchlist	skynet/3rd/lua/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	skynet/3rd/lua/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	skynet/3rd/lua/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr opr,$/;"	f
luaK_prefix	skynet/3rd/lua/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr opr, expdesc *e, int line) {$/;"	f
luaK_reserveregs	skynet/3rd/lua/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	skynet/3rd/lua/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	skynet/3rd/lua/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_semerror	skynet/3rd/lua/lcode.c	/^l_noret luaK_semerror (LexState *ls, const char *msg) {$/;"	f
luaK_setlist	skynet/3rd/lua/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	skynet/3rd/lua/lcode.h	58;"	d
luaK_setoneret	skynet/3rd/lua/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	skynet/3rd/lua/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_settablesize	skynet/3rd/lua/lcode.c	/^void luaK_settablesize (FuncState *fs, int pc, int ra, int asize, int hsize) {$/;"	f
luaK_storevar	skynet/3rd/lua/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaL_Buffer	skynet/3rd/lua/lauxlib.h	/^struct luaL_Buffer {$/;"	s
luaL_Buffer	skynet/3rd/lua/lauxlib.h	/^typedef struct luaL_Buffer luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	skynet/3rd/lua-md5/compat-5.2.h	3;"	d
luaL_Reg	skynet/3rd/lua/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	skynet/3rd/lua/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	skynet/3rd/lua/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	skynet/3rd/lua/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	skynet/3rd/lua-md5/compat-5.2.h	5;"	d
luaL_addchar	skynet/3rd/lua/lauxlib.h	209;"	d
luaL_addgsub	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_addgsub (luaL_Buffer *b, const char *s,$/;"	f
luaL_addlstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	skynet/3rd/lua/lauxlib.h	213;"	d
luaL_addstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	skynet/3rd/lua/lauxlib.h	135;"	d
luaL_argerror	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int arg, const char *extramsg) {$/;"	f
luaL_argexpected	skynet/3rd/lua/lauxlib.h	138;"	d
luaL_buffaddr	skynet/3rd/lua/lauxlib.h	206;"	d
luaL_buffinit	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	skynet/3rd/lua/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_bufflen	skynet/3rd/lua/lauxlib.h	205;"	d
luaL_buffsub	skynet/3rd/lua/lauxlib.h	215;"	d
luaL_callmeta	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int arg) {$/;"	f
luaL_checkint	skynet/3rd/lua/lauxlib.h	290;"	d
luaL_checkinteger	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int arg) {$/;"	f
luaL_checklong	skynet/3rd/lua/lauxlib.h	293;"	d
luaL_checklstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {$/;"	f
luaL_checknumber	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int arg) {$/;"	f
luaL_checkoption	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int arg, const char *def,$/;"	f
luaL_checkstack	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	skynet/3rd/lua/lauxlib.h	141;"	d
luaL_checktype	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int arg, int t) {$/;"	f
luaL_checkudata	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	skynet/3rd/lua/lauxlib.h	286;"	d
luaL_checkversion	skynet/3rd/lua/lauxlib.h	47;"	d
luaL_checkversion_	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver, size_t sz) {$/;"	f
luaL_dofile	skynet/3rd/lua/lauxlib.h	146;"	d
luaL_dostring	skynet/3rd/lua/lauxlib.h	149;"	d
luaL_error	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_getmetafield	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	skynet/3rd/lua/lauxlib.h	152;"	d
luaL_getsubtable	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	skynet/3rd/lua/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s,$/;"	f
luaL_initcodecache	skynet/3rd/lua/lauxlib.c	/^luaL_initcodecache(void) {$/;"	f
luaL_intop	skynet/3rd/lua/lauxlib.h	163;"	d
luaL_len	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	skynet/3rd/lua/lauxlib.h	156;"	d
luaL_loadbufferx	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	skynet/3rd/lua/lauxlib.h	97;"	d
luaL_loadfilex	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadfilex_	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_loadfilex_ (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	skynet/3rd/lpeg/lptypes.h	38;"	d
luaL_newlib	skynet/3rd/lua/lauxlib.h	132;"	d
luaL_newlib	skynet/lualib-src/sproto/lsproto.c	42;"	d	file:
luaL_newlibtable	skynet/3rd/lua/lauxlib.h	129;"	d
luaL_newlibtable	skynet/lualib-src/sproto/lsproto.c	39;"	d	file:
luaL_newmetatable	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_newstate	skynet/3rd/lua/ltests.h	105;"	d
luaL_openlibs	skynet/3rd/lua/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_openlibs	skynet/3rd/lua/ltests.h	106;"	d
luaL_opt	skynet/3rd/lua/lauxlib.h	154;"	d
luaL_optint	skynet/3rd/lua/lauxlib.h	291;"	d
luaL_optinteger	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int arg,$/;"	f
luaL_optlong	skynet/3rd/lua/lauxlib.h	294;"	d
luaL_optlstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int arg,$/;"	f
luaL_optnumber	skynet/3rd/lua/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int arg, lua_Number def) {$/;"	f
luaL_optstring	skynet/3rd/lua/lauxlib.h	142;"	d
luaL_optunsigned	skynet/3rd/lua/lauxlib.h	287;"	d
luaL_prepbuffer	skynet/3rd/lua/lauxlib.h	226;"	d
luaL_prepbuffsize	skynet/3rd/lua/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushfail	skynet/3rd/lua/lauxlib.h	168;"	d
luaL_pushresult	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_requiref	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	skynet/3rd/lpeg/lptypes.h	37;"	d
luaL_setfuncs	skynet/3rd/lua-md5/compat-5.2.c	/^void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setfuncs	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setfuncs	skynet/lualib-src/sproto/lsproto.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	skynet/3rd/lua/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typeerror	skynet/3rd/lua/lauxlib.c	/^LUALIB_API int luaL_typeerror (lua_State *L, int arg, const char *tname) {$/;"	f
luaL_typename	skynet/3rd/lua/lauxlib.h	144;"	d
luaL_unref	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	skynet/3rd/lua/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_checksize	skynet/3rd/lua/lmem.h	34;"	d
luaM_error	skynet/3rd/lua/lmem.h	17;"	d
luaM_free	skynet/3rd/lua/lmem.h	56;"	d
luaM_free_	skynet/3rd/lua/lmem.c	/^void luaM_free_ (lua_State *L, void *block, size_t osize) {$/;"	f
luaM_freearray	skynet/3rd/lua/lmem.h	57;"	d
luaM_freemem	skynet/3rd/lua/lmem.h	55;"	d
luaM_growaux_	skynet/3rd/lua/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int nelems, int *psize,$/;"	f
luaM_growvector	skynet/3rd/lua/lmem.h	66;"	d
luaM_limitN	skynet/3rd/lua/lmem.h	44;"	d
luaM_malloc_	skynet/3rd/lua/lmem.c	/^void *luaM_malloc_ (lua_State *L, size_t size, int tag) {$/;"	f
luaM_new	skynet/3rd/lua/lmem.h	59;"	d
luaM_newobject	skynet/3rd/lua/lmem.h	64;"	d
luaM_newvector	skynet/3rd/lua/lmem.h	60;"	d
luaM_newvectorchecked	skynet/3rd/lua/lmem.h	61;"	d
luaM_realloc_	skynet/3rd/lua/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocvchar	skynet/3rd/lua/lmem.h	52;"	d
luaM_reallocvector	skynet/3rd/lua/lmem.h	70;"	d
luaM_saferealloc_	skynet/3rd/lua/lmem.c	/^void *luaM_saferealloc_ (lua_State *L, void *block, size_t osize,$/;"	f
luaM_shrinkvector	skynet/3rd/lua/lmem.h	74;"	d
luaM_shrinkvector_	skynet/3rd/lua/lmem.c	/^void *luaM_shrinkvector_ (lua_State *L, void *block, int *size,$/;"	f
luaM_testsize	skynet/3rd/lua/lmem.h	31;"	d
luaM_toobig	skynet/3rd/lua/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	skynet/3rd/lua/lobject.c	/^void luaO_arith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_ceillog2	skynet/3rd/lua/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	skynet/3rd/lua/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t srclen) {$/;"	f
luaO_hexavalue	skynet/3rd/lua/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_pushfstring	skynet/3rd/lua/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	skynet/3rd/lua/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawarith	skynet/3rd/lua/lobject.c	/^int luaO_rawarith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_str2num	skynet/3rd/lua/lobject.c	/^size_t luaO_str2num (const char *s, TValue *o) {$/;"	f
luaO_tostring	skynet/3rd/lua/lobject.c	/^void luaO_tostring (lua_State *L, TValue *obj) {$/;"	f
luaO_utf8esc	skynet/3rd/lua/lobject.c	/^int luaO_utf8esc (char *buff, unsigned long x) {$/;"	f
luaP_opmodes	skynet/3rd/lua/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaS_clearcache	skynet/3rd/lua/lstring.c	/^void luaS_clearcache (global_State *g) {$/;"	f
luaS_createlngstrobj	skynet/3rd/lua/lstring.c	/^TString *luaS_createlngstrobj (lua_State *L, size_t l) {$/;"	f
luaS_eqlngstr	skynet/3rd/lua/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_eqshrstr	skynet/3rd/lua/lstring.c	/^int luaS_eqshrstr (TString *a, TString *b) {$/;"	f
luaS_hash	skynet/3rd/lua/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_hashlongstr	skynet/3rd/lua/lstring.c	/^unsigned int luaS_hashlongstr (TString *ts) {$/;"	f
luaS_init	skynet/3rd/lua/lstring.c	/^void luaS_init (lua_State *L) {$/;"	f
luaS_new	skynet/3rd/lua/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	skynet/3rd/lua/lstring.h	28;"	d
luaS_newlstr	skynet/3rd/lua/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	skynet/3rd/lua/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, int nuvalue) {$/;"	f
luaS_remove	skynet/3rd/lua/lstring.c	/^void luaS_remove (lua_State *L, TString *ts) {$/;"	f
luaS_resize	skynet/3rd/lua/lstring.c	/^void luaS_resize (lua_State *L, int nsize) {$/;"	f
luaS_share	skynet/3rd/lua/lstring.c	/^void luaS_share (TString *ts) {$/;"	f
luaT_adjustvarargs	skynet/3rd/lua/ltm.c	/^void luaT_adjustvarargs (lua_State *L, int nfixparams, CallInfo *ci,$/;"	f
luaT_callTM	skynet/3rd/lua/ltm.c	/^void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callTMres	skynet/3rd/lua/ltm.c	/^void luaT_callTMres (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callorderTM	skynet/3rd/lua/ltm.c	/^int luaT_callorderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_callorderiTM	skynet/3rd/lua/ltm.c	/^int luaT_callorderiTM (lua_State *L, const TValue *p1, int v2,$/;"	f
luaT_gettm	skynet/3rd/lua/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	skynet/3rd/lua/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_getvarargs	skynet/3rd/lua/ltm.c	/^void luaT_getvarargs (lua_State *L, CallInfo *ci, StkId where, int wanted) {$/;"	f
luaT_init	skynet/3rd/lua/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_objtypename	skynet/3rd/lua/ltm.c	/^const char *luaT_objtypename (lua_State *L, const TValue *o) {$/;"	f
luaT_trybinTM	skynet/3rd/lua/ltm.c	/^void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_trybinassocTM	skynet/3rd/lua/ltm.c	/^void luaT_trybinassocTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_trybiniTM	skynet/3rd/lua/ltm.c	/^void luaT_trybiniTM (lua_State *L, const TValue *p1, lua_Integer i2,$/;"	f
luaT_tryconcatTM	skynet/3rd/lua/ltm.c	/^void luaT_tryconcatTM (lua_State *L) {$/;"	f
luaT_typenames_	skynet/3rd/lua/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTYPES] = {$/;"	v
luaU_dump	skynet/3rd/lua/ldump.c	/^int luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data,$/;"	f
luaU_print	skynet/3rd/lua/luac.c	29;"	d	file:
luaU_undump	skynet/3rd/lua/lundump.c	/^LClosure *luaU_undump(lua_State *L, ZIO *Z, const char *name) {$/;"	f
luaV_concat	skynet/3rd/lua/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj	skynet/3rd/lua/lvm.c	/^int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	skynet/3rd/lua/lvm.c	/^void luaV_execute (lua_State *L, CallInfo *ci) {$/;"	f
luaV_fastget	skynet/3rd/lua/lvm.h	85;"	d
luaV_fastgeti	skynet/3rd/lua/lvm.h	97;"	d
luaV_fastset	skynet/3rd/lua/lvm.h	91;"	d
luaV_fastseti	skynet/3rd/lua/lvm.h	104;"	d
luaV_finishOp	skynet/3rd/lua/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_finishfastset	skynet/3rd/lua/lvm.h	110;"	d
luaV_finishget	skynet/3rd/lua/lvm.c	/^void luaV_finishget (lua_State *L, const TValue *t, TValue *key, StkId val,$/;"	f
luaV_finishset	skynet/3rd/lua/lvm.c	/^void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	f
luaV_flttointeger	skynet/3rd/lua/lvm.c	/^int luaV_flttointeger (lua_Number n, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_idiv	skynet/3rd/lua/lvm.c	/^lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_lessequal	skynet/3rd/lua/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	skynet/3rd/lua/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_mod	skynet/3rd/lua/lvm.c	/^lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_modf	skynet/3rd/lua/lvm.c	/^lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {$/;"	f
luaV_objlen	skynet/3rd/lua/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	skynet/3rd/lua/lvm.h	75;"	d
luaV_shiftl	skynet/3rd/lua/lvm.c	/^lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y) {$/;"	f
luaV_shiftr	skynet/3rd/lua/lvm.h	118;"	d
luaV_tointeger	skynet/3rd/lua/lvm.c	/^int luaV_tointeger (const TValue *obj, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_tointegerns	skynet/3rd/lua/lvm.c	/^int luaV_tointegerns (const TValue *obj, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_tonumber_	skynet/3rd/lua/lvm.c	/^int luaV_tonumber_ (const TValue *obj, lua_Number *n) {$/;"	f
luaX_init	skynet/3rd/lua/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	skynet/3rd/lua/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	skynet/3rd/lua/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	skynet/3rd/lua/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	skynet/3rd/lua/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	skynet/3rd/lua/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	skynet/3rd/lua/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	skynet/3rd/lua/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_nvarstack	skynet/3rd/lua/lparser.c	/^int luaY_nvarstack (FuncState *fs) {$/;"	f
luaY_parser	skynet/3rd/lua/lparser.c	/^LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	skynet/3rd/lua/lzio.h	31;"	d
luaZ_bufflen	skynet/3rd/lua/lzio.h	33;"	d
luaZ_buffremove	skynet/3rd/lua/lzio.h	35;"	d
luaZ_fill	skynet/3rd/lua/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	skynet/3rd/lua/lzio.h	44;"	d
luaZ_init	skynet/3rd/lua/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	skynet/3rd/lua/lzio.h	29;"	d
luaZ_read	skynet/3rd/lua/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	skynet/3rd/lua/lzio.h	36;"	d
luaZ_resizebuffer	skynet/3rd/lua/lzio.h	39;"	d
luaZ_sizebuffer	skynet/3rd/lua/lzio.h	32;"	d
lua_Alloc	skynet/3rd/lua/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	skynet/3rd/lua/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	skynet/3rd/lua/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	skynet/3rd/lua/lua.h	/^typedef struct lua_Debug lua_Debug;$/;"	t	typeref:struct:lua_Debug
lua_Hook	skynet/3rd/lua/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	skynet/3rd/lua/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_KContext	skynet/3rd/lua/lua.h	/^typedef LUA_KCONTEXT lua_KContext;$/;"	t
lua_KFunction	skynet/3rd/lua/lua.h	/^typedef int (*lua_KFunction) (lua_State *L, int status, lua_KContext ctx);$/;"	t
lua_Number	skynet/3rd/lua/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	skynet/3rd/lua/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	skynet/3rd/lua/lstate.h	/^struct lua_State {$/;"	s
lua_State	skynet/3rd/lua/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_Unsigned	skynet/3rd/lpeg/lptypes.h	/^typedef size_t lua_Unsigned;$/;"	t
lua_Unsigned	skynet/3rd/lua/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_WarnFunction	skynet/3rd/lua/lua.h	/^typedef void (*lua_WarnFunction) (void *ud, const char *msg, int tocont);$/;"	t
lua_Writer	skynet/3rd/lua/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void *p, size_t sz, void *ud);$/;"	t
lua_absindex	skynet/3rd/lua/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_absindex	skynet/lualib-src/sproto/lsproto.c	/^static int lua_absindex (lua_State *L, int idx) {$/;"	f	file:
lua_arith	skynet/3rd/lua/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	skynet/3rd/lua/lauxlib.h	178;"	d
lua_assert	skynet/3rd/lua/lauxlib.h	180;"	d
lua_assert	skynet/3rd/lua/llimits.h	106;"	d
lua_assert	skynet/3rd/lua/llimits.h	114;"	d
lua_atpanic	skynet/3rd/lua/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	skynet/3rd/lua/lua.c	7;"	d	file:
lua_call	skynet/3rd/lua/lua.h	298;"	d
lua_callk	skynet/3rd/lua/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults,$/;"	f
lua_checkmemory	skynet/3rd/lua/ltests.c	/^int lua_checkmemory (lua_State *L) {$/;"	f
lua_checkpc	skynet/3rd/lua/ltests.c	/^static int lua_checkpc (CallInfo *ci) {$/;"	f	file:
lua_checkstack	skynet/3rd/lua/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int n) {$/;"	f
lua_clonefunction	skynet/3rd/lua/lapi.c	/^LUA_API void lua_clonefunction (lua_State *L, const void * fp) {$/;"	f
lua_clonetable	skynet/3rd/lua/lapi.c	/^LUA_API void lua_clonetable(lua_State *L, const void * tp) {$/;"	f
lua_close	skynet/3rd/lua/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_closeslot	skynet/3rd/lua/lapi.c	/^LUA_API void lua_closeslot (lua_State *L, int idx) {$/;"	f
lua_closethread	skynet/3rd/lua/lstate.c	/^LUA_API int lua_closethread (lua_State *L, lua_State *from) {$/;"	f
lua_compare	skynet/3rd/lua/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	skynet/3rd/lua/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	skynet/3rd/lua/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_createtable	skynet/3rd/lua/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	skynet/3rd/lua/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data, int strip) {$/;"	f
lua_equal	skynet/3rd/lua/luaconf.h	376;"	d
lua_error	skynet/3rd/lua/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	skynet/3rd/lua/lua.c	439;"	d	file:
lua_freeline	skynet/3rd/lua/lua.c	448;"	d	file:
lua_gc	skynet/3rd/lua/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, ...) {$/;"	f
lua_getallocf	skynet/3rd/lua/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getextraspace	skynet/3rd/lua/lua.h	375;"	d
lua_getfield	skynet/3rd/lua/lapi.c	/^LUA_API int lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	skynet/3rd/lua/lapi.c	/^LUA_API int lua_getglobal (lua_State *L, const char *name) {$/;"	f
lua_gethook	skynet/3rd/lua/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	skynet/3rd/lua/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	skynet/3rd/lua/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_geti	skynet/3rd/lua/lapi.c	/^LUA_API int lua_geti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_geti	skynet/lualib-src/sproto/lsproto.c	/^lua_geti(lua_State *L, int index, lua_Integer i) {$/;"	f	file:
lua_getinfo	skynet/3rd/lua/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getiuservalue	skynet/3rd/lua/lapi.c	/^LUA_API int lua_getiuservalue (lua_State *L, int idx, int n) {$/;"	f
lua_getlocal	skynet/3rd/lua/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getlocaledecpoint	skynet/3rd/lua/luaconf.h	662;"	d
lua_getmetatable	skynet/3rd/lua/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	skynet/3rd/lua/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	skynet/3rd/lua/lapi.c	/^LUA_API int lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	skynet/3rd/lua/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	skynet/3rd/lpeg/lptypes.h	32;"	d
lua_getuservalue	skynet/3rd/lua/lua.h	428;"	d
lua_h	skynet/3rd/lua/lua.h	10;"	d
lua_ident	skynet/3rd/lua/lapi.c	/^const char lua_ident[] =$/;"	v
lua_initreadline	skynet/3rd/lua/lua.c	436;"	d	file:
lua_initreadline	skynet/3rd/lua/lua.c	443;"	d	file:
lua_insert	skynet/3rd/lua/lua.h	405;"	d
lua_integer2str	skynet/3rd/lua/luaconf.h	504;"	d
lua_isboolean	skynet/3rd/lua/lua.h	392;"	d
lua_iscfunction	skynet/3rd/lua/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	skynet/3rd/lua/lua.h	388;"	d
lua_isinteger	skynet/3rd/lua/lapi.c	/^LUA_API int lua_isinteger (lua_State *L, int idx) {$/;"	f
lua_islightuserdata	skynet/3rd/lua/lua.h	390;"	d
lua_isnil	skynet/3rd/lua/lua.h	391;"	d
lua_isnone	skynet/3rd/lua/lua.h	394;"	d
lua_isnoneornil	skynet/3rd/lua/lua.h	395;"	d
lua_isnumber	skynet/3rd/lua/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	skynet/3rd/lua/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	skynet/3rd/lua/lua.h	389;"	d
lua_isthread	skynet/3rd/lua/lua.h	393;"	d
lua_isuserdata	skynet/3rd/lua/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_isyieldable	skynet/3rd/lua/ldo.c	/^LUA_API int lua_isyieldable (lua_State *L) {$/;"	f
lua_len	skynet/3rd/lua/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	skynet/3rd/lua/luaconf.h	377;"	d
lua_load	skynet/3rd/lua/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	skynet/3rd/lua/llimits.h	264;"	d
lua_lock	skynet/3rd/lua/ltests.h	94;"	d
lua_longassert	skynet/3rd/lua/llimits.h	112;"	d
lua_longassert	skynet/3rd/lua/llimits.h	116;"	d
lua_longjmp	skynet/3rd/lua/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	skynet/3rd/lua/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	skynet/3rd/lua/lua.h	382;"	d
lua_newthread	skynet/3rd/lua/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	skynet/3rd/lua/lua.h	427;"	d
lua_newuserdatauv	skynet/3rd/lua/lapi.c	/^LUA_API void *lua_newuserdatauv (lua_State *L, size_t size, int nuvalue) {$/;"	f
lua_next	skynet/3rd/lua/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2str	skynet/3rd/lua/luaconf.h	411;"	d
lua_number2strx	skynet/3rd/lua/lstrlib.c	/^static int lua_number2strx (lua_State *L, char *buff, int sz,$/;"	f	file:
lua_number2strx	skynet/3rd/lua/ltests.h	147;"	d
lua_number2strx	skynet/3rd/lua/luaconf.h	619;"	d
lua_numbertointeger	skynet/3rd/lua/luaconf.h	423;"	d
lua_objlen	skynet/3rd/lua/luaconf.h	374;"	d
lua_pcall	skynet/3rd/lua/lua.h	302;"	d
lua_pcallk	skynet/3rd/lua/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pointer2str	skynet/3rd/lua/luaconf.h	609;"	d
lua_pop	skynet/3rd/lua/lua.h	380;"	d
lua_printobj	skynet/3rd/lua/ltests.c	/^void lua_printobj (lua_State *L, struct GCObject *o) {$/;"	f
lua_pushboolean	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	skynet/3rd/lua/lua.h	386;"	d
lua_pushfstring	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	skynet/3rd/lua/lua.h	399;"	d
lua_pushinteger	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	skynet/3rd/lua/lua.h	397;"	d
lua_pushlstring	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	skynet/3rd/lua/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	skynet/3rd/lua/lua.h	421;"	d
lua_pushvalue	skynet/3rd/lua/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	skynet/3rd/lua/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	skynet/3rd/lua/lapi.c	/^LUA_API int lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	skynet/3rd/lua/lapi.c	/^LUA_API int lua_rawgeti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawgetp	skynet/3rd/lua/lapi.c	/^LUA_API int lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	skynet/3rd/lpeg/lptypes.h	35;"	d
lua_rawlen	skynet/3rd/lua-md5/compat-5.2.h	12;"	d
lua_rawlen	skynet/3rd/lua/lapi.c	/^LUA_API lua_Unsigned lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	skynet/3rd/lua/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	skynet/3rd/lua/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawsetp	skynet/3rd/lua/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	skynet/3rd/lua/lua.c	437;"	d	file:
lua_readline	skynet/3rd/lua/lua.c	444;"	d	file:
lua_register	skynet/3rd/lua/lua.h	384;"	d
lua_remove	skynet/3rd/lua/lua.h	407;"	d
lua_replace	skynet/3rd/lua/lua.h	409;"	d
lua_resetthread	skynet/3rd/lua/lstate.c	/^LUA_API int lua_resetthread (lua_State *L) {$/;"	f
lua_resume	skynet/3rd/lua/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs,$/;"	f
lua_resumeX	skynet/service-src/service_snlua.c	/^lua_resumeX(lua_State *L, lua_State *from, int nargs, int *nresults) {$/;"	f	file:
lua_rotate	skynet/3rd/lua/lapi.c	/^LUA_API void lua_rotate (lua_State *L, int idx, int n) {$/;"	f
lua_saveline	skynet/3rd/lua/lua.c	438;"	d	file:
lua_saveline	skynet/3rd/lua/lua.c	447;"	d	file:
lua_setallocf	skynet/3rd/lua/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setcstacklimit	skynet/3rd/lua/lstate.c	/^LUA_API int lua_setcstacklimit (lua_State *L, unsigned int limit) {$/;"	f
lua_setfield	skynet/3rd/lua/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	skynet/3rd/lua/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *name) {$/;"	f
lua_sethook	skynet/3rd/lua/ldebug.c	/^LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_seti	skynet/3rd/lua/lapi.c	/^LUA_API void lua_seti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_seti	skynet/lualib-src/sproto/lsproto.c	/^lua_seti(lua_State *L, int index, lua_Integer n) {$/;"	f	file:
lua_setiuservalue	skynet/3rd/lua/lapi.c	/^LUA_API int lua_setiuservalue (lua_State *L, int idx, int n) {$/;"	f
lua_setlocal	skynet/3rd/lua/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	skynet/3rd/lua/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	skynet/3rd/lua/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	skynet/3rd/lua/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	skynet/3rd/lpeg/lptypes.h	33;"	d
lua_setuservalue	skynet/3rd/lua/lua.h	429;"	d
lua_setwarnf	skynet/3rd/lua/lapi.c	/^void lua_setwarnf (lua_State *L, lua_WarnFunction f, void *ud) {$/;"	f
lua_sharefunction	skynet/3rd/lua/lapi.c	/^LUA_API void lua_sharefunction (lua_State *L, int index) {$/;"	f
lua_sharestring	skynet/3rd/lua/lapi.c	/^LUA_API void lua_sharestring (lua_State *L, int index) {$/;"	f
lua_status	skynet/3rd/lua/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	skynet/3rd/lua/lua.c	405;"	d	file:
lua_stdin_is_tty	skynet/3rd/lua/lua.c	412;"	d	file:
lua_stdin_is_tty	skynet/3rd/lua/lua.c	417;"	d	file:
lua_str2number	skynet/3rd/lua/luaconf.h	444;"	d
lua_str2number	skynet/3rd/lua/luaconf.h	460;"	d
lua_str2number	skynet/3rd/lua/luaconf.h	475;"	d
lua_str2number	skynet/3rd/lua/luaconf.h	632;"	d
lua_str2number	skynet/3rd/lua/luaconf.h	634;"	d
lua_stringtonumber	skynet/3rd/lua/lapi.c	/^LUA_API size_t lua_stringtonumber (lua_State *L, const char *s) {$/;"	f
lua_strlen	skynet/3rd/lua/luaconf.h	372;"	d
lua_strx2number	skynet/3rd/lua/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_strx2number	skynet/3rd/lua/ltests.h	146;"	d
lua_strx2number	skynet/3rd/lua/luaconf.h	601;"	d
lua_tmpnam	skynet/3rd/lua/loslib.c	114;"	d	file:
lua_tmpnam	skynet/3rd/lua/loslib.c	124;"	d	file:
lua_toboolean	skynet/3rd/lua/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	skynet/3rd/lua/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_toclose	skynet/3rd/lua/lapi.c	/^LUA_API void lua_toclose (lua_State *L, int idx) {$/;"	f
lua_tointeger	skynet/3rd/lua/lua.h	378;"	d
lua_tointegerx	skynet/3rd/lua/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_tointegerx	skynet/lualib-src/sproto/lsproto.c	/^static int64_t lua_tointegerx(lua_State *L, int idx, int *isnum) {$/;"	f	file:
lua_tolstring	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	skynet/3rd/lua/lua.h	377;"	d
lua_tonumberx	skynet/3rd/lua/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_topointer	skynet/3rd/lua/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	skynet/3rd/lua/lua.h	402;"	d
lua_tothread	skynet/3rd/lua/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	skynet/3rd/lua/lua.h	423;"	d
lua_tounsignedx	skynet/3rd/lua/lua.h	422;"	d
lua_touserdata	skynet/3rd/lua/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	skynet/3rd/lua/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	skynet/3rd/lua/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	skynet/3rd/lua/llimits.h	265;"	d
lua_unlock	skynet/3rd/lua/ltests.h	95;"	d
lua_upvalueid	skynet/3rd/lua/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	skynet/3rd/lua/lua.h	45;"	d
lua_upvaluejoin	skynet/3rd/lua/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	skynet/3rd/lua/lapi.c	/^LUA_API lua_Number lua_version (lua_State *L) {$/;"	f
lua_warning	skynet/3rd/lua/lapi.c	/^void lua_warning (lua_State *L, const char *msg, int tocont) {$/;"	f
lua_writeline	skynet/3rd/lua/lauxlib.h	267;"	d
lua_writestring	skynet/3rd/lua/lauxlib.h	262;"	d
lua_writestringerror	skynet/3rd/lua/lauxlib.h	272;"	d
lua_xmove	skynet/3rd/lua/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	skynet/3rd/lua/lua.h	320;"	d
lua_yieldk	skynet/3rd/lua/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, lua_KContext ctx,$/;"	f
luac_c	skynet/3rd/lua/luac.c	7;"	d	file:
luaconf_h	skynet/3rd/lua/luaconf.h	9;"	d
luai_apicheck	skynet/3rd/lua/llimits.h	123;"	d
luai_apicheck	skynet/3rd/lua/luaconf.h	718;"	d
luai_ctype_	skynet/3rd/lua/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_jmpbuf	skynet/3rd/lua/ldo.c	61;"	d	file:
luai_jmpbuf	skynet/3rd/lua/ldo.c	68;"	d	file:
luai_jmpbuf	skynet/3rd/lua/ldo.c	75;"	d	file:
luai_likely	skynet/3rd/lua/luaconf.h	675;"	d
luai_likely	skynet/3rd/lua/luaconf.h	678;"	d
luai_makeseed	skynet/3rd/lua/lstring.c	/^static unsigned int luai_makeseed(lua_State *L) {$/;"	f	file:
luai_numadd	skynet/3rd/lua/llimits.h	346;"	d
luai_numdiv	skynet/3rd/lua/llimits.h	318;"	d
luai_numeq	skynet/3rd/lua/llimits.h	350;"	d
luai_numge	skynet/3rd/lua/llimits.h	354;"	d
luai_numgt	skynet/3rd/lua/llimits.h	353;"	d
luai_numidiv	skynet/3rd/lua/llimits.h	313;"	d
luai_numisnan	skynet/3rd/lua/llimits.h	355;"	d
luai_numle	skynet/3rd/lua/llimits.h	352;"	d
luai_numlt	skynet/3rd/lua/llimits.h	351;"	d
luai_nummod	skynet/3rd/lua/llimits.h	333;"	d
luai_nummul	skynet/3rd/lua/llimits.h	348;"	d
luai_numpow	skynet/3rd/lua/llimits.h	340;"	d
luai_numsub	skynet/3rd/lua/llimits.h	347;"	d
luai_numunm	skynet/3rd/lua/llimits.h	349;"	d
luai_threadyield	skynet/3rd/lua/llimits.h	273;"	d
luai_unlikely	skynet/3rd/lua/luaconf.h	676;"	d
luai_unlikely	skynet/3rd/lua/luaconf.h	679;"	d
luai_userstateclose	skynet/3rd/lua/llimits.h	286;"	d
luai_userstateclose	skynet/3rd/lua/ltests.h	88;"	d
luai_userstatefree	skynet/3rd/lua/llimits.h	294;"	d
luai_userstatefree	skynet/3rd/lua/ltests.h	92;"	d
luai_userstateopen	skynet/3rd/lua/llimits.h	282;"	d
luai_userstateopen	skynet/3rd/lua/ltests.h	86;"	d
luai_userstateresume	skynet/3rd/lua/llimits.h	298;"	d
luai_userstatethread	skynet/3rd/lua/llimits.h	290;"	d
luai_userstatethread	skynet/3rd/lua/ltests.h	90;"	d
luai_userstateyield	skynet/3rd/lua/llimits.h	302;"	d
luai_verifycode	skynet/3rd/lua/lundump.c	29;"	d	file:
lualib_h	skynet/3rd/lua/lualib.h	9;"	d
luaopen_base	skynet/3rd/lua/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bson	skynet/lualib-src/lua-bson.c	/^luaopen_bson(lua_State *L) {$/;"	f
luaopen_cache	skynet/3rd/lua/lauxlib.c	/^LUAMOD_API int luaopen_cache(lua_State *L) {$/;"	f
luaopen_client_crypt	skynet/lualib-src/lua-crypt.c	/^luaopen_client_crypt(lua_State *L) {$/;"	f
luaopen_client_socket	skynet/lualib-src/lua-clientsocket.c	/^luaopen_client_socket(lua_State *L) {$/;"	f
luaopen_coroutine	skynet/3rd/lua/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	skynet/3rd/lua/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	skynet/3rd/lua/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_lpeg	skynet/3rd/lpeg/lptree.c	/^int luaopen_lpeg (lua_State *L) {$/;"	f
luaopen_ltls_c	skynet/lualib-src/ltls.c	/^luaopen_ltls_c(lua_State* L) {$/;"	f
luaopen_ltls_init_c	skynet/lualib-src/ltls.c	/^luaopen_ltls_init_c(lua_State* L) {$/;"	f
luaopen_math	skynet/3rd/lua/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_md5_core	skynet/3rd/lua-md5/md5lib.c	/^int luaopen_md5_core (lua_State *L) {$/;"	f
luaopen_os	skynet/3rd/lua/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	skynet/3rd/lua/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_skynet_cluster_core	skynet/lualib-src/lua-cluster.c	/^luaopen_skynet_cluster_core(lua_State *L) {$/;"	f
luaopen_skynet_core	skynet/lualib-src/lua-skynet.c	/^luaopen_skynet_core(lua_State *L) {$/;"	f
luaopen_skynet_crypt	skynet/lualib-src/lua-crypt.c	/^luaopen_skynet_crypt(lua_State *L) {$/;"	f
luaopen_skynet_datasheet_core	skynet/lualib-src/lua-datasheet.c	/^luaopen_skynet_datasheet_core(lua_State *L) {$/;"	f
luaopen_skynet_debugchannel	skynet/lualib-src/lua-debugchannel.c	/^luaopen_skynet_debugchannel(lua_State *L) {$/;"	f
luaopen_skynet_memory	skynet/lualib-src/lua-memory.c	/^luaopen_skynet_memory(lua_State *L) {$/;"	f
luaopen_skynet_mongo_driver	skynet/lualib-src/lua-mongo.c	/^luaopen_skynet_mongo_driver(lua_State *L) {$/;"	f
luaopen_skynet_multicast_core	skynet/lualib-src/lua-multicast.c	/^luaopen_skynet_multicast_core(lua_State *L) {$/;"	f
luaopen_skynet_netpack	skynet/lualib-src/lua-netpack.c	/^luaopen_skynet_netpack(lua_State *L) {$/;"	f
luaopen_skynet_sharedata_core	skynet/lualib-src/lua-sharedata.c	/^luaopen_skynet_sharedata_core(lua_State *L) {$/;"	f
luaopen_skynet_sharetable_core	skynet/lualib-src/lua-sharetable.c	/^luaopen_skynet_sharetable_core(lua_State *L) {$/;"	f
luaopen_skynet_socketdriver	skynet/lualib-src/lua-socket.c	/^luaopen_skynet_socketdriver(lua_State *L) {$/;"	f
luaopen_skynet_stm	skynet/lualib-src/lua-stm.c	/^luaopen_skynet_stm(lua_State *L) {$/;"	f
luaopen_sproto_core	skynet/lualib-src/sproto/lsproto.c	/^luaopen_sproto_core(lua_State *L) {$/;"	f
luaopen_string	skynet/3rd/lua/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	skynet/3rd/lua/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
luaopen_utf8	skynet/3rd/lua/lutf8lib.c	/^LUAMOD_API int luaopen_utf8 (lua_State *L) {$/;"	f
luaseri_pack	skynet/lualib-src/lua-seri.c	/^luaseri_pack(lua_State *L) {$/;"	f
luaseri_unpack	skynet/lualib-src/lua-seri.c	/^luaseri_unpack(lua_State *L) {$/;"	f
ludp	skynet/lualib-src/lua-socket.c	/^ludp(lua_State *L) {$/;"	f	file:
ludp_address	skynet/lualib-src/lua-socket.c	/^ludp_address(lua_State *L) {$/;"	f	file:
ludp_connect	skynet/lualib-src/lua-socket.c	/^ludp_connect(lua_State *L) {$/;"	f	file:
ludp_send	skynet/lualib-src/lua-socket.c	/^ludp_send(lua_State *L) {$/;"	f	file:
lundump_c	skynet/3rd/lua/lundump.c	7;"	d	file:
lundump_h	skynet/3rd/lua/lundump.h	8;"	d
lunpack	skynet/lualib-src/lua-socket.c	/^lunpack(lua_State *L) {$/;"	f	file:
lunpack	skynet/lualib-src/sproto/lsproto.c	/^lunpack(lua_State *L) {$/;"	f	file:
lunpackrequest	skynet/lualib-src/lua-cluster.c	/^lunpackrequest(lua_State *L) {$/;"	f	file:
lunpackresponse	skynet/lualib-src/lua-cluster.c	/^lunpackresponse(lua_State *L) {$/;"	f	file:
lupdate	skynet/lualib-src/lua-datasheet.c	/^lupdate(lua_State *L) {$/;"	f	file:
lupdate	skynet/lualib-src/lua-sharedata.c	/^lupdate(lua_State *L) {$/;"	f	file:
lupdate	skynet/lualib-src/lua-stm.c	/^lupdate(lua_State *L) {$/;"	f	file:
lusleep	skynet/lualib-src/lua-clientsocket.c	/^lusleep(lua_State *L) {$/;"	f	file:
lutf8lib_c	skynet/3rd/lua/lutf8lib.c	7;"	d	file:
lvm_c	skynet/3rd/lua/lvm.c	7;"	d	file:
lvm_c	skynet/3rd/lua/onelua.c	48;"	d	file:
lvm_h	skynet/3rd/lua/lvm.h	8;"	d
lwrite	skynet/lualib-src/lua-debugchannel.c	/^lwrite(lua_State *L) {$/;"	f	file:
lxor_str	skynet/lualib-src/lua-crypt.c	/^lxor_str(lua_State *L) {$/;"	f	file:
lzio_c	skynet/3rd/lua/lzio.c	7;"	d	file:
lzio_h	skynet/3rd/lua/lzio.h	9;"	d
m	skynet/skynet-src/skynet_module.c	/^	struct skynet_module m[MAX_MODULE_TYPE];$/;"	m	struct:modules	typeref:struct:modules::skynet_module	file:
m	skynet/skynet-src/skynet_start.c	/^	struct monitor *m;$/;"	m	struct:worker_parm	typeref:struct:worker_parm::monitor	file:
m	skynet/skynet-src/skynet_start.c	/^	struct skynet_monitor ** m;$/;"	m	struct:monitor	typeref:struct:monitor::skynet_monitor	file:
m 	game/myclient/player_client_t.lua	/^    m = function(self)$/;"	f
main	game/myservice/testhttp.lua	/^local function main()$/;"	f
main	request_ak.py	/^def main():$/;"	f
main	skynet/3rd/lua/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	skynet/3rd/lua/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	skynet/lualib/skynet.lua	/^	local function main()$/;"	f
main	skynet/skynet-src/skynet_main.c	/^main(int argc, char *argv[]) {$/;"	f
main	skynet/test/testcoroutine.lua	/^local function main()$/;"	f
main	skynet/test/testhttp.lua	/^local function main()$/;"	f
mainfunc	skynet/3rd/lua/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainindex	skynet/lualib-src/sproto/sproto.h	/^	int mainindex;	\/\/ for map$/;"	m	struct:sproto_arg
mainindex_tag	skynet/lualib-src/sproto/lsproto.c	/^	int mainindex_tag;$/;"	m	struct:decode_ud	file:
mainloop	skynet/service-src/service_harbor.c	/^mainloop(struct skynet_context * context, void * ud, int type, int session, uint32_t source, const void * msg, size_t sz) {$/;"	f	file:
mainpositionTV	skynet/3rd/lua/ltable.c	/^static Node *mainpositionTV (const Table *t, const TValue *key) {$/;"	f	file:
mainpositionfromnode	skynet/3rd/lua/ltable.c	/^l_sinline Node *mainpositionfromnode (const Table *t, Node *nd) {$/;"	f
mainthread	skynet/3rd/lua/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
makeCfunc	skynet/3rd/lua/ltests.c	/^static int makeCfunc (lua_State *L) {$/;"	f	file:
make_cache	skynet/lualib/skynet/db/redis.lua	/^local function make_cache(f)$/;"	f
make_matrix	skynet/lualib-src/lua-sharetable.c	/^make_matrix(lua_State *L) {$/;"	f	file:
make_object	skynet/lualib-src/lua-bson.c	/^make_object(lua_State *L, int type, const void * ptr, size_t len) {$/;"	f	file:
makemask	skynet/3rd/lua/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makemask	skynet/lualib-src/lua-debugchannel.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeshared	skynet/3rd/lua/lgc.h	122;"	d
makevariant	skynet/3rd/lua/lobject.h	42;"	d
makewhite	skynet/3rd/lua/lgc.c	71;"	d	file:
mallctl_bool	skynet/skynet-src/malloc_hook.c	/^mallctl_bool(const char* name, bool* newval) {$/;"	f
mallctl_cmd	skynet/skynet-src/malloc_hook.c	/^mallctl_cmd(const char* name) {$/;"	f
mallctl_int64	skynet/skynet-src/malloc_hook.c	/^mallctl_int64(const char* name, size_t* newval) {$/;"	f
mallctl_opt	skynet/skynet-src/malloc_hook.c	/^mallctl_opt(const char* name, int* newval) {$/;"	f
malloc_current_memory	skynet/skynet-src/malloc_hook.c	/^malloc_current_memory(void) {$/;"	f
malloc_memory_block	skynet/skynet-src/malloc_hook.c	/^malloc_memory_block(void) {$/;"	f
malloc_oom	skynet/skynet-src/malloc_hook.c	/^static void malloc_oom(size_t size) {$/;"	f	file:
malloc_used_memory	skynet/skynet-src/malloc_hook.c	/^malloc_used_memory(void) {$/;"	f
manyCmt 	skynet/3rd/lpeg/test.lua	/^local function manyCmt (n)$/;"	f
map	skynet/lualib-src/sproto/sproto.c	/^	int map; \/\/ interpreted two fields struct as map$/;"	m	struct:field	file:
map	skynet/service-src/service_harbor.c	/^	struct hashmap * map;$/;"	m	struct:harbor	typeref:struct:harbor::hashmap	file:
map_entry	skynet/lualib-src/sproto/lsproto.c	/^	int map_entry;$/;"	m	struct:decode_ud	file:
map_entry	skynet/lualib-src/sproto/lsproto.c	/^	int map_entry;$/;"	m	struct:encode_ud	file:
mark_shared	skynet/lualib-src/lua-sharetable.c	/^mark_shared(lua_State *L) {$/;"	f	file:
markbeingfnz	skynet/3rd/lua/lgc.c	/^static lu_mem markbeingfnz (global_State *g) {$/;"	f	file:
markkey	skynet/3rd/lua/lgc.c	97;"	d	file:
marklen	skynet/3rd/lua/lua.c	472;"	d	file:
markmt	skynet/3rd/lua/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	skynet/3rd/lua/lgc.c	99;"	d	file:
markobjectN	skynet/3rd/lua/lgc.c	105;"	d	file:
markold	skynet/3rd/lua/lgc.c	/^static void markold (global_State *g, GCObject *from, GCObject *to) {$/;"	f	file:
marktobeclosed	skynet/3rd/lua/lparser.c	/^static void marktobeclosed (FuncState *fs) {$/;"	f	file:
markupval	skynet/3rd/lua/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	skynet/3rd/lua/lgc.c	94;"	d	file:
maskcolors	skynet/3rd/lua/lgc.c	64;"	d	file:
maskflags	skynet/3rd/lua/ltm.h	55;"	d
maskgcbits	skynet/3rd/lua/lgc.c	67;"	d	file:
match	skynet/3rd/lpeg/lpvm.c	/^const char *match (lua_State *L, const char *o, const char *s, const char *e,$/;"	f
match	skynet/3rd/lua/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match 	skynet/3rd/lpeg/re.lua	/^local function match (s, p, i)$/;"	f
match 	skynet/3rd/lpeg/test.lua	/^local function match (s,p)$/;"	f
match["function"] 	skynet/lualib/skynet/sharetable.lua	/^    match["function"] = match_function$/;"	f
match_capture	skynet/3rd/lua/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	skynet/3rd/lua/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
match_funcinfo	skynet/lualib/skynet/sharetable.lua	/^    local function match_funcinfo(info)$/;"	f
match_function	skynet/lualib/skynet/sharetable.lua	/^    local function match_function(f)$/;"	f
match_internmt	skynet/lualib/skynet/sharetable.lua	/^    local function match_internmt()$/;"	f
match_mt	skynet/lualib/skynet/sharetable.lua	/^    local function match_mt(v)$/;"	f
match_table	skynet/lualib/skynet/sharetable.lua	/^    local function match_table(t)$/;"	f
match_thread	skynet/lualib/skynet/sharetable.lua	/^    local function match_thread(co, level)$/;"	f
match_userdata	skynet/lualib/skynet/sharetable.lua	/^    local function match_userdata(u)$/;"	f
match_value	skynet/lualib/skynet/sharetable.lua	/^    local function match_value(v)$/;"	f
matchbalance	skynet/3rd/lua/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	skynet/3rd/lua/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	skynet/3rd/lua/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
matchtime	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="matchtime"><\/a><code>lpeg.Cmt(patt, function)<\/code><\/h3>$/;"	a
math_abs	skynet/3rd/lua/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	skynet/3rd/lua/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	skynet/3rd/lua/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	skynet/3rd/lua/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_ceil	skynet/3rd/lua/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	skynet/3rd/lua/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	skynet/3rd/lua/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	skynet/3rd/lua/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	skynet/3rd/lua/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	skynet/3rd/lua/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	skynet/3rd/lua/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	skynet/3rd/lua/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	skynet/3rd/lua/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	skynet/3rd/lua/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	skynet/3rd/lua/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	skynet/3rd/lua/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	skynet/3rd/lua/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	skynet/3rd/lua/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	skynet/3rd/lua/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	skynet/3rd/lua/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	skynet/3rd/lua/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	skynet/3rd/lua/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	skynet/3rd/lua/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	skynet/3rd/lua/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	skynet/3rd/lua/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	skynet/3rd/lua/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	skynet/3rd/lua/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
math_toint	skynet/3rd/lua/lmathlib.c	/^static int math_toint (lua_State *L) {$/;"	f	file:
math_type	skynet/3rd/lua/lmathlib.c	/^static int math_type (lua_State *L) {$/;"	f	file:
math_ult	skynet/3rd/lua/lmathlib.c	/^static int math_ult (lua_State *L) {$/;"	f	file:
mathlib	skynet/3rd/lua/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
matrix_from_file	skynet/lualib-src/lua-sharetable.c	/^matrix_from_file(lua_State *L) {$/;"	f	file:
max_connection	skynet/service-src/service_gate.c	/^	int max_connection;$/;"	m	struct:gate	file:
max_expand	skynet/3rd/lua/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
maxalign	skynet/3rd/lua/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:
maxmem	skynet/3rd/lua/ltests.h	/^  unsigned long maxmem;$/;"	m	struct:Memcontrol
maxn	skynet/lualib-src/sproto/sproto.c	/^	int maxn;$/;"	m	struct:sproto_type	file:
maxstacksize	skynet/3rd/lua/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto
mc_bindrefer	skynet/lualib-src/lua-multicast.c	/^mc_bindrefer(lua_State *L) {$/;"	f	file:
mc_closelocal	skynet/lualib-src/lua-multicast.c	/^mc_closelocal(lua_State *L) {$/;"	f	file:
mc_nextid	skynet/lualib-src/lua-multicast.c	/^mc_nextid(lua_State *L) {$/;"	f	file:
mc_package	skynet/lualib-src/lua-multicast.c	/^struct mc_package {$/;"	s	file:
mc_packlocal	skynet/lualib-src/lua-multicast.c	/^mc_packlocal(lua_State *L) {$/;"	f	file:
mc_packremote	skynet/lualib-src/lua-multicast.c	/^mc_packremote(lua_State *L) {$/;"	f	file:
mc_remote	skynet/lualib-src/lua-multicast.c	/^mc_remote(lua_State *L) {$/;"	f	file:
mc_unpacklocal	skynet/lualib-src/lua-multicast.c	/^mc_unpacklocal(lua_State *L) {$/;"	f	file:
md5	skynet/3rd/lua-md5/md5.c	/^void md5 (const char *message, long len, char *output) {$/;"	f
md5_h	skynet/3rd/lua-md5/md5.h	9;"	d
md5lib	skynet/3rd/lua-md5/md5lib.c	/^static struct luaL_Reg md5lib[] = {$/;"	v	typeref:struct:luaL_Reg	file:
mem	skynet/service-src/service_snlua.c	/^	size_t mem;$/;"	m	struct:snlua	file:
mem_cookie	skynet/skynet-src/malloc_hook.c	/^struct mem_cookie {$/;"	s	file:
mem_data	skynet/skynet-src/malloc_hook.c	/^struct mem_data {$/;"	s	file:
mem_limit	skynet/service-src/service_snlua.c	/^	size_t mem_limit;$/;"	m	struct:snlua	file:
mem_query	skynet/3rd/lua/ltests.c	/^static int mem_query (lua_State *L) {$/;"	f	file:
mem_report	skynet/service-src/service_snlua.c	/^	size_t mem_report;$/;"	m	struct:snlua	file:
mem_stats	skynet/skynet-src/malloc_hook.c	/^static struct mem_data mem_stats[SLOT_SIZE];$/;"	v	typeref:struct:mem_data	file:
memerrmsg	skynet/3rd/lua/lstate.h	/^  TString *memerrmsg;  \/* message for memory-allocation errors *\/$/;"	m	struct:global_State
memlimit	skynet/3rd/lua/ltests.h	/^  unsigned long memlimit;$/;"	m	struct:Memcontrol
memory	skynet/lualib-src/sproto/sproto.c	/^	struct pool memory;$/;"	m	struct:sproto	typeref:struct:sproto::pool	file:
memory_info_dump	skynet/skynet-src/malloc_hook.c	/^memory_info_dump(const char* opts) {$/;"	f
mergektable	skynet/3rd/lpeg/lptree.c	/^static void mergektable (lua_State *L, int idx, TTree *stree) {$/;"	f	file:
message	skynet/service-src/databuffer.h	/^struct message {$/;"	s
message	skynet/skynet-src/skynet_harbor.h	/^	const void * message;$/;"	m	struct:remote_message
message_count	skynet/skynet-src/skynet_server.c	/^	int message_count;$/;"	m	struct:skynet_context	file:
message_dispatch	skynet/lualib/skynet/mqueue.lua	/^local function message_dispatch(f)$/;"	f
message_drop	skynet/skynet-src/skynet_mq.h	/^typedef void (*message_drop)(struct skynet_message *, void *);$/;"	t
message_queue	skynet/skynet-src/skynet_mq.c	/^struct message_queue {$/;"	s	file:
message_to_header	skynet/service-src/service_harbor.c	/^message_to_header(const uint32_t *message, struct remote_message_header *header) {$/;"	f	file:
messagepool	skynet/service-src/databuffer.h	/^struct messagepool {$/;"	s
messagepool_free	skynet/service-src/databuffer.h	/^messagepool_free(struct messagepool *pool) {$/;"	f
messagepool_list	skynet/service-src/databuffer.h	/^struct messagepool_list {$/;"	s
meta.__newindex 	game/myservice/table_ext.lua	/^        meta.__newindex = function()$/;"	f
meta:__index	skynet/lualib/skynet/sharedata/corelib.lua	/^function meta:__index(key)$/;"	f
meta:__len	skynet/lualib/skynet/sharedata/corelib.lua	/^function meta:__len()$/;"	f
meta:__newindex	skynet/lualib/skynet/sharedata/corelib.lua	/^function meta:__newindex(key, value)$/;"	f
meta:__pairs	skynet/lualib/skynet/sharedata/corelib.lua	/^function meta:__pairs()$/;"	f
metameth	skynet/3rd/lua/liolib.c	/^static const luaL_Reg metameth[] = {$/;"	v	file:
metareg	skynet/3rd/lpeg/lptree.c	/^static struct luaL_Reg metareg[] = {$/;"	v	typeref:struct:luaL_Reg	file:
metatable	skynet/3rd/lua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
metatable	skynet/3rd/lua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table
metatable	skynet/3rd/lua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata0	typeref:struct:Udata0::Table
meth	skynet/3rd/lua/liolib.c	/^static const luaL_Reg meth[] = {$/;"	v	file:
min_expand	skynet/3rd/lua/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
mine	game/myservice/player_handler.lua	/^function mine(self)$/;"	f
mod	skynet/skynet-src/skynet_server.c	/^	struct skynet_module * mod;$/;"	m	struct:skynet_context	typeref:struct:skynet_context::skynet_module	file:
mod.create 	game/myservice/common.lua	/^    mod.create = function(...)$/;"	f
mod.ctor 	game/myservice/common.lua	/^    mod.ctor = function(self, ...)$/;"	f
mod.init 	game/myservice/common.lua	/^    mod.init = function(self, ...)$/;"	f
mod.new 	game/myservice/common.lua	/^    mod.new = function(...)$/;"	f
mode	skynet/3rd/lua/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
module	game/myservice/common.lua	/^function module(modname, ...)$/;"	f
module	skynet/skynet-src/skynet_module.h	/^	void * module;$/;"	m	struct:skynet_module
module_class	game/myservice/common.lua	/^function module_class(mod, base)$/;"	f
module_path	skynet/skynet-src/skynet_imp.h	/^	const char * module_path;$/;"	m	struct:skynet_config
modules	skynet/skynet-src/skynet_module.c	/^struct modules {$/;"	s	file:
mongo.client	skynet/lualib/skynet/db/mongo.lua	/^function mongo.client( conf	)$/;"	f
mongo_auth	skynet/lualib/skynet/db/mongo.lua	/^local function mongo_auth(mongoc)$/;"	f
mongo_client:disconnect	skynet/lualib/skynet/db/mongo.lua	/^function mongo_client:disconnect()$/;"	f
mongo_client:genId	skynet/lualib/skynet/db/mongo.lua	/^function mongo_client:genId()$/;"	f
mongo_client:getDB	skynet/lualib/skynet/db/mongo.lua	/^function mongo_client:getDB(dbname)$/;"	f
mongo_client:logout	skynet/lualib/skynet/db/mongo.lua	/^function mongo_client:logout()$/;"	f
mongo_client:runCommand	skynet/lualib/skynet/db/mongo.lua	/^function mongo_client:runCommand(...)$/;"	f
mongo_collection:aggregate	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:aggregate(pipeline, options)$/;"	f
mongo_collection:batch_insert	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:batch_insert(docs)$/;"	f
mongo_collection:batch_update	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:batch_update(updates)$/;"	f
mongo_collection:createIndex	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:createIndex(arg1 , arg2)$/;"	f
mongo_collection:createIndexes	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:createIndexes(...)$/;"	f
mongo_collection:delete	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:delete(query, single)$/;"	f
mongo_collection:drop	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:drop()$/;"	f
mongo_collection:dropIndex	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:dropIndex(indexName)$/;"	f
mongo_collection:find	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:find(query, projection)$/;"	f
mongo_collection:findAndModify	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:findAndModify(doc)$/;"	f
mongo_collection:findOne	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:findOne(query, projection)$/;"	f
mongo_collection:insert	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:insert(doc)$/;"	f
mongo_collection:raw_safe_delete	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:raw_safe_delete(delete)$/;"	f
mongo_collection:raw_safe_insert	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:raw_safe_insert(doc)$/;"	f
mongo_collection:raw_safe_update	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:raw_safe_update(update)$/;"	f
mongo_collection:safe_batch_delete	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_batch_delete(deletes, single)$/;"	f
mongo_collection:safe_batch_insert	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_batch_insert(docs)$/;"	f
mongo_collection:safe_batch_update	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_batch_update(updates)$/;"	f
mongo_collection:safe_delete	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_delete(query, single)$/;"	f
mongo_collection:safe_insert	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_insert(doc)$/;"	f
mongo_collection:safe_update	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:safe_update(query, update, upsert, multi)$/;"	f
mongo_collection:update	skynet/lualib/skynet/db/mongo.lua	/^function mongo_collection:update(query,update,upsert,multi)$/;"	f
mongo_cursor:close	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:close()$/;"	f
mongo_cursor:count	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:count(with_limit_and_skip)$/;"	f
mongo_cursor:hasNext	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:hasNext()$/;"	f
mongo_cursor:limit	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:limit(amount)$/;"	f
mongo_cursor:next	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:next()$/;"	f
mongo_cursor:skip	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:skip(amount)$/;"	f
mongo_cursor:sort	skynet/lualib/skynet/db/mongo.lua	/^function mongo_cursor:sort(key, key_v, ...)$/;"	f
mongo_db:auth	skynet/lualib/skynet/db/mongo.lua	/^function mongo_db:auth(user, pass)$/;"	f
mongo_db:getCollection	skynet/lualib/skynet/db/mongo.lua	/^function mongo_db:getCollection(collection)$/;"	f
mongo_db:runCommand	skynet/lualib/skynet/db/mongo.lua	/^function mongo_db:runCommand(cmd,cmd_v,...)$/;"	f
mongo_db:send_command	skynet/lualib/skynet/db/mongo.lua	/^function mongo_db:send_command(cmd, cmd_v, ...)$/;"	f
monitor	skynet/examples/simplemonitor.lua	/^local function monitor(session, watcher, command, service)$/;"	f
monitor	skynet/lualib/skynet/datasheet/builder.lua	/^local function monitor(pointer)$/;"	f
monitor	skynet/lualib/skynet/datasheet/init.lua	/^	local function monitor()$/;"	f
monitor	skynet/lualib/skynet/sharedata.lua	/^local function monitor(name, obj, cobj)$/;"	f
monitor	skynet/skynet-src/skynet_start.c	/^struct monitor {$/;"	s	file:
monitor_clear	skynet/service/cslave.lua	/^local function monitor_clear(id)$/;"	f
monitor_exit	skynet/skynet-src/skynet_server.c	/^	uint32_t monitor_exit;$/;"	m	struct:skynet_node	file:
monitor_harbor	skynet/service/cslave.lua	/^local function monitor_harbor(master_fd)$/;"	f
monitor_master	skynet/examples/main_log.lua	/^local function monitor_master()$/;"	f
monitor_master	skynet/service/cslave.lua	/^local function monitor_master(master_fd)$/;"	f
monitor_slave	skynet/service/cmaster.lua	/^local function monitor_slave(slave_id, slave_address)$/;"	f
mount_ply 	game/myservice/npc_t.lua	/^mount_ply = function(self, ply)$/;"	f
mount_sub_cmd 	game/myclient/player_client_t.lua	/^mount_sub_cmd = function(self, cmd)$/;"	f
move_list	skynet/skynet-src/skynet_timer.c	/^move_list(struct timer *T, int level, int idx) {$/;"	f	file:
movegotosout	skynet/3rd/lua/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveresults	skynet/3rd/lua/ldo.c	/^l_sinline void moveresults (lua_State *L, StkId res, int nres, int wanted) {$/;"	f
mp	skynet/service-src/service_gate.c	/^	struct messagepool mp;$/;"	m	struct:gate	typeref:struct:gate::messagepool	file:
mqueue.call	skynet/lualib/skynet/mqueue.lua	/^function mqueue.call(addr, ...)$/;"	f
mqueue.register	skynet/lualib/skynet/mqueue.lua	/^function mqueue.register(f)$/;"	f
mqueue.send	skynet/lualib/skynet/mqueue.lua	/^function mqueue.send(addr, ...)$/;"	f
mqueue.size	skynet/lualib/skynet/mqueue.lua	/^function mqueue.size()$/;"	f
ms	skynet/3rd/lua/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:
msg	skynet/lualib-src/lua-socket.c	/^	char * msg;$/;"	m	struct:buffer_node	file:
msg	skynet/lualib-src/lua-stm.c	/^	void * msg;$/;"	m	struct:stm_copy	file:
msg_flags_t	skynet/lualib-src/lua-mongo.c	/^} msg_flags_t;$/;"	t	typeref:enum:__anon40	file:
msghandler	skynet/3rd/lua/lua.c	/^static int msghandler (lua_State *L) {$/;"	f	file:
msvc_int_h	skynet/lualib-src/sproto/msvcint.h	2;"	d
mt	skynet/3rd/lua/lstate.h	/^  struct Table *mt[LUA_NUMTYPES];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mul_mod_p	skynet/lualib-src/lua-crypt.c	/^mul_mod_p(uint64_t a, uint64_t b) {$/;"	f	file:
mult 	skynet/3rd/lpeg/re.lua	/^local function mult (p, n)$/;"	f
multicast.new	skynet/lualib/skynet/multicast.lua	/^function multicast.new(conf)$/;"	f
multiline	skynet/3rd/lua/lua.c	/^static int multiline (lua_State *L) {$/;"	f	file:
multipat	skynet/lualib/sprotoparser.lua	/^local function multipat(pat)$/;"	f
mutex	skynet/skynet-src/skynet_start.c	/^	pthread_mutex_t mutex;$/;"	m	struct:monitor	file:
n	skynet/3rd/lpeg/lptree.h	/^    int n;  \/* occasional counter *\/$/;"	m	union:TTree::__anon4
n	skynet/3rd/lua/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
n	skynet/3rd/lua/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	skynet/3rd/lua/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon10	file:
n	skynet/3rd/lua/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value
n	skynet/3rd/lua/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon27
n	skynet/3rd/lua/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	skynet/3rd/lua/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	skynet/3rd/lua/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
n	skynet/lualib-src/lua-datasheet.c	/^	uint32_t n;$/;"	m	struct:document	file:
n	skynet/lualib-src/lua-sharedata.c	/^	lua_Number n;$/;"	m	union:value	file:
n	skynet/lualib-src/sproto/sproto.c	/^	int n;$/;"	m	struct:sproto_type	file:
n 	game/myclient/player_client_t.lua	/^    n = function(self)$/;"	f
nCcalls	skynet/3rd/lua/lstate.h	/^  l_uint32 nCcalls;  \/* number of nested (non-yieldable | C)  calls *\/$/;"	m	struct:lua_State
na	skynet/3rd/lua/lparser.c	/^  int na;  \/* number of array elements already stored *\/$/;"	m	struct:ConsControl	file:
nabslineinfo	skynet/3rd/lua/lparser.h	/^  int nabslineinfo;  \/* number of elements in 'abslineinfo' *\/$/;"	m	struct:FuncState
nactvar	skynet/3rd/lua/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
nactvar	skynet/3rd/lua/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
nactvar	skynet/3rd/lua/lparser.h	/^  lu_byte nactvar;  \/* number of active variables in that position *\/$/;"	m	struct:Labeldesc
name	skynet/3rd/lua/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	skynet/3rd/lua/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	skynet/3rd/lua/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	skynet/3rd/lua/lparser.h	/^    TString *name;  \/* variable name *\/$/;"	m	struct:Vardesc::__anon26
name	skynet/3rd/lua/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	skynet/3rd/lua/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	skynet/3rd/lua/lundump.c	/^  const char *name;$/;"	m	struct:__anon37	file:
name	skynet/lualib-src/sproto/sproto.c	/^	const char * name;$/;"	m	struct:field	file:
name	skynet/lualib-src/sproto/sproto.c	/^	const char * name;$/;"	m	struct:sproto_type	file:
name	skynet/lualib-src/sproto/sproto.c	/^	const char *name;$/;"	m	struct:protocol	file:
name	skynet/skynet-src/skynet_handle.c	/^	char * name;$/;"	m	struct:handle_name	file:
name	skynet/skynet-src/skynet_handle.c	/^	struct handle_name *name;$/;"	m	struct:handle_storage	typeref:struct:handle_storage::handle_name	file:
name	skynet/skynet-src/skynet_harbor.h	/^	char name[GLOBALNAME_LENGTH];$/;"	m	struct:remote_name
name	skynet/skynet-src/skynet_module.h	/^	const char * name;$/;"	m	struct:skynet_module
name	skynet/skynet-src/skynet_server.c	/^	const char *name;$/;"	m	struct:command_func	file:
name	skynet/skynet-src/socket_info.h	/^	char name[128];$/;"	m	struct:socket_info
name_cap	skynet/skynet-src/skynet_handle.c	/^	int name_cap;$/;"	m	struct:handle_storage	file:
name_count	skynet/skynet-src/skynet_handle.c	/^	int name_count;$/;"	m	struct:handle_storage	file:
namedpat	skynet/lualib/sprotoparser.lua	/^local function namedpat(name, pat)$/;"	f
namewhat	skynet/3rd/lua/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
nativeendian	skynet/3rd/lua/lstrlib.c	/^} nativeendian = {1};$/;"	v	typeref:union:__anon34	file:
nci	skynet/3rd/lua/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State
ncode	skynet/3rd/lpeg/lpcode.c	/^  int ncode;  \/* next position in p->code to be filled *\/$/;"	m	struct:CompileState	file:
ndebugvars	skynet/3rd/lua/lparser.h	/^  short ndebugvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
near	skynet/skynet-src/skynet_timer.c	/^	struct link_list near[TIME_NEAR];$/;"	m	struct:timer	typeref:struct:timer::link_list	file:
need_break 	game/myservice/player_t.lua	/^need_break = function(self)$/;"	f
need_deal 	game/myclient/cmd_base_t.lua	/^need_deal = function(self, fname)$/;"	f
need_deal 	game/myclient/cmd_buy_t.lua	/^need_deal = function(self, fname)$/;"	f
need_value	skynet/3rd/lua/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
needclose	skynet/3rd/lua/lparser.h	/^  lu_byte needclose;  \/* function needs to close upvalues when returning *\/$/;"	m	struct:FuncState
needfollow	skynet/3rd/lpeg/lpcode.c	/^static int needfollow (TTree *tree) {$/;"	f	file:
negatecondition	skynet/3rd/lua/lcode.c	/^static void negatecondition (FuncState *fs, expdesc *e) {$/;"	f	file:
netpack	skynet/lualib-src/lua-netpack.c	/^struct netpack {$/;"	s	file:
new_channel	skynet/lualib-src/lua-debugchannel.c	/^new_channel(lua_State *L, struct channel *c) {$/;"	f	file:
new_fd	skynet/skynet-src/socket_server.c	/^new_fd(struct socket_server *ss, int id, int fd, int protocol, uintptr_t opaque, bool reading) {$/;"	f	file:
new_localvar	skynet/3rd/lua/lparser.c	/^static int new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	skynet/3rd/lua/lparser.c	208;"	d	file:
new_queue	skynet/service-src/service_harbor.c	/^new_queue() {$/;"	f	file:
new_register_name	skynet/service/clusteragent.lua	/^local function new_register_name()$/;"	f
new_service	skynet/service/service_provider.lua	/^local function new_service(svr, name)$/;"	f
new_test	skynet/test/testtobeclosed.lua	/^local function new_test(name)$/;"	f
new_weak_table	skynet/lualib-src/lua-datasheet.c	/^new_weak_table(lua_State *L, const char *mode) {$/;"	f	file:
newbox	skynet/3rd/lua/lauxlib.c	/^static void newbox (lua_State *L) {$/;"	f	file:
newbuffsize	skynet/3rd/lua/lauxlib.c	/^static size_t newbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f	file:
newcharset	skynet/3rd/lpeg/lptree.c	/^static TTree *newcharset (lua_State *L, byte *cs) {$/;"	f	file:
newcode	skynet/3rd/lpeg/lpcode.c	/^static void newcode (lua_State *L, Pattern *p, int size) {$/;"	f	file:
newemptycap	skynet/3rd/lpeg/lptree.c	/^static TTree *newemptycap (lua_State *L, int cap, int key) {$/;"	f	file:
newemptycapkey	skynet/3rd/lpeg/lptree.c	/^static TTree *newemptycapkey (lua_State *L, int cap, int idx) {$/;"	f	file:
newfile	skynet/3rd/lua/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newgotoentry	skynet/3rd/lua/lparser.c	/^static int newgotoentry (LexState *ls, TString *name, int line, int pc) {$/;"	f	file:
newgrammar	skynet/3rd/lpeg/lptree.c	/^static TTree *newgrammar (lua_State *L, int arg) {$/;"	f	file:
newktable	skynet/3rd/lpeg/lptree.c	/^static void newktable (lua_State *L, int n) {$/;"	f	file:
newlabelentry	skynet/3rd/lua/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newleaf	skynet/3rd/lpeg/lptree.c	/^static TTree *newleaf (lua_State *L, int tag) {$/;"	f	file:
newobj	skynet/service/sharedatad.lua	/^local function newobj(name, tbl)$/;"	f
newprefile	skynet/3rd/lua/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newroot1sib	skynet/3rd/lpeg/lptree.c	/^static TTree *newroot1sib (lua_State *L, int tag) {$/;"	f	file:
newroot2sib	skynet/3rd/lpeg/lptree.c	/^static TTree *newroot2sib (lua_State *L, int tag) {$/;"	f	file:
newstate	skynet/3rd/lua/ltests.c	/^static int newstate (lua_State *L) {$/;"	f	file:
newtree	skynet/3rd/lpeg/lptree.c	/^static TTree *newtree (lua_State *L, int len) {$/;"	f	file:
newupval	skynet/3rd/lua/lfunc.c	/^static UpVal *newupval (lua_State *L, StkId level, UpVal **prev) {$/;"	f	file:
newupvalue	skynet/3rd/lua/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
newuserdata	skynet/3rd/lua/ltests.c	/^static int newuserdata (lua_State *L) {$/;"	f	file:
next	skynet/3rd/lua/llex.c	32;"	d	file:
next	skynet/3rd/lua/lobject.h	/^      struct UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon18::__anon19	typeref:struct:UpVal::__anon18::__anon19::UpVal
next	skynet/3rd/lua/lobject.h	/^    int next;  \/* for chaining *\/$/;"	m	struct:Node::NodeKey
next	skynet/3rd/lua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next	skynet/lualib-src/lua-debugchannel.c	/^	struct command * next;$/;"	m	struct:command	typeref:struct:command::command	file:
next	skynet/lualib-src/lua-netpack.c	/^	struct uncomplete * next;$/;"	m	struct:uncomplete	typeref:struct:uncomplete::uncomplete	file:
next	skynet/lualib-src/lua-seri.c	/^	struct block * next;$/;"	m	struct:block	typeref:struct:block::block	file:
next	skynet/lualib-src/lua-sharedata.c	/^	int next;	\/\/ next slot index$/;"	m	struct:node	file:
next	skynet/lualib-src/lua-socket.c	/^	struct buffer_node *next;$/;"	m	struct:buffer_node	typeref:struct:buffer_node::buffer_node	file:
next	skynet/lualib-src/sproto/sproto.c	/^	struct chunk * next;$/;"	m	struct:chunk	typeref:struct:chunk::chunk	file:
next	skynet/service-src/databuffer.h	/^	struct message * next;$/;"	m	struct:message	typeref:struct:message::message
next	skynet/service-src/databuffer.h	/^	struct messagepool_list *next;$/;"	m	struct:messagepool_list	typeref:struct:messagepool_list::messagepool_list
next	skynet/service-src/hashid.h	/^	struct hashid_node *next;$/;"	m	struct:hashid_node	typeref:struct:hashid_node::hashid_node
next	skynet/service-src/service_harbor.c	/^	struct keyvalue * next;$/;"	m	struct:keyvalue	typeref:struct:keyvalue::keyvalue	file:
next	skynet/skynet-src/skynet_mq.c	/^	struct message_queue *next;$/;"	m	struct:message_queue	typeref:struct:message_queue::message_queue	file:
next	skynet/skynet-src/skynet_timer.c	/^	struct timer_node *next;$/;"	m	struct:timer_node	typeref:struct:timer_node::timer_node	file:
next	skynet/skynet-src/socket_info.h	/^	struct socket_info *next;$/;"	m	struct:socket_info	typeref:struct:socket_info::socket_info
next	skynet/skynet-src/socket_server.c	/^	struct write_buffer * next;$/;"	m	struct:write_buffer	typeref:struct:write_buffer::write_buffer	file:
next_ci	skynet/3rd/lua/ldo.c	499;"	d	file:
next_list	skynet/lualib-src/sproto/lsproto.c	/^next_list(lua_State *L, struct encode_ud * self) {$/;"	f	file:
nextc	skynet/3rd/lua/liolib.c	/^static int nextc (RN *rn) {$/;"	f	file:
nextcap	skynet/3rd/lpeg/lpcap.c	/^static void nextcap (CapState *cs) {$/;"	f	file:
nextinstruction	skynet/3rd/lpeg/lpcode.c	/^static int nextinstruction (CompileState *compst, int n) {$/;"	f	file:
nextline	skynet/3rd/lua/ldebug.c	/^static int nextline (const Proto *p, int currentline, int pc) {$/;"	f	file:
nextraargs	skynet/3rd/lua/lstate.h	/^      int nextraargs;  \/* # of extra arguments in vararg functions *\/$/;"	m	struct:CallInfo::__anon28::__anon29
nextrand	skynet/3rd/lua/lmathlib.c	/^static Rand64 nextrand (Rand64 *state) {$/;"	f	file:
nh	skynet/3rd/lua/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	skynet/3rd/lua/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nilvalue	skynet/3rd/lua/lstate.h	/^  TValue nilvalue;  \/* a nil value *\/$/;"	m	struct:global_State
nk	skynet/3rd/lua/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState
noLuaClosure	skynet/3rd/lua/ldebug.c	34;"	d	file:
nocolliding	skynet/lualib-src/lua-sharedata.c	/^	uint8_t nocolliding;	\/\/ 0 means colliding slot$/;"	m	struct:node	file:
node	skynet/3rd/lua/lobject.h	/^  Node *node;$/;"	m	struct:Table
node	skynet/lualib-src/lua-sharedata.c	/^struct node {$/;"	s	file:
node	skynet/service-src/service_harbor.c	/^	struct keyvalue *node[HASH_SIZE];$/;"	m	struct:hashmap	typeref:struct:hashmap::keyvalue	file:
nodefromval	skynet/3rd/lua/ltable.h	35;"	d
nodename	skynet/lualib/skynet/db/redis/cluster.lua	/^local function nodename(node)$/;"	f
noenv	skynet/3rd/lua/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
nofail	skynet/3rd/lpeg/lpcode.h	26;"	d
nomore_sending_data	skynet/skynet-src/socket_server.c	/^nomore_sending_data(struct socket *s) {$/;"	f	file:
nospecials	skynet/3rd/lua/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
notice_start_sell	game/myservice/player_handler.lua	/^function notice_start_sell(self, info)$/;"	f
notm	skynet/3rd/lua/ltm.h	62;"	d
novariant	skynet/3rd/lua/lobject.h	80;"	d
np	skynet/3rd/lua/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState
nparams	skynet/3rd/lua/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
npc_print 	game/myclient/player_client_t.lua	/^npc_print = function(self, msg)$/;"	f
nres	skynet/3rd/lua/lstate.h	/^    int nres;  \/* number of values returned *\/$/;"	m	union:CallInfo::__anon31
nresults	skynet/3rd/lua/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	skynet/3rd/lua/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
ntransfer	skynet/3rd/lua/lstate.h	/^      unsigned short ntransfer;  \/* number of values transferred *\/$/;"	m	struct:CallInfo::__anon31::__anon32
ntransfer	skynet/3rd/lua/lua.h	/^  unsigned short ntransfer;   \/* (r) number of transferred values *\/$/;"	m	struct:lua_Debug
nullable	skynet/3rd/lpeg/lpcode.h	32;"	d
num2int	skynet/3rd/lua/ltests.c	/^static int num2int (lua_State *L) {$/;"	f	file:
num2straux	skynet/3rd/lua/lstrlib.c	/^static int num2straux (char *buff, int sz, lua_Number x) {$/;"	f	file:
numarith	skynet/3rd/lua/lobject.c	/^static lua_Number numarith (lua_State *L, int op, lua_Number v1,$/;"	f	file:
number	skynet/lualib-src/lua-mongo.c	/^	int number;$/;"	m	struct:response	file:
number 	skynet/lualib/skynet/db/mysql.lua	/^    number = function(v)$/;"	f
number_address	skynet/lualib/skynet/manager.lua	/^local function number_address(name)$/;"	f
numblocks	skynet/3rd/lua/ltests.h	/^  unsigned long numblocks;$/;"	m	struct:Memcontrol
numcap	skynet/3rd/lpeg/lpcap.c	/^static int numcap (CapState *cs) {$/;"	f	file:
numparams	skynet/3rd/lua/lobject.h	/^  lu_byte numparams;  \/* number of fixed (named) parameters *\/$/;"	m	struct:Proto
numsiblings	skynet/3rd/lpeg/lptree.c	/^const byte numsiblings[] = {$/;"	v
numtree	skynet/3rd/lpeg/lptree.c	/^static TTree *numtree (lua_State *L, int n) {$/;"	f	file:
numusearray	skynet/3rd/lua/ltable.c	/^static unsigned int numusearray (const Table *t, unsigned int *nums) {$/;"	f	file:
numusehash	skynet/3rd/lua/ltable.c	/^static int numusehash (const Table *t, unsigned int *nums, unsigned int *pna) {$/;"	f	file:
nups	skynet/3rd/lua/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	skynet/3rd/lua/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	skynet/3rd/lua/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nuvalue	skynet/3rd/lua/lobject.h	/^  unsigned short nuvalue;  \/* number of user values *\/$/;"	m	struct:Udata
nuvalue	skynet/3rd/lua/lobject.h	/^  unsigned short nuvalue;  \/* number of user values *\/$/;"	m	struct:Udata0
nval	skynet/3rd/lua/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon23
nvalue	skynet/3rd/lua/lobject.h	330;"	d
nw2black	skynet/3rd/lua/lgc.h	99;"	d
nyci	skynet/3rd/lua/lstate.h	117;"	d
nyield	skynet/3rd/lua/lstate.h	/^    int nyield;  \/* number of values yielded *\/$/;"	m	union:CallInfo::__anon31
obj	skynet/lualib-src/lua-stm.c	/^	struct stm_object * obj;$/;"	m	struct:boxstm	typeref:struct:boxstm::stm_object	file:
obj	skynet/lualib-src/lua-stm.c	/^	struct stm_object *obj;$/;"	m	struct:boxreader	typeref:struct:boxreader::stm_object	file:
obj2gco	skynet/3rd/lua/lstate.h	389;"	d
obj_at	skynet/3rd/lua/ltests.c	47;"	d	file:
objcount	skynet/3rd/lua/ltests.h	/^  unsigned long objcount[LUA_NUMTYPES];$/;"	m	struct:Memcontrol
ocap	skynet/3rd/lpeg/lpcap.h	/^  Capture *ocap;  \/* (original) capture list *\/$/;"	m	struct:CapState
offset	skynet/3rd/lpeg/lpcset.h	/^  int offset;$/;"	m	struct:__anon3
offset	skynet/3rd/lpeg/lptree.h	/^      byte offset;  \/* compact set offset (in bytes) *\/$/;"	m	struct:TTree::__anon4::__anon5
offset	skynet/3rd/lpeg/lpvm.h	/^        byte offset;$/;"	m	struct:Instruction::Inst::__anon6::__anon7
offset	skynet/3rd/lpeg/lpvm.h	/^  int offset;$/;"	m	union:Instruction
offset	skynet/3rd/lua/lobject.h	/^    ptrdiff_t offset;  \/* used while the stack is being reallocated *\/$/;"	m	union:UpVal::__anon17
offset	skynet/3rd/lua/lobject.h	/^  ptrdiff_t offset;  \/* used while the stack is being reallocated *\/$/;"	m	union:__anon14
offset	skynet/lualib-src/lua-socket.c	/^	int offset;$/;"	m	struct:socket_buffer	file:
offset	skynet/service-src/databuffer.h	/^	int offset;$/;"	m	struct:databuffer
oid_counter	skynet/lualib-src/lua-bson.c	/^static ATOM_ULONG oid_counter;$/;"	v	file:
oid_header	skynet/lualib-src/lua-bson.c	/^static uint8_t oid_header[5];$/;"	v	file:
old1	skynet/3rd/lua/lstate.h	/^  GCObject *old1;  \/* start of old1 objects *\/$/;"	m	struct:global_State
old_errfunc	skynet/3rd/lua/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon28::__anon30
oldpc	skynet/3rd/lua/lstate.h	/^  int oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
on_begin 	game/myclient/cmd_base_t.lua	/^on_begin = function(self, ply)$/;"	f
on_begin 	game/myclient/cmd_buy_t.lua	/^on_begin = function(self, ply)$/;"	f
on_begin 	game/myservice/player_t.lua	/^        on_begin = function(self)$/;"	f
on_connect	skynet/test/testmysql.lua	/^	local function on_connect(db)$/;"	f
on_keep_alive 	game/myservice/player_t.lua	/^on_keep_alive = function(self)$/;"	f
on_login 	game/myservice/player_t.lua	/^on_login = function(self)$/;"	f
on_logout 	game/myservice/player_t.lua	/^on_logout = function(self)$/;"	f
on_over 	game/myservice/player_t.lua	/^        on_over = function(self)$/;"	f
on_readstdin 	game/myclient/cmd_base_t.lua	/^on_readstdin = function(self, ply, input)$/;"	f
on_readstdin 	game/myclient/cmd_buy_t.lua	/^on_readstdin = function(self, ply, input)$/;"	f
on_readstdin 	game/myclient/player_client_t.lua	/^on_readstdin = function(self, input)$/;"	f
on_recv_package	game/myclient/client.lua	/^local function on_recv_package(t, ...)$/;"	f
on_request 	game/myclient/player_client_t.lua	/^on_request = function(self, fname, args)$/;"	f
on_response 	game/myclient/cmd_base_t.lua	/^on_response = function(self, fname)$/;"	f
on_response 	game/myclient/cmd_buy_t.lua	/^on_response = function(self, ply, fname, args)$/;"	f
on_response 	game/myclient/player_client_t.lua	/^on_response = function(self, session, args)$/;"	f
on_running 	game/myservice/player_t.lua	/^        on_running = function(self)$/;"	f
on_talk 	game/myservice/npc_mine_t.lua	/^on_talk = function(self, msg)$/;"	f
on_talk 	game/myservice/npc_mingwu_t.lua	/^on_talk = function(self, msg)$/;"	f
on_talk 	game/myservice/npc_t.lua	/^on_talk = function(self, msg)$/;"	f
on_talk 	game/myservice/npc_tiewan_t.lua	/^on_talk = function(self, msg)$/;"	f
on_talk 	game/myservice/npc_wuying_t.lua	/^on_talk = function(self, msg)$/;"	f
onlybit	skynet/3rd/lpeg/lpcset.c	/^static int onlybit (int c, int b) {$/;"	f	file:
onmessage	skynet/test/testrediscluster.lua	/^local function onmessage(data,channel,pchannel)$/;"	f
op-add	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-add"><\/a><code>patt1 + patt2<\/code><\/h3>$/;"	a
op-behind	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-behind"><\/a><code>lpeg.B(patt)<\/code><\/h3>$/;"	a
op-len	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-len"><\/a><code>#patt<\/code><\/h3>$/;"	a
op-locale	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-locale"><\/a><code>lpeg.locale ([table])<\/code><\/h3>$/;"	a
op-mul	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-mul"><\/a><code>patt1 * patt2<\/code><\/h3>$/;"	a
op-p	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-p"><\/a><code>lpeg.P (value)<\/code><\/h3>$/;"	a
op-pow	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-pow"><\/a><code>patt^n<\/code><\/h3>$/;"	a
op-r	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-r"><\/a><code>lpeg.R ({range})<\/code><\/h3>$/;"	a
op-s	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-s"><\/a><code>lpeg.S (string)<\/code><\/h3>$/;"	a
op-sub	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-sub"><\/a><code>patt1 - patt2<\/code><\/h3>$/;"	a
op-unm	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-unm"><\/a><code>-patt<\/code><\/h3>$/;"	a
op-utfR	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-utfR"><\/a><code>lpeg.utfR (cp1, cp2)<\/code><\/h3>$/;"	a
op-v	skynet/3rd/lpeg/lpeg.html	/^<h3><a name="op-v"><\/a><code>lpeg.V (v)<\/code><\/h3>$/;"	a
op_arith	skynet/3rd/lua/lvm.c	963;"	d	file:
op_arithI	skynet/3rd/lua/lvm.c	902;"	d	file:
op_arithK	skynet/3rd/lua/lvm.c	972;"	d	file:
op_arith_aux	skynet/3rd/lua/lvm.c	951;"	d	file:
op_arithf	skynet/3rd/lua/lvm.c	931;"	d	file:
op_arithfK	skynet/3rd/lua/lvm.c	941;"	d	file:
op_arithf_aux	skynet/3rd/lua/lvm.c	921;"	d	file:
op_bitwise	skynet/3rd/lua/lvm.c	995;"	d	file:
op_bitwiseK	skynet/3rd/lua/lvm.c	981;"	d	file:
op_msg	skynet/lualib-src/lua-mongo.c	/^op_msg(lua_State *L) {$/;"	f	file:
op_order	skynet/3rd/lua/lvm.c	1010;"	d	file:
op_orderI	skynet/3rd/lua/lvm.c	1030;"	d	file:
opaque	skynet/skynet-src/socket_info.h	/^	uint64_t opaque;$/;"	m	struct:socket_info
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_bind	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_close	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_listen	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_open	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_resumepause	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:request_udp	file:
opaque	skynet/skynet-src/socket_server.c	/^	uintptr_t opaque;$/;"	m	struct:socket	file:
opaque	skynet/skynet-src/socket_server.h	/^	uintptr_t opaque;$/;"	m	struct:socket_message
opcode	skynet/lualib-src/lua-mongo.c	/^	int32_t opcode;			\/\/ message type$/;"	m	struct:header_t	file:
open	skynet/3rd/lua/lobject.h	/^    } open;$/;"	m	union:UpVal::__anon18	typeref:struct:UpVal::__anon18::__anon19
open	skynet/skynet-src/socket_server.c	/^		struct request_open open;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_open	file:
open_channel	skynet/service/clusterd.lua	/^local function open_channel(t, key)$/;"	f
open_func	skynet/3rd/lua/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
open_request	skynet/skynet-src/socket_server.c	/^open_request(struct socket_server *ss, struct request_package *req, uintptr_t opaque, const char *addr, int port) {$/;"	f	file:
open_socket	skynet/skynet-src/socket_server.c	/^open_socket(struct socket_server *ss, struct request_open * request, struct socket_message *result) {$/;"	f	file:
open_sym	skynet/skynet-src/skynet_module.c	/^open_sym(struct skynet_module *mod) {$/;"	f	file:
opencheck	skynet/3rd/lua/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	skynet/3rd/lua/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
opmode	skynet/3rd/lua/lopcodes.h	398;"	d
opnames	skynet/3rd/lua/lopnames.h	/^static const char *const opnames[] = {$/;"	v
ops	skynet/3rd/lua/ltests.c	/^static const char ops[] = "+-*%^\/\\\\&|~<>_!";$/;"	v	file:
optboolean	skynet/skynet-src/skynet_main.c	/^optboolean(const char *key, int opt) {$/;"	f	file:
optint	skynet/skynet-src/skynet_main.c	/^optint(const char *key, int opt) {$/;"	f	file:
optstring	skynet/service-src/service_snlua.c	/^optstring(struct skynet_context *ctx, const char *key, const char * str) {$/;"	f	file:
optstring	skynet/skynet-src/skynet_main.c	/^optstring(const char *key,const char * opt) {$/;"	f	file:
os	skynet/.ycm_extra_conf.py	/^import os$/;"	i
os_clock	skynet/3rd/lua/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	skynet/3rd/lua/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	skynet/3rd/lua/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	skynet/3rd/lua/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	skynet/3rd/lua/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	skynet/3rd/lua/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	skynet/3rd/lua/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	skynet/3rd/lua/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	skynet/3rd/lua/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	skynet/3rd/lua/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	skynet/3rd/lua/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
otherwhite	skynet/3rd/lua/lgc.h	94;"	d
out_bio	skynet/lualib-src/ltls.c	/^    BIO* out_bio;$/;"	m	struct:tls_context	file:
output	skynet/3rd/lua/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
overload	skynet/skynet-src/skynet_mq.c	/^	int overload;$/;"	m	struct:message_queue	file:
overload_threshold	skynet/skynet-src/skynet_mq.c	/^	int overload_threshold;$/;"	m	struct:message_queue	file:
overload_trigger	skynet/lualib/skynet/socketchannel.lua	/^			local function overload_trigger(id, size)$/;"	f
p	skynet/3rd/lpeg/lpcode.c	/^  Pattern *p;  \/* pattern being compiled *\/$/;"	m	struct:CompileState	file:
p	skynet/3rd/lpeg/lpvm.c	/^  const Instruction *p;  \/* next instruction *\/$/;"	m	struct:Stack	file:
p	skynet/3rd/lua/lobject.h	/^    TValue *p;  \/* points to stack or to its own value *\/$/;"	m	union:UpVal::__anon17
p	skynet/3rd/lua/lobject.h	/^  StkId p;  \/* actual pointer *\/$/;"	m	union:__anon14
p	skynet/3rd/lua/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	skynet/3rd/lua/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	skynet/3rd/lua/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	skynet/3rd/lua/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto
p	skynet/3rd/lua/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:
p	skynet/3rd/lua/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p	skynet/lualib-src/sproto/sproto.c	/^	struct sproto_type * p[2];$/;"	m	struct:protocol	typeref:struct:protocol::sproto_type	file:
p	skynet/skynet-src/socket_server.c	/^	} p;$/;"	m	struct:socket	typeref:union:socket::__anon41	file:
p 	skynet/3rd/lpeg/test.lua	/^p = (m.P(function () return true, "a" end) * 'a'$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = (m.P(function (s, i) return i%2 == 0 and i end) * 1$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = function (s1, i) assert(s == s1); t[#t + 1] = i; return i end$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = function (s1, i) return m.match(m.P"a"^1, s1, i) end$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = m.Cg(m.P(true)\/function () end * 1)   -- no value$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = m.Cmt(0, function (s) p = s end) * m.P(false)$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = m.P'a' * (function (s, i) return (s:sub(i, i) == 'b') and i + 1 end)$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = m.P(function (s1, i) assert(s == s1); t[#t + 1] = i; return nil end) * false$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = m.P(function (s1, i) assert(s == s1); t[#t + 1] = i;$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = mt.__add(function (s, i) return i end, function (s, i) return nil end)$/;"	f
p 	skynet/3rd/lpeg/test.lua	/^p = mt.__mul(function (s, i) return i end, function (s, i) return nil end)$/;"	f
p.dispatch 	skynet/lualib/skynet/remotedebug.lua	/^			p.dispatch = dispatch	-- restore origin dispatch function$/;"	f
p.dispatch 	skynet/lualib/skynet/remotedebug.lua	/^	p.dispatch = function(...)$/;"	f
p_end	skynet/3rd/lua/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
pack	skynet/lualib-src/lua-multicast.c	/^pack(lua_State *L, void *data, size_t size) {$/;"	f	file:
pack	skynet/lualib-src/lua-netpack.c	/^	struct netpack pack;$/;"	m	struct:uncomplete	typeref:struct:uncomplete::netpack	file:
pack 	skynet/service/cdummy.lua	/^	pack = function(...) return ... end,$/;"	f
pack 	skynet/service/cslave.lua	/^	pack = function(...) return ... end,$/;"	f
packI	skynet/3rd/lua/lmathlib.c	/^static Rand64 packI (lu_int32 h, lu_int32 l) {$/;"	f	file:
pack_array	skynet/lualib-src/lua-bson.c	/^pack_array(lua_State *L, struct bson *b, int depth, size_t len) {$/;"	f	file:
pack_dict_data	skynet/lualib-src/lua-bson.c	/^pack_dict_data(lua_State *L, struct bson *b, int depth, int kt) {$/;"	f	file:
pack_from	skynet/lualib-src/lua-seri.c	/^pack_from(lua_State *L, struct write_block *b, int from) {$/;"	f	file:
pack_header	skynet/lualib/skynet/dns.lua	/^local function pack_header(t)$/;"	f
pack_meta_dict	skynet/lualib-src/lua-bson.c	/^pack_meta_dict(lua_State *L, struct bson *b, int depth) {$/;"	f	file:
pack_one	skynet/lualib-src/lua-seri.c	/^pack_one(lua_State *L, struct write_block *b, int index, int depth) {$/;"	f	file:
pack_ordered_dict	skynet/lualib-src/lua-bson.c	/^pack_ordered_dict(lua_State *L, struct bson *b, int n, int depth) {$/;"	f	file:
pack_package	skynet/service/cmaster.lua	/^local function pack_package(...)$/;"	f
pack_package	skynet/service/cslave.lua	/^local function pack_package(...)$/;"	f
pack_question	skynet/lualib/skynet/dns.lua	/^local function pack_question(name, qtype, qclass)$/;"	f
pack_seg	skynet/lualib-src/sproto/sproto.c	/^pack_seg(const uint8_t *src, uint8_t * buffer, int sz, int n) {$/;"	f	file:
pack_simple_dict	skynet/lualib-src/lua-bson.c	/^pack_simple_dict(lua_State *L, struct bson *b, int depth) {$/;"	f	file:
package.seeall	game/myservice/common.lua	/^function package.seeall(modul)$/;"	f
packbytes	skynet/lualib/sprotoparser.lua	/^	function packbytes(str)$/;"	f
packfield	skynet/lualib/sprotoparser.lua	/^local function packfield(f)$/;"	f
packgroup	skynet/lualib/sprotoparser.lua	/^local function packgroup(t,p)$/;"	f
packint	skynet/3rd/lua/lstrlib.c	/^static void packint (luaL_Buffer *b, lua_Unsigned n,$/;"	f	file:
packproto	skynet/lualib/sprotoparser.lua	/^local function packproto(name, p, alltypes)$/;"	f
packreq_multi	skynet/lualib-src/lua-cluster.c	/^packreq_multi(lua_State *L, int session, void * msg, uint32_t sz) {$/;"	f	file:
packreq_number	skynet/lualib-src/lua-cluster.c	/^packreq_number(lua_State *L, int session, void * msg, uint32_t sz, int is_push) {$/;"	f	file:
packreq_string	skynet/lualib-src/lua-cluster.c	/^packreq_string(lua_State *L, int session, void * msg, uint32_t sz, int is_push) {$/;"	f	file:
packrequest	skynet/lualib-src/lua-cluster.c	/^packrequest(lua_State *L, int is_push) {$/;"	f	file:
packtype	skynet/lualib/sprotoparser.lua	/^local function packtype(name, t, alltypes)$/;"	f
packvalue	skynet/lualib/sprotoparser.lua	/^	function packvalue(id)$/;"	f
padding_add	skynet/lualib-src/lua-crypt.c	/^typedef void (*padding_add)(uint8_t buf[8], int offset);$/;"	t	file:
padding_add_func	skynet/lualib-src/lua-crypt.c	/^static padding_add padding_add_func[] = {$/;"	v	file:
padding_add_iso7816_4	skynet/lualib-src/lua-crypt.c	/^padding_add_iso7816_4(uint8_t buf[8], int offset) {$/;"	f	file:
padding_add_pkcs7	skynet/lualib-src/lua-crypt.c	/^padding_add_pkcs7(uint8_t buf[8], int offset) {$/;"	f	file:
padding_mode_table	skynet/lualib-src/lua-crypt.c	/^padding_mode_table(lua_State *L) {$/;"	f	file:
padding_remove	skynet/lualib-src/lua-crypt.c	/^typedef int (*padding_remove)(const uint8_t *last);$/;"	t	file:
padding_remove_func	skynet/lualib-src/lua-crypt.c	/^static padding_remove padding_remove_func[] = {$/;"	v	file:
padding_remove_iso7816_4	skynet/lualib-src/lua-crypt.c	/^padding_remove_iso7816_4(const uint8_t *last) {$/;"	f	file:
padding_remove_pkcs7	skynet/lualib-src/lua-crypt.c	/^padding_remove_pkcs7(const uint8_t *last) {$/;"	f	file:
pairscont	skynet/3rd/lua/lbaselib.c	/^static int pairscont (lua_State *L, int status, lua_KContext k) {$/;"	f	file:
panic	skynet/3rd/lua/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	skynet/3rd/lua/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
panicback	skynet/3rd/lua/ltests.c	/^static int panicback (lua_State *L) {$/;"	f	file:
paniccode	skynet/3rd/lua/ltests.c	/^struct Aux { jmp_buf jb; const char *paniccode; lua_State *L; };$/;"	m	struct:Aux	file:
parlist	skynet/3rd/lua/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse_hosts	skynet/lualib/skynet/dns.lua	/^local function parse_hosts()$/;"	f
parse_resolv_conf	skynet/lualib/skynet/dns.lua	/^local function parse_resolv_conf()$/;"	f
parser	skynet/lualib/sprotoparser.lua	/^local function parser(text,filename)$/;"	f
partition	skynet/3rd/lua/ltablib.c	/^static IdxT partition (lua_State *L, IdxT lo, IdxT up) {$/;"	f	file:
patch_func	skynet/lualib/snax/hotfix.lua	/^local function patch_func(funcs, global, group, name, f)$/;"	f
patchlistaux	skynet/3rd/lua/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	skynet/3rd/lua/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	skynet/skynet-src/skynet_module.c	/^	const char * path;$/;"	m	struct:modules	file:
patt_error 	skynet/3rd/lpeg/re.lua	/^local function patt_error (s, i)$/;"	f
pattreg	skynet/3rd/lpeg/lptree.c	/^static struct luaL_Reg pattreg[] = {$/;"	v	typeref:struct:luaL_Reg	file:
pause_socket	skynet/lualib/skynet/socket.lua	/^local function pause_socket(s, size)$/;"	f
pause_socket	skynet/skynet-src/socket_server.c	/^pause_socket(struct socket_server *ss, struct request_resumepause *request, struct socket_message *result) {$/;"	f	file:
pc	skynet/3rd/lua/lobject.h	/^  int pc;$/;"	m	struct:AbsLineInfo
pc	skynet/3rd/lua/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState
pc	skynet/3rd/lua/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pcRel	skynet/3rd/lua/ldebug.h	14;"	d
pconv	skynet/lualib-src/lua-sharedata.c	/^pconv(lua_State *L) {$/;"	f	file:
peephole	skynet/3rd/lpeg/lpcode.c	/^static void peephole (CompileState *compst) {$/;"	f	file:
pidx	skynet/3rd/lua/lparser.h	/^    short pidx;  \/* index of the variable in the Proto's 'locvars' array *\/$/;"	m	struct:Vardesc::__anon26
pk_funcs	skynet/3rd/lua/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
plock	skynet/3rd/lua/ltests.h	/^struct L_EXTRA { int lock; int *plock; };$/;"	m	struct:L_EXTRA
pmain	skynet/3rd/lua/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	skynet/3rd/lua/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
point2uint	skynet/3rd/lua/llimits.h	91;"	d
poll_fd	skynet/skynet-src/socket_poll.h	/^typedef int poll_fd;$/;"	t
poll_socket_epoll_h	skynet/skynet-src/socket_epoll.h	2;"	d
poll_socket_kqueue_h	skynet/skynet-src/socket_kqueue.h	2;"	d
pool	skynet/lualib-src/sproto/sproto.c	/^struct pool {$/;"	s	file:
pool	skynet/service-src/databuffer.h	/^	struct message pool[MESSAGEPOOL];$/;"	m	struct:messagepool_list	typeref:struct:messagepool_list::message
pool	skynet/service-src/databuffer.h	/^	struct messagepool_list * pool;$/;"	m	struct:messagepool	typeref:struct:messagepool::messagepool_list
pool_alloc	skynet/lualib-src/sproto/sproto.c	/^pool_alloc(struct pool *p, size_t sz) {$/;"	f	file:
pool_init	skynet/lualib-src/sproto/sproto.c	/^pool_init(struct pool *p) {$/;"	f	file:
pool_newchunk	skynet/lualib-src/sproto/sproto.c	/^pool_newchunk(struct pool *p, size_t sz) {$/;"	f	file:
pool_release	skynet/lualib-src/sproto/sproto.c	/^pool_release(struct pool *p) {$/;"	f	file:
pop_lstring	skynet/lualib-src/lua-socket.c	/^pop_lstring(lua_State *L, struct socket_buffer *sb, int sz, int skip) {$/;"	f	file:
pop_queue	skynet/service-src/service_harbor.c	/^pop_queue(struct harbor_msg_queue * queue) {$/;"	f	file:
pop_response	skynet/lualib/skynet/socketchannel.lua	/^local function pop_response(self)$/;"	f
poptbclist	skynet/3rd/lua/lfunc.c	/^static void poptbclist (lua_State *L) {$/;"	f	file:
port	skynet/skynet-src/socket_server.c	/^	int port;$/;"	m	struct:request_open	file:
posrelatI	skynet/3rd/lua/lstrlib.c	/^static size_t posrelatI (lua_Integer pos, size_t len) {$/;"	f	file:
pow_mod_p	skynet/lualib-src/lua-crypt.c	/^pow_mod_p(uint64_t a, uint64_t b) {$/;"	f	file:
powmodp	skynet/lualib-src/lua-crypt.c	/^powmodp(uint64_t a, uint64_t b) {$/;"	f	file:
precallC	skynet/3rd/lua/ldo.c	/^l_sinline int precallC (lua_State *L, StkId func, int nresults,$/;"	f
precover	skynet/3rd/lua/ldo.c	/^static int precover (lua_State *L, int status) {$/;"	f	file:
preinit_thread	skynet/3rd/lua/lstate.c	/^static void preinit_thread (lua_State *L, global_State *g) {$/;"	f	file:
prepCallInfo	skynet/3rd/lua/ldo.c	/^l_sinline CallInfo *prepCallInfo (lua_State *L, StkId func, int nret,$/;"	f
prepare 	game/myservice/npc_t.lua	/^prepare = function(self, name, role)$/;"	f
prepare_match	skynet/lualib/skynet/sharetable.lua	/^    local function prepare_match()$/;"	f
prepare_npc 	game/myservice/player_t.lua	/^prepare_npc = function(self, name)$/;"	f
prepbuffsize	skynet/3rd/lua/lauxlib.c	/^static char *prepbuffsize (luaL_Buffer *B, size_t sz, int boxidx) {$/;"	f	file:
prepcallclosemth	skynet/3rd/lua/lfunc.c	/^static void prepcallclosemth (lua_State *L, StkId level, int status, int yy) {$/;"	f	file:
prepcompile	skynet/3rd/lpeg/lptree.c	/^static Instruction *prepcompile (lua_State *L, Pattern *p, int idx) {$/;"	f	file:
prepstate	skynet/3rd/lua/lstrlib.c	/^static void prepstate (MatchState *ms, lua_State *L,$/;"	f	file:
preread	skynet/lualib/http/sockethelper.lua	/^local function preread(fd, str)$/;"	f
prev	skynet/3rd/lua/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	skynet/3rd/lua/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
previous	skynet/3rd/lua/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	skynet/3rd/lua/lobject.h	/^      struct UpVal **previous;$/;"	m	struct:UpVal::__anon18::__anon19	typeref:struct:UpVal::__anon18::__anon19::UpVal
previous	skynet/3rd/lua/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous	skynet/3rd/lua/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
previousinstruction	skynet/3rd/lua/lcode.c	/^static Instruction *previousinstruction (FuncState *fs) {$/;"	f	file:
previousline	skynet/3rd/lua/lparser.h	/^  int previousline;  \/* last line that was saved in 'lineinfo' *\/$/;"	m	struct:FuncState
primaryexp	skynet/3rd/lua/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print	skynet/lualib/skynet/inject.lua	/^	local function print(...)$/;"	f
print	skynet/service/debug_console.lua	/^		local function print(...)$/;"	f
printIcharset	skynet/3rd/lpeg/lpprint.c	/^static void printIcharset (const Instruction *inst, const byte *buff) {$/;"	f	file:
printTcharset	skynet/3rd/lpeg/lpprint.c	/^static void printTcharset (TTree *tree) {$/;"	f	file:
print_msg	game/myclient/client.lua	/^local function print_msg(args)$/;"	f
print_package	skynet/examples/client.lua	/^local function print_package(t, ...)$/;"	f
print_request	skynet/examples/client.lua	/^local function print_request(name, args)$/;"	f
print_response	skynet/examples/client.lua	/^local function print_response(session, args)$/;"	f
print_usage	skynet/3rd/lua/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	skynet/3rd/lua/lua.c	/^static void print_version (void) {$/;"	f	file:
printcap	skynet/3rd/lpeg/lpprint.c	/^static void printcap (Capture *cap, int ident) {$/;"	f	file:
printcap2close	skynet/3rd/lpeg/lpprint.c	/^static Capture *printcap2close (Capture *cap, int ident) {$/;"	f	file:
printcaplist	skynet/3rd/lpeg/lpprint.c	/^void printcaplist (Capture *cap) {$/;"	f
printcharset	skynet/3rd/lpeg/lpprint.c	/^void printcharset (const byte *st) {$/;"	f
printcode	skynet/3rd/lua/ltests.c	/^static int printcode (lua_State *L) {$/;"	f	file:
printf	game/myservice/tool.lua	/^function printf(format, ...)$/;"	f
printinst	skynet/3rd/lpeg/lpprint.c	/^void printinst (const Instruction *op, const Instruction *p) {$/;"	f
printjmp	skynet/3rd/lpeg/lpprint.c	/^static void printjmp (const Instruction *op, const Instruction *p) {$/;"	f	file:
printktable	skynet/3rd/lpeg/lpprint.c	/^void printktable (lua_State *L, int idx) {$/;"	f
printktable	skynet/3rd/lpeg/lpprint.h	21;"	d
printobj	skynet/3rd/lua/ltests.c	/^static void printobj (global_State *g, GCObject *o) {$/;"	f	file:
printpatt	skynet/3rd/lpeg/lpprint.c	/^void printpatt (Instruction *p) {$/;"	f
printpatt	skynet/3rd/lpeg/lpprint.h	25;"	d
printstack	skynet/3rd/lua/ltests.c	/^static void printstack (lua_State *L) {$/;"	f	file:
printtree	skynet/3rd/lpeg/lpprint.c	/^void printtree (TTree *tree, int ident) {$/;"	f
printtree	skynet/3rd/lpeg/lpprint.h	23;"	d
priority	skynet/3rd/lua/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon21	file:
produce 	game/myservice/npc_mine_t.lua	/^produce = function(self)$/;"	f
profile	skynet/skynet-src/skynet_imp.h	/^	int profile;$/;"	m	struct:skynet_config
profile	skynet/skynet-src/skynet_server.c	/^	bool profile;	\/\/ default is on$/;"	m	struct:skynet_node	file:
profile	skynet/skynet-src/skynet_server.c	/^	bool profile;$/;"	m	struct:skynet_context	file:
progname	skynet/3rd/lua/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	skynet/3rd/lua/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
project	skynet/3rd/lua/lmathlib.c	/^static lua_Unsigned project (lua_Unsigned ran, lua_Unsigned n,$/;"	f	file:
propagateall	skynet/3rd/lua/lgc.c	/^static lu_mem propagateall (global_State *g) {$/;"	f	file:
propagatemark	skynet/3rd/lua/lgc.c	/^static lu_mem propagatemark (global_State *g) {$/;"	f	file:
proto	skynet/lualib-src/sproto/sproto.c	/^	struct protocol * proto;$/;"	m	struct:sproto	typeref:struct:sproto::protocol	file:
protocol	skynet/lualib-src/sproto/sproto.c	/^struct protocol {$/;"	s	file:
protocol	skynet/skynet-src/socket_server.c	/^	uint8_t protocol;$/;"	m	struct:socket	file:
protocol_n	skynet/lualib-src/sproto/sproto.c	/^	int protocol_n;$/;"	m	struct:sproto	file:
provider.close	skynet/service/service_provider.lua	/^function provider.close(name)$/;"	f
provider.launch	skynet/service/service_provider.lua	/^function provider.launch(name, code, ...)$/;"	f
provider.query	skynet/service/service_provider.lua	/^function provider.query(name)$/;"	f
provider.test	skynet/service/service_provider.lua	/^function provider.test(name)$/;"	f
proxy	skynet/lualib-src/lua-datasheet.c	/^struct proxy {$/;"	s	file:
ps	skynet/3rd/lpeg/lptree.h	/^    int ps;  \/* occasional second child *\/$/;"	m	union:TTree::__anon4
ptop	skynet/3rd/lpeg/lpcap.h	/^  int ptop;  \/* stack index of last argument to 'match' *\/$/;"	m	struct:CapState
ptr	skynet/lualib-src/lua-bson.c	/^	const uint8_t * ptr;$/;"	m	struct:bson_reader	file:
ptr	skynet/lualib-src/lua-bson.c	/^	uint8_t *ptr;$/;"	m	struct:bson	file:
ptr	skynet/lualib-src/lua-mongo.c	/^	uint8_t * ptr;$/;"	m	struct:buffer	file:
ptr	skynet/lualib-src/lua-seri.c	/^	int ptr;$/;"	m	struct:read_block	file:
ptr	skynet/lualib-src/lua-seri.c	/^	int ptr;$/;"	m	struct:write_block	file:
ptr	skynet/skynet-src/socket_server.c	/^	char *ptr;$/;"	m	struct:write_buffer	file:
publish	skynet/service/multicastd.lua	/^local function publish(c , source, pack, size)$/;"	f
push64	skynet/lualib-src/lua-crypt.c	/^push64(lua_State *L, uint64_t r) {$/;"	f	file:
push_captures	skynet/3rd/lua/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_data	skynet/lualib-src/lua-netpack.c	/^push_data(lua_State *L, int fd, void *buffer, int size, int clone) {$/;"	f	file:
push_default	skynet/lualib-src/sproto/lsproto.c	/^push_default(const struct sproto_arg *args, int table) {$/;"	f	file:
push_more	skynet/lualib-src/lua-netpack.c	/^push_more(lua_State *L, int fd, uint8_t *buffer, int size) {$/;"	f	file:
push_onecapture	skynet/3rd/lua/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
push_queue	skynet/service-src/service_harbor.c	/^push_queue(struct harbor_msg_queue * queue, void * buffer, size_t sz, struct remote_message_header * header) {$/;"	f	file:
push_queue_msg	skynet/service-src/service_harbor.c	/^push_queue_msg(struct harbor_msg_queue * queue, struct harbor_msg * m) {$/;"	f	file:
push_response	skynet/lualib/skynet/socketchannel.lua	/^local function push_response(self, response, co)$/;"	f
push_socket_data	skynet/service-src/service_harbor.c	/^push_socket_data(struct harbor *h, const struct skynet_socket_message * message) {$/;"	f	file:
push_value	skynet/lualib-src/lua-seri.c	/^push_value(lua_State *L, struct read_block *rb, int type, int cookie) {$/;"	f	file:
pushargs	skynet/3rd/lua/lua.c	/^static int pushargs (lua_State *L) {$/;"	f	file:
pushcapture	skynet/3rd/lpeg/lpcap.c	/^static int pushcapture (CapState *cs) {$/;"	f	file:
pushclosure	skynet/3rd/lua/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pushed	skynet/3rd/lua/lobject.c	/^  int pushed;  \/* true if there is a part of the result on the stack *\/$/;"	m	struct:BuffFS	file:
pusherror	skynet/3rd/lua/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pusherrornotfound	skynet/3rd/lua/loadlib.c	/^static void pusherrornotfound (lua_State *L, const char *path) {$/;"	f	file:
pushfirsthash	skynet/lualib-src/lua-sharedata.c	/^pushfirsthash(lua_State *L, struct table * tbl) {$/;"	f	file:
pushfuncname	skynet/3rd/lua/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushfunction_withbuffer	skynet/lualib-src/sproto/lsproto.c	/^pushfunction_withbuffer(lua_State *L, const char * name, lua_CFunction func) {$/;"	f	file:
pushglobalfuncname	skynet/3rd/lua/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushkey	skynet/lualib-src/lua-sharedata.c	/^pushkey(lua_State *L, lua_State *sL, struct node *n) {$/;"	f	file:
pushline	skynet/3rd/lua/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushluaval	skynet/3rd/lpeg/lpcap.c	12;"	d	file:
pushmode	skynet/3rd/lua/lbaselib.c	/^static int pushmode (lua_State *L, int oldmode) {$/;"	f	file:
pushnestedvalues	skynet/3rd/lpeg/lpcap.c	/^static int pushnestedvalues (CapState *cs, int addextra) {$/;"	f	file:
pushnumint	skynet/3rd/lua/lmathlib.c	/^static void pushnumint (lua_State *L, lua_Number d) {$/;"	f	file:
pushobject	skynet/3rd/lua/ltests.c	/^static void pushobject (lua_State *L, const TValue *o) {$/;"	f	file:
pushonenestedvalue	skynet/3rd/lpeg/lpcap.c	/^static void pushonenestedvalue (CapState *cs) {$/;"	f	file:
pushqword	skynet/lualib-src/lua-crypt.c	/^pushqword(lua_State *L, uint32_t result[2]) {$/;"	f	file:
pushstr	skynet/3rd/lua/lobject.c	/^static void pushstr (BuffFS *buff, const char *str, size_t lstr) {$/;"	f	file:
pushstring	skynet/lualib-src/lua-netpack.c	/^pushstring(lua_State *L, const char * msg, int size) {$/;"	f	file:
pushuserdata	skynet/3rd/lua/ltests.c	/^static int pushuserdata (lua_State *L) {$/;"	f	file:
pushutfchar	skynet/3rd/lua/lutf8lib.c	/^static void pushutfchar (lua_State *L, int arg) {$/;"	f	file:
pushvalue	skynet/lualib-src/lua-datasheet.c	/^pushvalue(lua_State *L, const void *v, int type, const struct document * doc) {$/;"	f	file:
pushvalue	skynet/lualib-src/lua-sharedata.c	/^pushvalue(lua_State *L, lua_State *sL, uint8_t vt, union value *v) {$/;"	f	file:
put_length	skynet/3rd/lua-md5/md5.c	/^static void put_length(WORD32 *x, long len) {$/;"	f	file:
pvalue	skynet/3rd/lua/lobject.h	437;"	d
pvalueraw	skynet/3rd/lua/lobject.h	440;"	d
query	skynet/service/datacenterd.lua	/^local function query(db, key, ...)$/;"	f
query_file	skynet/lualib/skynet/sharetable.lua	/^	local function query_file(source, filename)$/;"	f
query_info	skynet/skynet-src/socket_server.c	/^query_info(struct socket *s, struct socket_info *si) {$/;"	f	file:
query_proto	skynet/lualib-src/sproto/sproto.c	/^query_proto(const struct sproto *sp, int tag) {$/;"	f	file:
queryall	skynet/lualib/skynet/sharetable.lua	/^	local function queryall(source)$/;"	f
queryall_test	skynet/test/testsharetable.lua	/^local function queryall_test()$/;"	f
querycap	skynet/3rd/lpeg/lpcap.c	/^static int querycap (CapState *cs) {$/;"	f	file:
querylist	skynet/lualib/skynet/sharetable.lua	/^	local function querylist(source, filenamelist)$/;"	f
queryproto	skynet/lualib/sproto.lua	/^local function queryproto(self, pname)$/;"	f
querysheet	skynet/lualib/skynet/datasheet/init.lua	/^local function querysheet(name)$/;"	f
querytype	skynet/lualib/sproto.lua	/^local function querytype(self, typename)$/;"	f
queue	skynet/lualib-src/lua-clientsocket.c	/^	char * queue[QUEUE_SIZE];$/;"	m	struct:queue	file:
queue	skynet/lualib-src/lua-clientsocket.c	/^struct queue {$/;"	s	file:
queue	skynet/lualib-src/lua-netpack.c	/^	struct netpack queue[QUEUESIZE];$/;"	m	struct:queue	typeref:struct:queue::netpack	file:
queue	skynet/lualib-src/lua-netpack.c	/^struct queue {$/;"	s	file:
queue	skynet/service-src/service_harbor.c	/^	struct harbor_msg_queue * queue;$/;"	m	struct:keyvalue	typeref:struct:keyvalue::harbor_msg_queue	file:
queue	skynet/service-src/service_harbor.c	/^	struct harbor_msg_queue *queue;$/;"	m	struct:slave	typeref:struct:slave::harbor_msg_queue	file:
queue	skynet/skynet-src/skynet_mq.c	/^	struct skynet_message *queue;$/;"	m	struct:message_queue	typeref:struct:message_queue::skynet_message	file:
queue	skynet/skynet-src/skynet_server.c	/^	struct message_queue *queue;$/;"	m	struct:skynet_context	typeref:struct:skynet_context::message_queue	file:
quit	skynet/skynet-src/skynet_start.c	/^	int quit;$/;"	m	struct:monitor	file:
quoteStr 	skynet/test/testmysql.lua	/^    quoteStr = function(str)$/;"	f
quotefloat	skynet/3rd/lua/lstrlib.c	/^static int quotefloat (lua_State *L, char *buff, lua_Number n) {$/;"	f	file:
r	skynet/3rd/lua/llex.h	/^  lua_Number r;$/;"	m	union:__anon11
r	skynet/lualib-src/lua-crypt.c	/^static const uint32_t r[] = {7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,$/;"	v	file:
raise_uncomplete	skynet/skynet-src/socket_server.c	/^raise_uncomplete(struct socket * s) {$/;"	f	file:
randfuncs	skynet/3rd/lua/lmathlib.c	/^static const luaL_Reg randfuncs[] = {$/;"	v	file:
randseed	skynet/3rd/lua/lmathlib.c	/^static void randseed (lua_State *L, RanState *state) {$/;"	f	file:
raw_dispatch_message	skynet/lualib/skynet.lua	/^local function raw_dispatch_message(prototype, msg, sz, session, source)$/;"	f
raw_free	skynet/skynet-src/malloc_hook.c	241;"	d	file:
raw_free	skynet/skynet-src/malloc_hook.c	45;"	d	file:
raw_realloc	skynet/skynet-src/malloc_hook.c	240;"	d	file:
raw_realloc	skynet/skynet-src/malloc_hook.c	44;"	d	file:
rawtt	skynet/3rd/lua/lobject.h	77;"	d
rb_read	skynet/lualib-src/lua-seri.c	/^rb_read(struct read_block *rb, int sz) {$/;"	f	file:
rball_init	skynet/lualib-src/lua-seri.c	/^rball_init(struct read_block * rb, char * buffer, int size) {$/;"	f	file:
re	request_ak.py	/^import re$/;"	i
read	skynet/lualib-src/lua-netpack.c	/^	int read;$/;"	m	struct:uncomplete	file:
read	skynet/service-src/service_harbor.c	/^	int read;$/;"	m	struct:slave	file:
read	skynet/skynet-src/rwlock.h	/^	ATOM_INT read;$/;"	m	struct:rwlock
read	skynet/skynet-src/socket_info.h	/^	uint64_t read;$/;"	m	struct:socket_info
read	skynet/skynet-src/socket_poll.h	/^	bool read;$/;"	m	struct:event
read	skynet/skynet-src/socket_server.c	/^	uint64_t read;$/;"	m	struct:socket_stat	file:
read64	skynet/lualib-src/lua-crypt.c	/^read64(lua_State *L, uint32_t xx[2], uint32_t yy[2]) {$/;"	f	file:
read_all	skynet/3rd/lua/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_block	skynet/lualib-src/lua-seri.c	/^struct read_block {$/;"	s	file:
read_boolean	skynet/lualib/skynet/db/redis.lua	/^local function read_boolean(so)$/;"	f
read_byte	skynet/lualib-src/lua-bson.c	/^read_byte(lua_State *L, struct bson_reader *br) {$/;"	f	file:
read_bytes	skynet/lualib-src/lua-bson.c	/^read_bytes(lua_State *L, struct bson_reader *br, int sz) {$/;"	f	file:
read_chars	skynet/3rd/lua/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_close	skynet/lualib/http/websocket.lua	/^local function read_close(payload_data)$/;"	f
read_cstring	skynet/lualib-src/lua-bson.c	/^read_cstring(lua_State *L, struct bson_reader *br, size_t *sz) {$/;"	f	file:
read_double	skynet/lualib-src/lua-bson.c	/^read_double(lua_State *L, struct bson_reader *br) {$/;"	f	file:
read_execute_result	skynet/lualib/skynet/db/mysql.lua	/^local function read_execute_result(self, sock)$/;"	f
read_frame	skynet/lualib/http/websocket.lua	/^local function read_frame(self)$/;"	f
read_handshake	skynet/lualib/http/websocket.lua	/^local function read_handshake(self, upgrade_ops)$/;"	f
read_int32	skynet/lualib-src/lua-bson.c	/^read_int32(lua_State *L, struct bson_reader *br) {$/;"	f	file:
read_int64	skynet/lualib-src/lua-bson.c	/^read_int64(lua_State *L, struct bson_reader *br) {$/;"	f	file:
read_line	skynet/3rd/lua/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	skynet/3rd/lua/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, size_t sep) {$/;"	f	file:
read_name	skynet/service/service_mgr.lua	/^local function read_name(service_name)$/;"	f
read_number	skynet/3rd/lua/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	skynet/3rd/lua/llex.c	/^static int read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_package	skynet/service/cmaster.lua	/^local function read_package(fd)$/;"	f
read_package	skynet/service/cslave.lua	/^local function read_package(fd)$/;"	f
read_prepare_result	skynet/lualib/skynet/db/mysql.lua	/^local function read_prepare_result(self, sock)$/;"	f
read_response	skynet/lualib/skynet/db/redis.lua	/^local function read_response(fd)$/;"	f
read_response	skynet/service/clustersender.lua	/^local function read_response(sock)$/;"	f
read_result	skynet/lualib/skynet/db/mysql.lua	/^local function read_result(self, sock)$/;"	f
read_size	skynet/lualib-src/lua-netpack.c	/^read_size(uint8_t * buffer) {$/;"	f	file:
read_string	skynet/3rd/lua/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_table	skynet/test/testpipeline.lua	/^local function read_table(t)$/;"	f
readable	skynet/3rd/lua/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readall	skynet/lualib/http/httpd.lua	/^local function readall(readbytes, bodylimit)$/;"	f
readall 	skynet/lualib/http/httpc.lua	/^			readall = function ()$/;"	f
readall 	skynet/lualib/http/websocket.lua	/^            readall = function ()$/;"	f
readcrln	skynet/lualib/http/internal.lua	/^local function readcrln(readbytes, body)$/;"	f
readdecesc	skynet/3rd/lua/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readdigits	skynet/3rd/lua/liolib.c	/^static int readdigits (RN *rn, int hex) {$/;"	f	file:
reader	skynet/3rd/lua/luac.c	/^static const char* reader(lua_State* L, void* ud, size_t* size)$/;"	f	file:
reader	skynet/3rd/lua/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
readfunc	skynet/lualib/http/tlshelper.lua	/^    local function readfunc()$/;"	f
readhexaesc	skynet/3rd/lua/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
reading	skynet/skynet-src/socket_info.h	/^	uint8_t reading;$/;"	m	struct:socket_info
reading	skynet/skynet-src/socket_server.c	/^	bool reading;$/;"	m	struct:socket	file:
readline_stdin	skynet/lualib-src/lua-clientsocket.c	/^readline_stdin(void * arg) {$/;"	f	file:
readutf8esc	skynet/3rd/lua/llex.c	/^static unsigned long readutf8esc (LexState *ls) {$/;"	f	file:
ready	skynet/service/cslave.lua	/^local function ready()$/;"	f
realloccode	skynet/3rd/lpeg/lpcode.c	/^static void realloccode (lua_State *L, Pattern *p, int nsize) {$/;"	f	file:
reallymarkobject	skynet/3rd/lua/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
reallyold	skynet/3rd/lua/lstate.h	/^  GCObject *reallyold;  \/* objects more than one cycle old ("really old") *\/$/;"	m	struct:global_State
recfield	skynet/3rd/lua/lparser.c	/^static void recfield (LexState *ls, ConsControl *cc) {$/;"	f	file:
reclevel	skynet/3rd/lpeg/lpcap.h	/^  int reclevel;  \/* recursion level *\/$/;"	m	struct:CapState
recv_buffer	skynet/service-src/service_harbor.c	/^	char * recv_buffer;$/;"	m	struct:slave	file:
recv_package	game/myclient/client.lua	/^local function recv_package(last)$/;"	f
recv_package	skynet/examples/client.lua	/^local function recv_package(last)$/;"	f
recv_response	skynet/examples/login/client.lua	/^local function recv_response(v)$/;"	f
recvbody	skynet/lualib/http/internal.lua	/^local function recvbody(interface, code, header, body)$/;"	f
recvctrl_fd	skynet/skynet-src/socket_server.c	/^	int recvctrl_fd;$/;"	m	struct:socket_server	file:
redcmd[36] 	skynet/lualib/skynet/db/redis.lua	/^redcmd[36] = function(fd, data) -- '$'$/;"	f
redcmd[42] 	skynet/lualib/skynet/db/redis.lua	/^redcmd[42] = function(fd, data)	-- '*'$/;"	f
redcmd[43] 	skynet/lualib/skynet/db/redis.lua	/^redcmd[43] = function(fd, data) -- '+'$/;"	f
redcmd[45] 	skynet/lualib/skynet/db/redis.lua	/^redcmd[45] = function(fd, data) -- '-'$/;"	f
redcmd[58] 	skynet/lualib/skynet/db/redis.lua	/^redcmd[58] = function(fd, data) -- ':'$/;"	f
redirect_fds	skynet/skynet-src/skynet_daemon.c	/^redirect_fds() {$/;"	f	file:
redis.connect	skynet/lualib/skynet/db/redis.lua	/^function redis.connect(db_conf)$/;"	f
redis.watch	skynet/lualib/skynet/db/redis.lua	/^function redis.watch(db_conf)$/;"	f
redis_login	skynet/lualib/skynet/db/redis.lua	/^local function redis_login(conf)$/;"	f
rediscluster:call	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:call(...)$/;"	f
rediscluster:close_all_connection	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:close_all_connection()$/;"	f
rediscluster:close_existing_connection	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:close_existing_connection()$/;"	f
rediscluster:flush_slots_cache	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:flush_slots_cache()$/;"	f
rediscluster:get_connection	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_connection(node)$/;"	f
rediscluster:get_connection_by_slot	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_connection_by_slot(slot)$/;"	f
rediscluster:get_key_from_command	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_key_from_command(argv)$/;"	f
rediscluster:get_random_connection	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_random_connection()$/;"	f
rediscluster:get_redis_link	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_redis_link(node)$/;"	f
rediscluster:get_watch_connection	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_watch_connection(node)$/;"	f
rediscluster:get_watch_connection_by_slot	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:get_watch_connection_by_slot(slot)$/;"	f
rediscluster:initialize_slots_cache	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:initialize_slots_cache()$/;"	f
rediscluster:keyslot	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:keyslot(key)$/;"	f
rediscluster:set_node_name	skynet/lualib/skynet/db/redis/cluster.lua	/^function rediscluster:set_node_name(node)$/;"	f
ref	skynet/lualib-src/lua-debugchannel.c	/^	int ref;$/;"	m	struct:channel	file:
ref	skynet/lualib-src/lua-sharedata.c	/^	ATOM_INT ref;$/;"	m	struct:state	file:
ref	skynet/skynet-src/skynet_server.c	/^	ATOM_INT ref;$/;"	m	struct:skynet_context	file:
ref 	skynet/3rd/lpeg/test.lua	/^function ref (s, i, a, b)$/;"	f
ref 	skynet/3rd/lpeg/test.lua	/^local function ref (s, i, x)$/;"	f
ref 	skynet/3rd/lpeg/test.lua	/^ref = function (s,i,x) return i == tonumber(x) and i, 'xuxu' end$/;"	f
reference	skynet/lualib-src/lua-multicast.c	/^	ATOM_INT reference;$/;"	m	struct:mc_package	file:
reference	skynet/lualib-src/lua-stm.c	/^	ATOM_INT reference;$/;"	m	struct:stm_copy	file:
reference	skynet/lualib-src/lua-stm.c	/^	ATOM_INT reference;$/;"	m	struct:stm_object	file:
reg_debugcmd	skynet/lualib/skynet/debug.lua	/^local function reg_debugcmd(name, fn)$/;"	f
regcodes	skynet/3rd/lua/ltests.c	/^static void regcodes (lua_State *L) {$/;"	f	file:
register_cmds 	game/myservice/player_t.lua	/^register_cmds = function(self)$/;"	f
register_global	skynet/service/service_mgr.lua	/^local function register_global()$/;"	f
register_local	skynet/service/service_mgr.lua	/^local function register_local()$/;"	f
register_npcs 	game/myservice/player_t.lua	/^register_npcs = function(self)$/;"	f
registerlocalvar	skynet/3rd/lua/lparser.c	/^static int registerlocalvar (LexState *ls, FuncState *fs, TString *varname) {$/;"	f	file:
reglevel	skynet/3rd/lua/lparser.c	/^static int reglevel (FuncState *fs, int nvar) {$/;"	f	file:
rehash	skynet/3rd/lua/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
reinsert	skynet/3rd/lua/ltable.c	/^static void reinsert (lua_State *L, Table *ot, Table *t) {$/;"	f	file:
release	skynet/skynet-src/skynet_module.h	/^	skynet_dl_release release;$/;"	m	struct:skynet_module
release	skynet/skynet-src/skynet_mq.c	/^	int release;$/;"	m	struct:message_queue	file:
release_queue	skynet/service-src/service_harbor.c	/^release_queue(struct harbor_msg_queue *queue) {$/;"	f	file:
releasehandle	skynet/lualib/skynet/datasheet/builder.lua	/^local function releasehandle(source, handle)$/;"	f
releaseobj	skynet/lualib-src/lua-sharedata.c	/^releaseobj(lua_State *L) {$/;"	f	file:
relstack	skynet/3rd/lua/ldo.c	/^static void relstack (lua_State *L) {$/;"	f	file:
remap	skynet/lualib/skynet/datasheet/dump.lua	/^	local function remap(n)$/;"	f
remarkupvals	skynet/3rd/lua/lgc.c	/^static int remarkupvals (global_State *g) {$/;"	f	file:
remote_message	skynet/skynet-src/skynet_harbor.h	/^struct remote_message {$/;"	s
remote_message_header	skynet/service-src/service_harbor.c	/^struct remote_message_header {$/;"	s	file:
remote_name	skynet/service-src/service_gate.c	/^	char remote_name[32];$/;"	m	struct:connection	file:
remote_name	skynet/skynet-src/skynet_harbor.h	/^struct remote_name {$/;"	s
remote_publish	skynet/service/multicastd.lua	/^local function remote_publish(node, channel, source, ...)$/;"	f
remote_resolve	skynet/lualib/skynet/dns.lua	/^local function remote_resolve(name, ipv6)$/;"	f
remote_send_handle	skynet/service-src/service_harbor.c	/^remote_send_handle(struct harbor *h, uint32_t source, uint32_t destination, int type, int session, const char * msg, size_t sz) {$/;"	f	file:
remote_send_name	skynet/service-src/service_harbor.c	/^remote_send_name(struct harbor *h, uint32_t source, const char name[GLOBALNAME_LENGTH], int type, int session, const char * msg, size_t sz) {$/;"	f	file:
remove_hook	skynet/lualib/skynet/remotedebug.lua	/^local function remove_hook(dispatcher)$/;"	f
remove_padding	skynet/lualib-src/lua-crypt.c	/^remove_padding(lua_State *L, const uint8_t *last, int mode) {$/;"	f	file:
remove_watch	skynet/lualib/skynet/remotedebug.lua	/^local function remove_watch()$/;"	f
removedyncap	skynet/3rd/lpeg/lpvm.c	/^static int removedyncap (lua_State *L, Capture *capture,$/;"	f	file:
removelastinstruction	skynet/3rd/lua/lcode.c	/^static void removelastinstruction (FuncState *fs) {$/;"	f	file:
removelastlineinfo	skynet/3rd/lua/lcode.c	/^static void removelastlineinfo (FuncState *fs) {$/;"	f	file:
removevalues	skynet/3rd/lua/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	skynet/3rd/lua/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
repack	skynet/lualib/skynet/cluster.lua	/^local function repack(address, ...)$/;"	f
repeatstat	skynet/3rd/lua/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replace_object	skynet/lualib-src/lua-bson.c	/^replace_object(lua_State *L, int type, struct bson * bs) {$/;"	f	file:
replace_upvalue	skynet/lualib/skynet/remotedebug.lua	/^local function replace_upvalue(func, uvname, value)$/;"	f
reply_length	skynet/lualib-src/lua-mongo.c	/^reply_length(lua_State *L) {$/;"	f	file:
report	skynet/3rd/lua/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
report_accept	skynet/skynet-src/socket_server.c	/^report_accept(struct socket_server *ss, struct socket *s, struct socket_message *result) {$/;"	f	file:
report_close	skynet/lualib/skynet/sharetable.lua	/^local function report_close(t)$/;"	f
report_connect	skynet/skynet-src/socket_server.c	/^report_connect(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
report_error	skynet/skynet-src/socket_server.c	/^report_error(struct socket *s, struct socket_message *result, const char *err) {$/;"	f	file:
report_harbor_down	skynet/service-src/service_harbor.c	/^report_harbor_down(struct harbor *h, int id) {$/;"	f	file:
report_launcher_error	skynet/service-src/service_snlua.c	/^report_launcher_error(struct skynet_context *ctx) {$/;"	f	file:
report_slave	skynet/service/cmaster.lua	/^local function report_slave(fd, slave_id, slave_addr)$/;"	f
reprepstate	skynet/3rd/lua/lstrlib.c	/^static void reprepstate (MatchState *ms) {$/;"	f	file:
request	game/myservice/player_agent.lua	/^local function request(fname, args, response)$/;"	f
request	skynet/examples/agent.lua	/^local function request(name, args, response)$/;"	f
request	skynet/lualib/snax/msgserver.lua	/^	local function request(fd, msg, sz)$/;"	f
request	skynet/service/service_mgr.lua	/^local function request(name, func, ...)$/;"	f
request	skynet/test/testresponse.lua	/^local function request(tick, i)$/;"	f
request_bind	skynet/skynet-src/socket_server.c	/^struct request_bind {$/;"	s	file:
request_close	skynet/skynet-src/socket_server.c	/^struct request_close {$/;"	s	file:
request_id	skynet/lualib-src/lua-mongo.c	/^	int32_t request_id;			\/\/ identifier for this message$/;"	m	struct:header_t	file:
request_iter	skynet/lualib/skynet.lua	/^	local function request_iter(self)$/;"	f
request_listen	skynet/skynet-src/socket_server.c	/^struct request_listen {$/;"	s	file:
request_market 	game/myservice/city_t.lua	/^request_market = function(self, agent)$/;"	f
request_meta:add	skynet/lualib/skynet.lua	/^	function request_meta:add(obj)$/;"	f
request_meta:close	skynet/lualib/skynet.lua	/^	function request_meta:close()$/;"	f
request_meta:select	skynet/lualib/skynet.lua	/^	function request_meta:select(timeout)$/;"	f
request_open	skynet/skynet-src/socket_server.c	/^struct request_open {$/;"	s	file:
request_package	skynet/skynet-src/socket_server.c	/^struct request_package {$/;"	s	file:
request_resumepause	skynet/skynet-src/socket_server.c	/^struct request_resumepause {$/;"	s	file:
request_send	skynet/skynet-src/socket_server.c	/^struct request_send {$/;"	s	file:
request_send_udp	skynet/skynet-src/socket_server.c	/^struct request_send_udp {$/;"	s	file:
request_sender	skynet/lualib/skynet/cluster.lua	/^local function request_sender(q, node)$/;"	f
request_setopt	skynet/skynet-src/socket_server.c	/^struct request_setopt {$/;"	s	file:
request_setudp	skynet/skynet-src/socket_server.c	/^struct request_setudp {$/;"	s	file:
request_thread	skynet/lualib/skynet.lua	/^	local function request_thread(self)$/;"	f
request_udp	skynet/skynet-src/socket_server.c	/^struct request_udp {$/;"	s	file:
requests	request_ak.py	/^import requests$/;"	i
resdyncaptures	skynet/3rd/lpeg/lpvm.c	/^static int resdyncaptures (lua_State *L, int fr, int curr, int limit) {$/;"	f	file:
reserve_fd	skynet/skynet-src/socket_server.c	/^	int reserve_fd;	\/\/ for EMFILE$/;"	m	struct:socket_server	file:
reserve_id	skynet/skynet-src/socket_server.c	/^reserve_id(struct socket_server *ss) {$/;"	f	file:
reserve_length	skynet/lualib-src/lua-bson.c	/^reserve_length(struct bson *b) {$/;"	f	file:
reserve_length	skynet/lualib-src/lua-mongo.c	/^reserve_length(struct buffer *b) {$/;"	f	file:
reset_dangerzone	skynet/lualib/skynet.lua	/^	local function reset_dangerzone(session)$/;"	f
resetbit	skynet/3rd/lua/lgc.h	66;"	d
resetbits	skynet/3rd/lua/lgc.h	60;"	d
resethookcount	skynet/3rd/lua/ldebug.h	21;"	d
resizebox	skynet/3rd/lua/lauxlib.c	/^static void *resizebox (lua_State *L, int idx, size_t newsize) {$/;"	f	file:
resolve	skynet/lualib/skynet/dns.lua	/^local function resolve(content)$/;"	f
resolve_accept	skynet/lualib/http/websocket.lua	/^local function resolve_accept(self, options)$/;"	f
resolve_replace	skynet/lualib/skynet/sharetable.lua	/^local function resolve_replace(replace_map)$/;"	f
response	game/myservice/simpleweb.lua	/^local function response(id, write, ...)$/;"	f
response	skynet/examples/simpleweb.lua	/^local function response(id, write, ...)$/;"	f
response	skynet/lualib-src/lua-mongo.c	/^struct response {$/;"	s	file:
response	skynet/lualib/skynet.lua	/^	local function response(ok, ...)$/;"	f
response	skynet/test/testresponse.lua	/^local function response()$/;"	f
response 	game/myclient/cmd_buy_t.lua	/^        response = function(self, ply, input)$/;"	f
response 	game/myclient/cmd_buy_t.lua	/^        response = function(self, ply, ret)$/;"	f
response.error	skynet/test/pingserver.lua	/^function response.error()$/;"	f
response.ping	skynet/test/pingserver.lua	/^function response.ping(hello)$/;"	f
response_name	skynet/service/cdummy.lua	/^local function response_name(name)$/;"	f
response_name	skynet/service/cslave.lua	/^local function response_name(name)$/;"	f
response_to	skynet/lualib-src/lua-mongo.c	/^	int32_t response_to;		\/\/ requestID from the original request(used in responses from the database)$/;"	m	struct:header_t	file:
restartcollection	skynet/3rd/lua/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restassign	skynet/3rd/lua/lparser.c	/^static void restassign (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
restorestack	skynet/3rd/lua/ldo.h	37;"	d
result	skynet/skynet-src/skynet_server.c	/^	char result[32];$/;"	m	struct:skynet_context	file:
result_index	skynet/lualib-src/sproto/lsproto.c	/^	int result_index;$/;"	m	struct:decode_ud	file:
resume	skynet/3rd/lua/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume	skynet/lualib/skynet/coroutine.lua	/^	local function resume(co, ok, ...)$/;"	f
resume_error	skynet/3rd/lua/ldo.c	/^static int resume_error (lua_State *L, const char *msg, int narg) {$/;"	f	file:
resume_socket	skynet/skynet-src/socket_server.c	/^resume_socket(struct socket_server *ss, struct request_resumepause *request, struct socket_message *result) {$/;"	f	file:
resumepause	skynet/skynet-src/socket_server.c	/^		struct request_resumepause resumepause;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_resumepause	file:
ret_pack	skynet/lualib/snax/loginserver.lua	/^	local function ret_pack(ok, err, ...)$/;"	f
rethook	skynet/3rd/lua/ldo.c	/^static void rethook (lua_State *L, CallInfo *ci, int nres) {$/;"	f	file:
retire_response	skynet/lualib/snax/msgserver.lua	/^	local function retire_response(u)$/;"	f
retstat	skynet/3rd/lua/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
return setmetatable({}, { __close 	skynet/test/testtobeclosed.lua	/^    return setmetatable({}, { __close = function(...)$/;"	f
return_buffer	skynet/lualib-src/lua-cluster.c	/^return_buffer(lua_State *L, const char * buffer, int sz) {$/;"	f	file:
return_f	skynet/service/snaxd.lua	/^local function return_f(f, ...)$/;"	f
return_free_node	skynet/lualib-src/lua-socket.c	/^return_free_node(lua_State *L, int pool, struct socket_buffer *sb) {$/;"	f	file:
reverse	skynet/3rd/lua/lapi.c	/^l_sinline void reverse (lua_State *L, StkId from, StkId to) {$/;"	f
rfds	skynet/skynet-src/socket_server.c	/^	fd_set rfds;$/;"	m	struct:socket_server	file:
ridx	skynet/3rd/lua/lparser.h	/^      lu_byte ridx;  \/* register holding the variable *\/$/;"	m	struct:expdesc::__anon23::__anon25
ridx	skynet/3rd/lua/lparser.h	/^    lu_byte ridx;  \/* register holding the variable *\/$/;"	m	struct:Vardesc::__anon26
right	skynet/3rd/lua/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon21	file:
righttt	skynet/3rd/lua/lobject.h	98;"	d
rkname	skynet/3rd/lua/ldebug.c	/^static void rkname (const Proto *p, int pc, Instruction i, const char **name) {$/;"	f	file:
rname	skynet/3rd/lua/ldebug.c	/^static void rname (const Proto *p, int pc, int c, const char **name) {$/;"	f	file:
rol	skynet/lualib-src/lsha1.c	101;"	d	file:
root	skynet/lualib-src/lua-sharedata.c	/^	struct table * root;$/;"	m	struct:ctrl	typeref:struct:ctrl::table	file:
root	skynet/lualib-src/lua-sharedata.c	/^	struct table * root;$/;"	m	struct:state	typeref:struct:state::table	file:
rotate	skynet/3rd/lua-md5/md5.c	38;"	d	file:
rotl	skynet/3rd/lua/lmathlib.c	/^static Rand64 rotl (Rand64 i, int n) {$/;"	f	file:
rotl	skynet/3rd/lua/lmathlib.c	/^static Rand64 rotl (Rand64 x, int n) {$/;"	f	file:
rotl1	skynet/3rd/lua/lmathlib.c	/^static Rand64 rotl1 (Rand64 i, int n) {$/;"	f	file:
rtime	skynet/skynet-src/socket_info.h	/^	uint64_t rtime;$/;"	m	struct:socket_info
rtime	skynet/skynet-src/socket_server.c	/^	uint64_t rtime;$/;"	m	struct:socket_stat	file:
runC	skynet/3rd/lua/ltests.c	/^static int runC (lua_State *L, lua_State *L1, const char *pc) {$/;"	f	file:
run_action 	game/myservice/player_t.lua	/^run_action = function(self)$/;"	f
run_cmd	skynet/lualib/skynet/remotedebug.lua	/^local function run_cmd(cmd, env, co, level)$/;"	f
run_exp	skynet/lualib/skynet/remotedebug.lua	/^local function run_exp(ok, ...)$/;"	f
runafewfinalizers	skynet/3rd/lua/lgc.c	/^static int runafewfinalizers (lua_State *L, int n) {$/;"	f	file:
runargs	skynet/3rd/lua/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runtimecap	skynet/3rd/lpeg/lpcap.c	/^int runtimecap (CapState *cs, Capture *close, const char *s, int *rem) {$/;"	f
rwlock	skynet/skynet-src/rwlock.h	/^struct rwlock {$/;"	s
rwlock_init	skynet/skynet-src/rwlock.h	/^rwlock_init(struct rwlock *lock) {$/;"	f
rwlock_rlock	skynet/skynet-src/rwlock.h	/^rwlock_rlock(struct rwlock *lock) {$/;"	f
rwlock_runlock	skynet/skynet-src/rwlock.h	/^rwlock_runlock(struct rwlock *lock) {$/;"	f
rwlock_wlock	skynet/skynet-src/rwlock.h	/^rwlock_wlock(struct rwlock *lock) {$/;"	f
rwlock_wunlock	skynet/skynet-src/rwlock.h	/^rwlock_wunlock(struct rwlock *lock) {$/;"	f
s	skynet/3rd/lpeg/lpcap.c	/^    } s;$/;"	m	union:StrAux::__anon1	typeref:struct:StrAux::__anon1::__anon2	file:
s	skynet/3rd/lpeg/lpcap.h	/^  const char *s;  \/* original string *\/$/;"	m	struct:CapState
s	skynet/3rd/lpeg/lpvm.c	/^  const char *s;  \/* saved position (or NULL for calls) *\/$/;"	m	struct:Stack	file:
s	skynet/3rd/lua/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	skynet/3rd/lua/lmathlib.c	/^  Rand64 s[4];$/;"	m	struct:__anon12	file:
s	skynet/service-src/service_harbor.c	/^	struct slave s[REMOTE_MAX];$/;"	m	struct:harbor	typeref:struct:harbor::slave	file:
s	skynet/skynet-src/socket_poll.h	/^	void * s;$/;"	m	struct:event
s	skynet/skynet-src/socket_server.c	/^	struct sockaddr s;$/;"	m	union:sockaddr_all	typeref:struct:sockaddr_all::sockaddr	file:
s 	game/myclient/player_client_t.lua	/^    s = function(self)$/;"	f
s2d	skynet/3rd/lua/ltests.c	/^static int s2d (lua_State *L) {$/;"	f	file:
s2v	skynet/3rd/lua/lobject.h	172;"	d
sC2int	skynet/3rd/lua/lopcodes.h	101;"	d
salt_password	skynet/lualib/skynet/db/mongo.lua	/^local function salt_password(password, salt, iter)$/;"	f
sat_SHA1_Final	skynet/lualib-src/lsha1.c	/^static void sat_SHA1_Final(SHA1_CTX* context, uint8_t digest[SHA1_DIGEST_SIZE])$/;"	f	file:
sat_SHA1_Init	skynet/lualib-src/lsha1.c	/^static void sat_SHA1_Init(SHA1_CTX* context)$/;"	f	file:
sat_SHA1_Update	skynet/lualib-src/lsha1.c	/^static void sat_SHA1_Update(SHA1_CTX* context,	const uint8_t* data, const size_t len)$/;"	f	file:
save	skynet/3rd/lua/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save 	game/myservice/player_t.lua	/^save = function(self, chgs)$/;"	f
save_and_next	skynet/3rd/lua/llex.c	51;"	d	file:
save_data	game/myservice/status.lua	/^function save_data(what, value)$/;"	f
save_proto	skynet/3rd/lua/lauxlib.c	/^save_proto(const char *key, const void * proto) {$/;"	f	file:
save_uncomplete	skynet/lualib-src/lua-netpack.c	/^save_uncomplete(lua_State *L, int fd) {$/;"	f	file:
savedpc	skynet/3rd/lua/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon28::__anon29
savelineinfo	skynet/3rd/lua/lcode.c	/^static void savelineinfo (FuncState *fs, Proto *f, int line) {$/;"	f	file:
savepc	skynet/3rd/lua/lvm.c	1102;"	d	file:
savestack	skynet/3rd/lua/ldo.h	36;"	d
savestate	skynet/3rd/lua/lvm.c	1109;"	d	file:
scaleFIG	skynet/3rd/lua/lmathlib.c	335;"	d	file:
scaleFIG	skynet/3rd/lua/lmathlib.c	461;"	d	file:
scaleFIG	skynet/3rd/lua/lmathlib.c	477;"	d	file:
searcher_C	skynet/3rd/lua/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	skynet/3rd/lua/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	skynet/3rd/lua/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	skynet/3rd/lua/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	skynet/3rd/lua/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	skynet/3rd/lua/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	skynet/3rd/lua/lparser.c	/^static int searchvar (FuncState *fs, TString *n, expdesc *var) {$/;"	f	file:
self.__dispatch_thread 	skynet/lualib/skynet/socketchannel.lua	/^		self.__dispatch_thread = skynet.fork(function()$/;"	f
self.rpc 	game/myclient/player_client_t.lua	/^    self.rpc = setmetatable({ply = self}, {__index = function(_, fname)$/;"	f
self.rpc 	game/myservice/player_t.lua	/^    self.rpc = setmetatable({ply = self}, {__index = function(_, fname)$/;"	f
sell	game/myservice/player_handler.lua	/^function sell(self)$/;"	f
seminfo	skynet/3rd/lua/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send	skynet/skynet-src/socket_server.c	/^		struct request_send send;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_send	file:
send	skynet/skynet-src/socket_server.c	/^	struct request_send send;$/;"	m	struct:request_send_udp	typeref:struct:request_send_udp::request_send	file:
send_buffer	skynet/skynet-src/socket_server.c	/^send_buffer(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
send_buffer_	skynet/skynet-src/socket_server.c	/^send_buffer_(struct socket_server *ss, struct socket *s, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
send_buffer_empty	skynet/skynet-src/socket_server.c	/^send_buffer_empty(struct socket *s) {$/;"	f	file:
send_list	skynet/skynet-src/socket_server.c	/^send_list(struct socket_server *ss, struct socket *s, struct wb_list *list, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
send_list_tcp	skynet/skynet-src/socket_server.c	/^send_list_tcp(struct socket_server *ss, struct socket *s, struct wb_list *list, struct socket_lock *l, struct socket_message *result) {$/;"	f	file:
send_list_udp	skynet/skynet-src/socket_server.c	/^send_list_udp(struct socket_server *ss, struct socket *s, struct wb_list *list, struct socket_message *result) {$/;"	f	file:
send_message	skynet/lualib-src/lua-skynet.c	/^send_message(lua_State *L, int source, int idx_type) {$/;"	f	file:
send_object	skynet/skynet-src/socket_server.c	/^struct send_object {$/;"	s	file:
send_object_init	skynet/skynet-src/socket_server.c	/^send_object_init(struct socket_server *ss, struct send_object *so, const void *object, size_t sz) {$/;"	f	file:
send_object_init_from_sendbuffer	skynet/skynet-src/socket_server.c	/^send_object_init_from_sendbuffer(struct socket_server *ss, struct send_object *so, struct socket_sendbuffer *buf) {$/;"	f	file:
send_package	game/myservice/player_agent.lua	/^local function send_package(pack)$/;"	f
send_package	skynet/examples/agent.lua	/^local function send_package(pack)$/;"	f
send_package	skynet/examples/client.lua	/^local function send_package(fd, pack)$/;"	f
send_package	skynet/examples/login/client.lua	/^local function send_package(fd, pack)$/;"	f
send_remote	skynet/service-src/service_harbor.c	/^send_remote(struct skynet_context * ctx, int fd, const char * buffer, size_t sz, struct remote_message_header * cookie) {$/;"	f	file:
send_request	skynet/examples/client.lua	/^local function send_request(name, args)$/;"	f
send_request	skynet/examples/login/client.lua	/^local function send_request(v, session)$/;"	f
send_request	skynet/service/clustersender.lua	/^local function send_request(addr, msg, sz)$/;"	f
send_request	skynet/skynet-src/socket_server.c	/^send_request(struct socket_server *ss, struct request_package *request, char type, int len) {$/;"	f	file:
send_requests	skynet/lualib/skynet.lua	/^	local function send_requests(self)$/;"	f
send_socket	skynet/skynet-src/socket_server.c	/^send_socket(struct socket_server *ss, struct request_send * request, struct socket_message *result, int priority, const uint8_t *udp_address) {$/;"	f	file:
send_udp	skynet/skynet-src/socket_server.c	/^		struct request_send_udp send_udp;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_send_udp	file:
sendbuffer_init_	skynet/skynet-src/skynet_socket.h	/^static inline void sendbuffer_init_(struct socket_sendbuffer *buf, int id, const void *buffer, int sz) {$/;"	f
sendctrl_fd	skynet/skynet-src/socket_server.c	/^	int sendctrl_fd;$/;"	m	struct:socket_server	file:
sending	skynet/skynet-src/socket_server.c	/^	ATOM_ULONG sending;$/;"	m	struct:socket	file:
separatetobefnz	skynet/3rd/lua/lgc.c	/^static void separatetobefnz (global_State *g, int all) {$/;"	f	file:
seq 	skynet/3rd/lpeg/test.lua	/^  local function seq (n) $/;"	f
seqaux	skynet/3rd/lpeg/lptree.c	/^static TTree *seqaux (TTree *tree, TTree *sib, int sibsize) {$/;"	f	file:
seri	skynet/lualib-src/lua-seri.c	/^seri(lua_State *L, struct block *b, int len) {$/;"	f	file:
server	skynet/test/testudp.lua	/^local function server()$/;"	f
server.auth_handler	skynet/examples/login/logind.lua	/^function server.auth_handler(token)$/;"	f
server.command_handler	skynet/examples/login/logind.lua	/^function server.command_handler(command, ...)$/;"	f
server.disconnect_handler	skynet/examples/login/gated.lua	/^function server.disconnect_handler(username)$/;"	f
server.ip	skynet/lualib/snax/msgserver.lua	/^function server.ip(username)$/;"	f
server.kick_handler	skynet/examples/login/gated.lua	/^function server.kick_handler(uid, subid)$/;"	f
server.login	skynet/lualib/snax/msgserver.lua	/^function server.login(username, secret)$/;"	f
server.login_handler	skynet/examples/login/gated.lua	/^function server.login_handler(uid, secret)$/;"	f
server.login_handler	skynet/examples/login/logind.lua	/^function server.login_handler(server, uid, secret)$/;"	f
server.logout	skynet/lualib/snax/msgserver.lua	/^function server.logout(username)$/;"	f
server.logout_handler	skynet/examples/login/gated.lua	/^function server.logout_handler(uid, subid)$/;"	f
server.register_handler	skynet/examples/login/gated.lua	/^function server.register_handler(name)$/;"	f
server.request_handler	skynet/examples/login/gated.lua	/^function server.request_handler(username, msg)$/;"	f
server.start	skynet/lualib/snax/msgserver.lua	/^function server.start(conf)$/;"	f
server.userid	skynet/lualib/snax/msgserver.lua	/^function server.userid(username)$/;"	f
server.username	skynet/lualib/snax/msgserver.lua	/^function server.username(uid, subid, servername)$/;"	f
service.close	skynet/lualib/skynet/service.lua	/^function service.close(name)$/;"	f
service.new	skynet/lualib/skynet/service.lua	/^function service.new(name, mainfunc, ...)$/;"	f
service.query	skynet/lualib/skynet/service.lua	/^function service.query(name)$/;"	f
service_mainfunc	skynet/test/testservice/kvdb.lua	/^local function service_mainfunc(...)$/;"	f
session	skynet/service-src/service_harbor.c	/^	uint32_t session;$/;"	m	struct:remote_message_header	file:
session	skynet/skynet-src/skynet_mq.h	/^	int session;$/;"	m	struct:skynet_message
session	skynet/skynet-src/skynet_timer.c	/^	int session;$/;"	m	struct:timer_event	file:
session_id	skynet/skynet-src/skynet_server.c	/^	int session_id;$/;"	m	struct:skynet_context	file:
set	skynet/3rd/lpeg/lptree.h	/^    } set;  \/* for compact sets *\/$/;"	m	union:TTree::__anon4	typeref:struct:TTree::__anon4::__anon5
set	skynet/3rd/lpeg/lpvm.h	/^      } set;$/;"	m	union:Instruction::Inst::__anon6	typeref:struct:Instruction::Inst::__anon6::__anon7
set2	skynet/3rd/lua/ltablib.c	/^static void set2 (lua_State *L, IdxT i, IdxT j) {$/;"	f	file:
set2black	skynet/3rd/lua/lgc.c	79;"	d	file:
set2gray	skynet/3rd/lua/lgc.c	75;"	d	file:
set_checkconflict 	skynet/lualib/skynet.lua	/^	set_checkconflict = function(session)$/;"	f
set_checkrewind 	skynet/lualib/skynet.lua	/^	set_checkrewind = function()$/;"	f
set_env	skynet/3rd/lua/lapi.c	/^static void set_env (lua_State *L, LClosure *f) {$/;"	f	file:
set_info	skynet/3rd/lua-md5/md5lib.c	/^static void set_info (lua_State *L) {$/;"	f	file:
set_info 	game/myservice/player_t.lua	/^set_info = function(self, info)$/;"	f
set_name 	game/myservice/player_t.lua	/^set_name = function(self, name)$/;"	f
set_state 	game/myservice/player_t.lua	/^set_state = function(self, state)$/;"	f
set_udp	skynet/skynet-src/socket_server.c	/^		struct request_setudp set_udp;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_setudp	file:
set_udp_address	skynet/skynet-src/socket_server.c	/^set_udp_address(struct socket_server *ss, struct request_setudp *request, struct socket_message *result) {$/;"	f	file:
setage	skynet/3rd/lua/lgc.h	118;"	d
setallfields	skynet/3rd/lua/loslib.c	/^static void setallfields (lua_State *L, struct tm *stm) {$/;"	f	file:
setarg	skynet/3rd/lua/lopcodes.h	122;"	d
setarray	skynet/lualib-src/lua-sharedata.c	/^setarray(struct context *ctx, lua_State *L, int index, int key) {$/;"	f	file:
setbfvalue	skynet/3rd/lua/lobject.h	250;"	d
setbits	skynet/3rd/lua/lgc.h	61;"	d
setboolfield	skynet/3rd/lua/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbtvalue	skynet/3rd/lua/lobject.h	251;"	d
setchar	skynet/3rd/lpeg/lptypes.h	110;"	d
setcistrecst	skynet/3rd/lua/lstate.h	234;"	d
setclCvalue	skynet/3rd/lua/lobject.h	621;"	d
setclLvalue	skynet/3rd/lua/lobject.h	611;"	d
setclLvalue2s	skynet/3rd/lua/lobject.h	616;"	d
setdeadkey	skynet/3rd/lua/lobject.h	779;"	d
setempty	skynet/3rd/lua/lobject.h	225;"	d
setfield	skynet/3rd/lua/loslib.c	/^static void setfield (lua_State *L, const char *key, int value, int delta) {$/;"	f	file:
setfltvalue	skynet/3rd/lua/lobject.h	338;"	d
setfvalue	skynet/3rd/lua/lobject.h	618;"	d
setgcovalue	skynet/3rd/lua/lobject.h	309;"	d
setgcparam	skynet/3rd/lua/lgc.h	141;"	d
sethook	skynet/3rd/lua/ltests.c	/^static int sethook (lua_State *L) {$/;"	f	file:
sethookaux	skynet/3rd/lua/ltests.c	/^static void sethookaux (lua_State *L, int mask, int count, const char *scpt) {$/;"	f	file:
sethvalue	skynet/3rd/lua/lobject.h	687;"	d
sethvalue2s	skynet/3rd/lua/lobject.h	692;"	d
setivalue	skynet/3rd/lua/lobject.h	344;"	d
setlimittosize	skynet/3rd/lua/ltable.c	/^static unsigned int setlimittosize (Table *t) {$/;"	f	file:
setmetatable(command, { __index 	skynet/lualib/skynet/db/redis.lua	/^setmetatable(command, { __index = function(t,k)$/;"	f
setmetatable(customers, { __index 	skynet/lualib/skynet/datasheet/builder.lua	/^setmetatable(customers, { __index = function(c, source)$/;"	f
setminordebt	skynet/3rd/lua/lgc.c	/^static void setminordebt (global_State *g) {$/;"	f	file:
setnameval	skynet/3rd/lua/ltests.c	/^static void setnameval (lua_State *L, const char *name, int val) {$/;"	f	file:
setnilkey	skynet/3rd/lua/lobject.h	765;"	d
setnilvalue	skynet/3rd/lua/lobject.h	200;"	d
setnodekey	skynet/3rd/lua/lobject.h	714;"	d
setnodevector	skynet/3rd/lua/ltable.c	/^static void setnodevector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setnorealasize	skynet/3rd/lua/lobject.h	737;"	d
setoah	skynet/3rd/lua/lstate.h	247;"	d
setobj	skynet/3rd/lua/lobject.h	118;"	d
setobj2n	skynet/3rd/lua/lobject.h	135;"	d
setobj2s	skynet/3rd/lua/lobject.h	131;"	d
setobj2t	skynet/3rd/lua/lobject.h	137;"	d
setobjs2s	skynet/3rd/lua/lobject.h	129;"	d
setobjt2t	skynet/3rd/lua/lobject.h	133;"	d
setoffset	skynet/3rd/lpeg/lpcode.c	/^static void setoffset (CompileState *compst, int instruction, int offset) {$/;"	f	file:
setopt	skynet/skynet-src/socket_server.c	/^		struct request_setopt setopt;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_setopt	file:
setopt_socket	skynet/skynet-src/socket_server.c	/^setopt_socket(struct socket_server *ss, struct request_setopt *request) {$/;"	f	file:
setpath	skynet/3rd/lua/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname,$/;"	f	file:
setpause	skynet/3rd/lua/lgc.c	/^static void setpause (global_State *g) {$/;"	f	file:
setprogdir	skynet/3rd/lua/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	skynet/3rd/lua/loadlib.c	170;"	d	file:
setprogdir	skynet/3rd/lua/loadlib.c	67;"	d	file:
setpvalue	skynet/3rd/lua/lobject.h	442;"	d
setrandfunc	skynet/3rd/lua/lmathlib.c	/^static void setrandfunc (lua_State *L) {$/;"	f	file:
setrealasize	skynet/3rd/lua/lobject.h	736;"	d
setseed	skynet/3rd/lua/lmathlib.c	/^static void setseed (lua_State *L, Rand64 *state,$/;"	f	file:
setsignal	skynet/3rd/lua/lua.c	/^static void setsignal (int sig, void (*handler)(int)) {$/;"	f	file:
setsignal	skynet/3rd/lua/lua.c	55;"	d	file:
setsvalue	skynet/3rd/lua/lobject.h	371;"	d
setsvalue2n	skynet/3rd/lua/lobject.h	380;"	d
setsvalue2s	skynet/3rd/lua/lobject.h	377;"	d
settabsb	skynet/3rd/lua/ldblib.c	/^static void settabsb (lua_State *L, const char *k, int v) {$/;"	f	file:
settabsi	skynet/3rd/lua/ldblib.c	/^static void settabsi (lua_State *L, const char *k, int v) {$/;"	f	file:
settabss	skynet/3rd/lua/ldblib.c	/^static void settabss (lua_State *L, const char *k, const char *v) {$/;"	f	file:
setthvalue	skynet/3rd/lua/lobject.h	268;"	d
setthvalue2s	skynet/3rd/lua/lobject.h	273;"	d
settraps	skynet/3rd/lua/ldebug.c	/^static void settraps (CallInfo *ci) {$/;"	f	file:
settrick	skynet/3rd/lua/ltests.c	/^static int settrick (lua_State *L) {$/;"	f	file:
settt_	skynet/3rd/lua/lobject.h	114;"	d
setuvalue	skynet/3rd/lua/lobject.h	445;"	d
setvalue	skynet/lualib-src/lua-sharedata.c	/^setvalue(struct context * ctx, lua_State *L, int index, struct node *n) {$/;"	f	file:
setvararg	skynet/3rd/lua/lparser.c	/^static void setvararg (FuncState *fs, int nparams) {$/;"	f	file:
sha1	skynet/test/testsha.lua	/^local function sha1(text)$/;"	f
sharedata.deepcopy	skynet/lualib/skynet/sharedata.lua	/^function sharedata.deepcopy(name, ...)$/;"	f
sharedata.delete	skynet/lualib/skynet/sharedata.lua	/^function sharedata.delete(name)$/;"	f
sharedata.flush	skynet/lualib/skynet/sharedata.lua	/^function sharedata.flush()$/;"	f
sharedata.new	skynet/lualib/skynet/sharedata.lua	/^function sharedata.new(name, v, ...)$/;"	f
sharedata.query	skynet/lualib/skynet/sharedata.lua	/^function sharedata.query(name)$/;"	f
sharedata.update	skynet/lualib/skynet/sharedata.lua	/^function sharedata.update(name, v, ...)$/;"	f
sharemap.reader	skynet/lualib/skynet/sharemap.lua	/^function sharemap.reader(typename, stmcpy)$/;"	f
sharemap.register	skynet/lualib/skynet/sharemap.lua	/^function sharemap.register(protofile)$/;"	f
sharemap.writer	skynet/lualib/skynet/sharemap.lua	/^function sharemap.writer(typename, obj)$/;"	f
sharemap:commit	skynet/lualib/skynet/sharemap.lua	/^function sharemap:commit()$/;"	f
sharemap:copy	skynet/lualib/skynet/sharemap.lua	/^function sharemap:copy()$/;"	f
sharemap:update	skynet/lualib/skynet/sharemap.lua	/^function sharemap:update()$/;"	f
sharetable.close	skynet/lualib/skynet/sharetable.lua	/^	function sharetable.close(source)$/;"	f
sharetable.loadfile	skynet/lualib/skynet/sharetable.lua	/^	function sharetable.loadfile(source, filename, ...)$/;"	f
sharetable.loadfile	skynet/lualib/skynet/sharetable.lua	/^function sharetable.loadfile(filename, ...)$/;"	f
sharetable.loadstring	skynet/lualib/skynet/sharetable.lua	/^	function sharetable.loadstring(source, filename, datasource, ...)$/;"	f
sharetable.loadstring	skynet/lualib/skynet/sharetable.lua	/^function sharetable.loadstring(filename, source, ...)$/;"	f
sharetable.loadtable	skynet/lualib/skynet/sharetable.lua	/^	function sharetable.loadtable(source, filename, ptr, len)$/;"	f
sharetable.loadtable	skynet/lualib/skynet/sharetable.lua	/^function sharetable.loadtable(filename, tbl)$/;"	f
sharetable.query	skynet/lualib/skynet/sharetable.lua	/^	function sharetable.query(source, filename)$/;"	f
sharetable.query	skynet/lualib/skynet/sharetable.lua	/^function sharetable.query(filename)$/;"	f
sharetable.queryall	skynet/lualib/skynet/sharetable.lua	/^    function sharetable.queryall(source, filenamelist)$/;"	f
sharetable.queryall	skynet/lualib/skynet/sharetable.lua	/^function sharetable.queryall(filenamelist)$/;"	f
sharetable.update	skynet/lualib/skynet/sharetable.lua	/^function sharetable.update(...)$/;"	f
sharetable_service	skynet/lualib/skynet/sharetable.lua	/^local function sharetable_service()$/;"	f
shift64_FIG	skynet/3rd/lua/lmathlib.c	332;"	d	file:
shiftHI	skynet/3rd/lua/lmathlib.c	489;"	d	file:
shiftLOW	skynet/3rd/lua/lmathlib.c	484;"	d	file:
short_src	skynet/3rd/lua/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
show	game/myservice/player_handler.lua	/^function show(self)$/;"	f
show_book 	game/myclient/player_client_t.lua	/^show_book = function(self)$/;"	f
show_card 	game/myclient/player_client_t.lua	/^show_card = function(self)$/;"	f
show_exp 	game/myclient/player_client_t.lua	/^show_exp = function(self)$/;"	f
show_help 	game/myclient/player_client_t.lua	/^show_help = function(self)$/;"	f
show_info 	game/myclient/player_client_t.lua	/^show_info = function(self)$/;"	f
show_items 	game/myclient/player_client_t.lua	/^show_items = function(self)$/;"	f
show_loading 	game/myclient/player_client_t.lua	/^show_loading = function(self)$/;"	f
shrlen	skynet/3rd/lua/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString
shutdown	skynet/skynet-src/socket_server.c	/^	int shutdown;$/;"	m	struct:request_close	file:
sib1	skynet/3rd/lpeg/lptree.h	83;"	d
sib2	skynet/3rd/lpeg/lptree.h	84;"	d
sigign	skynet/skynet-src/skynet_main.c	/^int sigign() {$/;"	f
signal	skynet/skynet-src/skynet_module.h	/^	skynet_dl_signal signal;$/;"	m	struct:skynet_module
signal_hook	skynet/service-src/service_snlua.c	/^signal_hook(lua_State *L, lua_Debug *ar) {$/;"	f	file:
signal_hup	skynet/skynet-src/skynet_start.c	/^signal_hup() {$/;"	f	file:
simple_echo_client_service	skynet/examples/simplewebsocket.lua	/^    local function simple_echo_client_service(protocol)$/;"	f
simpleexp	skynet/3rd/lua/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	skynet/3rd/lua/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	skynet/3rd/lua/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	skynet/3rd/lua/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	skynet/3rd/lua/lparser.c	/^static void singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
siz	skynet/3rd/lpeg/lpcap.c	/^      Index_t siz;  \/* with this size *\/$/;"	m	struct:StrAux::__anon1::__anon2	file:
siz	skynet/3rd/lpeg/lpcap.h	/^  byte siz;  \/* size of full capture + 1 (0 = not a full capture) *\/$/;"	m	struct:Capture
size	skynet/3rd/lpeg/lpcset.h	/^  int size;$/;"	m	struct:__anon3
size	skynet/3rd/lpeg/lptree.h	/^      byte size;  \/* compact set size (in bytes) *\/$/;"	m	struct:TTree::__anon4::__anon5
size	skynet/3rd/lpeg/lpvm.h	/^        byte size;$/;"	m	struct:Instruction::Inst::__anon6::__anon7
size	skynet/3rd/lua/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	skynet/3rd/lua/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	skynet/3rd/lua/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon27
size	skynet/3rd/lua/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	skynet/3rd/lua/lstate.h	/^  int size;$/;"	m	struct:stringtable
size	skynet/3rd/lua/ltests.c	/^    size_t size;$/;"	m	struct:Header::__anon35	file:
size	skynet/lualib-src/lua-bson.c	/^	int size;$/;"	m	struct:bson	file:
size	skynet/lualib-src/lua-bson.c	/^	int size;$/;"	m	struct:bson_reader	file:
size	skynet/lualib-src/lua-mongo.c	/^	int size;$/;"	m	struct:buffer	file:
size	skynet/lualib-src/lua-multicast.c	/^	uint32_t size;$/;"	m	struct:mc_package	file:
size	skynet/lualib-src/lua-netpack.c	/^	int size;$/;"	m	struct:netpack	file:
size	skynet/lualib-src/lua-socket.c	/^	int size;$/;"	m	struct:socket_buffer	file:
size	skynet/service-src/databuffer.h	/^	int size;$/;"	m	struct:databuffer
size	skynet/service-src/databuffer.h	/^	int size;$/;"	m	struct:message
size	skynet/service-src/service_harbor.c	/^	int size;$/;"	m	struct:harbor_msg_queue	file:
size	skynet/service-src/service_harbor.c	/^	size_t size;$/;"	m	struct:harbor_msg	file:
size	skynet/service-src/service_harbor.c	/^	uint8_t size[4];$/;"	m	struct:slave	file:
size	skynet/skynet-src/socket_server.c	/^		int size;$/;"	m	union:socket::__anon41	file:
size	skynet/skynet-src/socket_server.h	/^	size_t (*size)(const void *);$/;"	m	struct:socket_object_interface
sizeCclosure	skynet/3rd/lua/lfunc.h	14;"	d
sizeLclosure	skynet/3rd/lua/lfunc.h	17;"	d
sizeabslineinfo	skynet/3rd/lua/lobject.h	/^  int sizeabslineinfo;  \/* size of 'abslineinfo' *\/$/;"	m	struct:Proto
sizearray	skynet/lualib-src/lua-sharedata.c	/^	int sizearray;$/;"	m	struct:table	file:
sizecode	skynet/3rd/lua/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizehash	skynet/lualib-src/lua-sharedata.c	/^	int sizehash;$/;"	m	struct:table	file:
sizei	skynet/3rd/lpeg/lpcode.c	/^int sizei (const Instruction *i) {$/;"	f
sizek	skynet/3rd/lua/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto
sizelineinfo	skynet/3rd/lua/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	skynet/3rd/lua/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizelstring	skynet/3rd/lua/lstring.h	26;"	d
sizenode	skynet/3rd/lua/lobject.h	794;"	d
sizep	skynet/3rd/lua/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto
sizeudata	skynet/3rd/lua/lobject.h	499;"	d
sizeupvalues	skynet/3rd/lua/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
skip	skynet/3rd/lua/ltests.c	/^static void skip (const char **pc) {$/;"	f	file:
skipBOM	skynet/3rd/lua/lauxlib.c	/^static int skipBOM (FILE *f) {$/;"	f	file:
skip_hook	skynet/lualib/skynet/remotedebug.lua	/^local function skip_hook(mode)$/;"	f
skip_sep	skynet/3rd/lua/llex.c	/^static size_t skip_sep (LexState *ls) {$/;"	f	file:
skipclose	skynet/3rd/lpeg/lpcap.c	16;"	d	file:
skipcomment	skynet/3rd/lua/lauxlib.c	/^static int skipcomment (FILE *f, int *cp) {$/;"	f	file:
skynet.abort	skynet/lualib/skynet/manager.lua	/^function skynet.abort()$/;"	f
skynet.address	skynet/lualib/skynet.lua	/^function skynet.address(addr)$/;"	f
skynet.call	skynet/lualib/skynet.lua	/^function skynet.call(addr, typename, ...)$/;"	f
skynet.context	skynet/lualib/skynet.lua	/^function skynet.context()$/;"	f
skynet.dispatch	skynet/lualib/skynet.lua	/^function skynet.dispatch(typename, func)$/;"	f
skynet.dispatch_message	skynet/lualib/skynet.lua	/^function skynet.dispatch_message(...)$/;"	f
skynet.dispatch_unknown_request	skynet/lualib/skynet.lua	/^function skynet.dispatch_unknown_request(unknown)$/;"	f
skynet.dispatch_unknown_response	skynet/lualib/skynet.lua	/^function skynet.dispatch_unknown_response(unknown)$/;"	f
skynet.endless	skynet/lualib/skynet.lua	/^function skynet.endless()$/;"	f
skynet.exit	skynet/lualib/skynet.lua	/^function skynet.exit()$/;"	f
skynet.filter	skynet/lualib/skynet/manager.lua	/^function skynet.filter(f ,start_func)$/;"	f
skynet.fork	skynet/lualib/skynet.lua	/^function skynet.fork(func,...)$/;"	f
skynet.forward_type	skynet/lualib/skynet/manager.lua	/^function skynet.forward_type(map, start_func)$/;"	f
skynet.getenv	skynet/lualib/skynet.lua	/^function skynet.getenv(key)$/;"	f
skynet.harbor	skynet/lualib/skynet.lua	/^function skynet.harbor(addr)$/;"	f
skynet.ignoreret	skynet/lualib/skynet.lua	/^function skynet.ignoreret()$/;"	f
skynet.info_func	skynet/lualib/skynet/debug.lua	/^	function skynet.info_func(func)$/;"	f
skynet.init_service	skynet/lualib/skynet.lua	/^function skynet.init_service(start)$/;"	f
skynet.kill	skynet/lualib/skynet/manager.lua	/^function skynet.kill(name)$/;"	f
skynet.killthread	skynet/lualib/skynet.lua	/^function skynet.killthread(thread)$/;"	f
skynet.launch	skynet/lualib/skynet/manager.lua	/^function skynet.launch(...)$/;"	f
skynet.localname	skynet/lualib/skynet.lua	/^function skynet.localname(name)$/;"	f
skynet.memlimit	skynet/lualib/skynet.lua	/^function skynet.memlimit(bytes)$/;"	f
skynet.monitor	skynet/lualib/skynet/manager.lua	/^function skynet.monitor(service, query)$/;"	f
skynet.mqlen	skynet/lualib/skynet.lua	/^function skynet.mqlen()$/;"	f
skynet.name	skynet/lualib/skynet/manager.lua	/^function skynet.name(name, handle)$/;"	f
skynet.newservice	skynet/lualib/skynet.lua	/^function skynet.newservice(name, ...)$/;"	f
skynet.queryservice	skynet/lualib/skynet.lua	/^function skynet.queryservice(global, ...)$/;"	f
skynet.queue	skynet/lualib/skynet/queue.lua	/^function skynet.queue()$/;"	f
skynet.rawcall	skynet/lualib/skynet.lua	/^function skynet.rawcall(addr, typename, msg, sz)$/;"	f
skynet.rawsend	skynet/lualib/skynet.lua	/^function skynet.rawsend(addr, typename, msg, sz)$/;"	f
skynet.redirect 	skynet/lualib/skynet.lua	/^skynet.redirect = function(dest,source,typename,...)$/;"	f
skynet.register	skynet/lualib/skynet/manager.lua	/^function skynet.register(name)$/;"	f
skynet.register_protocol	skynet/lualib/skynet.lua	/^function skynet.register_protocol(class)$/;"	f
skynet.request	skynet/lualib/skynet.lua	/^	function skynet.request(obj)$/;"	f
skynet.response	skynet/lualib/skynet.lua	/^function skynet.response(pack)$/;"	f
skynet.ret	skynet/lualib/skynet.lua	/^function skynet.ret(msg, sz)$/;"	f
skynet.retpack	skynet/lualib/skynet.lua	/^function skynet.retpack(...)$/;"	f
skynet.self	skynet/lualib/skynet.lua	/^function skynet.self()$/;"	f
skynet.send	skynet/lualib/skynet.lua	/^function skynet.send(addr, typename, ...)$/;"	f
skynet.setenv	skynet/lualib/skynet.lua	/^function skynet.setenv(key, value)$/;"	f
skynet.sleep	skynet/lualib/skynet.lua	/^function skynet.sleep(ti, token)$/;"	f
skynet.start	skynet/lualib/skynet.lua	/^function skynet.start(start_func)$/;"	f
skynet.start 	skynet/service/service_cell.lua	/^	skynet.start = function(f)$/;"	f
skynet.starttime	skynet/lualib/skynet.lua	/^function skynet.starttime()$/;"	f
skynet.stat	skynet/lualib/skynet.lua	/^function skynet.stat(what)$/;"	f
skynet.task	skynet/lualib/skynet.lua	/^function skynet.task(ret)$/;"	f
skynet.term	skynet/lualib/skynet.lua	/^function skynet.term(service)$/;"	f
skynet.time	skynet/lualib/skynet.lua	/^function skynet.time()$/;"	f
skynet.timeout	skynet/lualib/skynet.lua	/^function skynet.timeout(ti, func)$/;"	f
skynet.trace	skynet/lualib/skynet.lua	/^function skynet.trace(info)$/;"	f
skynet.trace_timeout	skynet/lualib/skynet.lua	/^function skynet.trace_timeout(on)$/;"	f
skynet.tracecall	skynet/lualib/skynet.lua	/^function skynet.tracecall(tag, addr, typename, msg, sz)$/;"	f
skynet.traceproto	skynet/lualib/skynet.lua	/^function skynet.traceproto(prototype, flag)$/;"	f
skynet.tracetag	skynet/lualib/skynet.lua	/^function skynet.tracetag()$/;"	f
skynet.uniqtask	skynet/lualib/skynet.lua	/^function skynet.uniqtask()$/;"	f
skynet.uniqueservice	skynet/lualib/skynet.lua	/^function skynet.uniqueservice(global, ...)$/;"	f
skynet.wait	skynet/lualib/skynet.lua	/^function skynet.wait(token)$/;"	f
skynet.wakeup	skynet/lualib/skynet.lua	/^function skynet.wakeup(token)$/;"	f
skynet.yield	skynet/lualib/skynet.lua	/^function skynet.yield()$/;"	f
skynet_aligned_alloc	skynet/skynet-src/malloc_hook.c	/^skynet_aligned_alloc(size_t alignment, size_t size) {$/;"	f
skynet_aligned_alloc	skynet/skynet-src/skynet_malloc.h	11;"	d
skynet_callback	skynet/skynet-src/skynet_server.c	/^skynet_callback(struct skynet_context * context, void *ud, skynet_cb cb) {$/;"	f
skynet_calloc	skynet/skynet-src/malloc_hook.c	/^skynet_calloc(size_t nmemb,size_t size) {$/;"	f
skynet_calloc	skynet/skynet-src/skynet_malloc.h	7;"	d
skynet_cb	skynet/skynet-src/skynet.h	/^typedef int (*skynet_cb)(struct skynet_context * context, void *ud, int type, int session, uint32_t source , const void * msg, size_t sz);$/;"	t
skynet_command	skynet/skynet-src/skynet_server.c	/^skynet_command(struct skynet_context * context, const char * cmd , const char * param) {$/;"	f
skynet_config	skynet/skynet-src/skynet_imp.h	/^struct skynet_config {$/;"	s
skynet_context	skynet/skynet-src/skynet_server.c	/^struct skynet_context {$/;"	s	file:
skynet_context_dispatchall	skynet/skynet-src/skynet_server.c	/^skynet_context_dispatchall(struct skynet_context * ctx) {$/;"	f
skynet_context_endless	skynet/skynet-src/skynet_server.c	/^skynet_context_endless(uint32_t handle) {$/;"	f
skynet_context_grab	skynet/skynet-src/skynet_server.c	/^skynet_context_grab(struct skynet_context *ctx) {$/;"	f
skynet_context_handle	skynet/skynet-src/skynet_server.c	/^skynet_context_handle(struct skynet_context *ctx) {$/;"	f
skynet_context_message_dispatch	skynet/skynet-src/skynet_server.c	/^skynet_context_message_dispatch(struct skynet_monitor *sm, struct message_queue *q, int weight) {$/;"	f
skynet_context_new	skynet/skynet-src/skynet_server.c	/^skynet_context_new(const char * name, const char *param) {$/;"	f
skynet_context_newsession	skynet/skynet-src/skynet_server.c	/^skynet_context_newsession(struct skynet_context *ctx) {$/;"	f
skynet_context_push	skynet/skynet-src/skynet_server.c	/^skynet_context_push(uint32_t handle, struct skynet_message *message) {$/;"	f
skynet_context_release	skynet/skynet-src/skynet_server.c	/^skynet_context_release(struct skynet_context *ctx) {$/;"	f
skynet_context_reserve	skynet/skynet-src/skynet_server.c	/^skynet_context_reserve(struct skynet_context *ctx) {$/;"	f
skynet_context_send	skynet/skynet-src/skynet_server.c	/^skynet_context_send(struct skynet_context * ctx, void * msg, size_t sz, uint32_t source, int type, int session) {$/;"	f
skynet_context_total	skynet/skynet-src/skynet_server.c	/^skynet_context_total() {$/;"	f
skynet_current_handle	skynet/skynet-src/skynet_server.c	/^skynet_current_handle(void) {$/;"	f
skynet_daemon_h	skynet/skynet-src/skynet_daemon.h	2;"	d
skynet_databuffer_h	skynet/service-src/databuffer.h	2;"	d
skynet_debug_memory	skynet/skynet-src/malloc_hook.c	/^skynet_debug_memory(const char *info) {$/;"	f
skynet_dl_create	skynet/skynet-src/skynet_module.h	/^typedef void * (*skynet_dl_create)(void);$/;"	t
skynet_dl_init	skynet/skynet-src/skynet_module.h	/^typedef int (*skynet_dl_init)(void * inst, struct skynet_context *, const char * parm);$/;"	t
skynet_dl_release	skynet/skynet-src/skynet_module.h	/^typedef void (*skynet_dl_release)(void * inst);$/;"	t
skynet_dl_signal	skynet/skynet-src/skynet_module.h	/^typedef void (*skynet_dl_signal)(void * inst, int signal);$/;"	t
skynet_env	skynet/skynet-src/skynet_env.c	/^struct skynet_env {$/;"	s	file:
skynet_env_init	skynet/skynet-src/skynet_env.c	/^skynet_env_init() {$/;"	f
skynet_error	skynet/skynet-src/skynet_error.c	/^skynet_error(struct skynet_context * context, const char *msg, ...) {$/;"	f
skynet_free	skynet/skynet-src/malloc_hook.c	/^skynet_free(void *ptr) {$/;"	f
skynet_free	skynet/skynet-src/skynet_malloc.h	9;"	d
skynet_getenv	skynet/skynet-src/skynet_env.c	/^skynet_getenv(const char *key) {$/;"	f
skynet_globalexit	skynet/skynet-src/skynet_server.c	/^skynet_globalexit(void) {$/;"	f
skynet_globalinit	skynet/skynet-src/skynet_server.c	/^skynet_globalinit(void) {$/;"	f
skynet_globalmq_pop	skynet/skynet-src/skynet_mq.c	/^skynet_globalmq_pop() {$/;"	f
skynet_globalmq_push	skynet/skynet-src/skynet_mq.c	/^skynet_globalmq_push(struct message_queue * queue) {$/;"	f
skynet_handle_findname	skynet/skynet-src/skynet_handle.c	/^skynet_handle_findname(const char * name) {$/;"	f
skynet_handle_grab	skynet/skynet-src/skynet_handle.c	/^skynet_handle_grab(uint32_t handle) {$/;"	f
skynet_handle_init	skynet/skynet-src/skynet_handle.c	/^skynet_handle_init(int harbor) {$/;"	f
skynet_handle_namehandle	skynet/skynet-src/skynet_handle.c	/^skynet_handle_namehandle(uint32_t handle, const char *name) {$/;"	f
skynet_handle_register	skynet/skynet-src/skynet_handle.c	/^skynet_handle_register(struct skynet_context *ctx) {$/;"	f
skynet_handle_retire	skynet/skynet-src/skynet_handle.c	/^skynet_handle_retire(uint32_t handle) {$/;"	f
skynet_handle_retireall	skynet/skynet-src/skynet_handle.c	/^skynet_handle_retireall() {$/;"	f
skynet_harbor_exit	skynet/skynet-src/skynet_harbor.c	/^skynet_harbor_exit() {$/;"	f
skynet_harbor_init	skynet/skynet-src/skynet_harbor.c	/^skynet_harbor_init(int harbor) {$/;"	f
skynet_harbor_message_isremote	skynet/skynet-src/skynet_harbor.c	/^skynet_harbor_message_isremote(uint32_t handle) {$/;"	f
skynet_harbor_send	skynet/skynet-src/skynet_harbor.c	/^skynet_harbor_send(struct remote_message *rmsg, uint32_t source, int session) {$/;"	f
skynet_harbor_start	skynet/skynet-src/skynet_harbor.c	/^skynet_harbor_start(void *ctx) {$/;"	f
skynet_hashid_h	skynet/service-src/hashid.h	2;"	d
skynet_initthread	skynet/skynet-src/skynet_server.c	/^skynet_initthread(int m) {$/;"	f
skynet_isremote	skynet/skynet-src/skynet_server.c	/^skynet_isremote(struct skynet_context * ctx, uint32_t handle, int * harbor) {$/;"	f
skynet_lalloc	skynet/skynet-src/malloc_hook.c	/^skynet_lalloc(void *ptr, size_t osize, size_t nsize) {$/;"	f
skynet_log_close	skynet/skynet-src/skynet_log.c	/^skynet_log_close(struct skynet_context * ctx, FILE *f, uint32_t handle) {$/;"	f
skynet_log_h	skynet/skynet-src/skynet_log.h	2;"	d
skynet_log_open	skynet/skynet-src/skynet_log.c	/^skynet_log_open(struct skynet_context * ctx, uint32_t handle) {$/;"	f
skynet_log_output	skynet/skynet-src/skynet_log.c	/^skynet_log_output(FILE *f, uint32_t source, int type, int session, void * buffer, size_t sz) {$/;"	f
skynet_malloc	skynet/skynet-src/malloc_hook.c	/^skynet_malloc(size_t size) {$/;"	f
skynet_malloc	skynet/skynet-src/skynet_malloc.h	6;"	d
skynet_malloc_h	skynet/skynet-src/skynet_malloc.h	2;"	d
skynet_memalign	skynet/skynet-src/malloc_hook.c	/^skynet_memalign(size_t alignment, size_t size) {$/;"	f
skynet_memalign	skynet/skynet-src/skynet_malloc.h	10;"	d
skynet_message	skynet/skynet-src/skynet_mq.h	/^struct skynet_message {$/;"	s
skynet_module	skynet/skynet-src/skynet_module.h	/^struct skynet_module {$/;"	s
skynet_module_init	skynet/skynet-src/skynet_module.c	/^skynet_module_init(const char *path) {$/;"	f
skynet_module_instance_create	skynet/skynet-src/skynet_module.c	/^skynet_module_instance_create(struct skynet_module *m) {$/;"	f
skynet_module_instance_init	skynet/skynet-src/skynet_module.c	/^skynet_module_instance_init(struct skynet_module *m, void * inst, struct skynet_context *ctx, const char * parm) {$/;"	f
skynet_module_instance_release	skynet/skynet-src/skynet_module.c	/^skynet_module_instance_release(struct skynet_module *m, void *inst) {$/;"	f
skynet_module_instance_signal	skynet/skynet-src/skynet_module.c	/^skynet_module_instance_signal(struct skynet_module *m, void *inst, int signal) {$/;"	f
skynet_module_query	skynet/skynet-src/skynet_module.c	/^skynet_module_query(const char * name) {$/;"	f
skynet_monitor	skynet/skynet-src/skynet_monitor.c	/^struct skynet_monitor {$/;"	s	file:
skynet_monitor_check	skynet/skynet-src/skynet_monitor.c	/^skynet_monitor_check(struct skynet_monitor *sm) {$/;"	f
skynet_monitor_delete	skynet/skynet-src/skynet_monitor.c	/^skynet_monitor_delete(struct skynet_monitor *sm) {$/;"	f
skynet_monitor_new	skynet/skynet-src/skynet_monitor.c	/^skynet_monitor_new() {$/;"	f
skynet_monitor_trigger	skynet/skynet-src/skynet_monitor.c	/^skynet_monitor_trigger(struct skynet_monitor *sm, uint32_t source, uint32_t destination) {$/;"	f
skynet_mq_create	skynet/skynet-src/skynet_mq.c	/^skynet_mq_create(uint32_t handle) {$/;"	f
skynet_mq_handle	skynet/skynet-src/skynet_mq.c	/^skynet_mq_handle(struct message_queue *q) {$/;"	f
skynet_mq_init	skynet/skynet-src/skynet_mq.c	/^skynet_mq_init() {$/;"	f
skynet_mq_length	skynet/skynet-src/skynet_mq.c	/^skynet_mq_length(struct message_queue *q) {$/;"	f
skynet_mq_mark_release	skynet/skynet-src/skynet_mq.c	/^skynet_mq_mark_release(struct message_queue *q) {$/;"	f
skynet_mq_overload	skynet/skynet-src/skynet_mq.c	/^skynet_mq_overload(struct message_queue *q) {$/;"	f
skynet_mq_pop	skynet/skynet-src/skynet_mq.c	/^skynet_mq_pop(struct message_queue *q, struct skynet_message *message) {$/;"	f
skynet_mq_push	skynet/skynet-src/skynet_mq.c	/^skynet_mq_push(struct message_queue *q, struct skynet_message *message) {$/;"	f
skynet_mq_release	skynet/skynet-src/skynet_mq.c	/^skynet_mq_release(struct message_queue *q, message_drop drop_func, void *ud) {$/;"	f
skynet_node	skynet/skynet-src/skynet_server.c	/^struct skynet_node {$/;"	s	file:
skynet_now	skynet/skynet-src/skynet_timer.c	/^skynet_now(void) {$/;"	f
skynet_posix_memalign	skynet/skynet-src/malloc_hook.c	/^skynet_posix_memalign(void **memptr, size_t alignment, size_t size) {$/;"	f
skynet_posix_memalign	skynet/skynet-src/skynet_malloc.h	12;"	d
skynet_profile_enable	skynet/skynet-src/skynet_server.c	/^skynet_profile_enable(int enable) {$/;"	f
skynet_queryname	skynet/skynet-src/skynet_server.c	/^skynet_queryname(struct skynet_context * context, const char * name) {$/;"	f
skynet_realloc	skynet/skynet-src/malloc_hook.c	/^skynet_realloc(void *ptr, size_t size) {$/;"	f
skynet_realloc	skynet/skynet-src/skynet_malloc.h	8;"	d
skynet_send	skynet/skynet-src/skynet_server.c	/^skynet_send(struct skynet_context * context, uint32_t source, uint32_t destination , int type, int session, void * data, size_t sz) {$/;"	f
skynet_sendname	skynet/skynet-src/skynet_server.c	/^skynet_sendname(struct skynet_context * context, uint32_t source, const char * addr , int type, int session, void * data, size_t sz) {$/;"	f
skynet_setenv	skynet/skynet-src/skynet_env.c	/^skynet_setenv(const char *key, const char *value) {$/;"	f
skynet_socket_bind	skynet/skynet-src/skynet_socket.c	/^skynet_socket_bind(struct skynet_context *ctx, int fd) {$/;"	f
skynet_socket_close	skynet/skynet-src/skynet_socket.c	/^skynet_socket_close(struct skynet_context *ctx, int id) {$/;"	f
skynet_socket_connect	skynet/skynet-src/skynet_socket.c	/^skynet_socket_connect(struct skynet_context *ctx, const char *host, int port) {$/;"	f
skynet_socket_exit	skynet/skynet-src/skynet_socket.c	/^skynet_socket_exit() {$/;"	f
skynet_socket_free	skynet/skynet-src/skynet_socket.c	/^skynet_socket_free() {$/;"	f
skynet_socket_h	skynet/skynet-src/skynet_socket.h	2;"	d
skynet_socket_info	skynet/skynet-src/skynet_socket.c	/^skynet_socket_info() {$/;"	f
skynet_socket_init	skynet/skynet-src/skynet_socket.c	/^skynet_socket_init() {$/;"	f
skynet_socket_listen	skynet/skynet-src/skynet_socket.c	/^skynet_socket_listen(struct skynet_context *ctx, const char *host, int port, int backlog) {$/;"	f
skynet_socket_message	skynet/skynet-src/skynet_socket.h	/^struct skynet_socket_message {$/;"	s
skynet_socket_nodelay	skynet/skynet-src/skynet_socket.c	/^skynet_socket_nodelay(struct skynet_context *ctx, int id) {$/;"	f
skynet_socket_pause	skynet/skynet-src/skynet_socket.c	/^skynet_socket_pause(struct skynet_context *ctx, int id) {$/;"	f
skynet_socket_poll	skynet/skynet-src/skynet_socket.c	/^skynet_socket_poll() {$/;"	f
skynet_socket_send	skynet/skynet-src/skynet_socket.h	/^static inline int skynet_socket_send(struct skynet_context *ctx, int id, void *buffer, int sz) {$/;"	f
skynet_socket_send_lowpriority	skynet/skynet-src/skynet_socket.h	/^static inline int skynet_socket_send_lowpriority(struct skynet_context *ctx, int id, void *buffer, int sz) {$/;"	f
skynet_socket_sendbuffer	skynet/skynet-src/skynet_socket.c	/^skynet_socket_sendbuffer(struct skynet_context *ctx, struct socket_sendbuffer *buffer) {$/;"	f
skynet_socket_sendbuffer_lowpriority	skynet/skynet-src/skynet_socket.c	/^skynet_socket_sendbuffer_lowpriority(struct skynet_context *ctx, struct socket_sendbuffer *buffer) {$/;"	f
skynet_socket_server_h	skynet/skynet-src/socket_server.h	2;"	d
skynet_socket_shutdown	skynet/skynet-src/skynet_socket.c	/^skynet_socket_shutdown(struct skynet_context *ctx, int id) {$/;"	f
skynet_socket_start	skynet/skynet-src/skynet_socket.c	/^skynet_socket_start(struct skynet_context *ctx, int id) {$/;"	f
skynet_socket_udp	skynet/skynet-src/skynet_socket.c	/^skynet_socket_udp(struct skynet_context *ctx, const char * addr, int port) {$/;"	f
skynet_socket_udp_address	skynet/skynet-src/skynet_socket.c	/^skynet_socket_udp_address(struct skynet_socket_message *msg, int *addrsz) {$/;"	f
skynet_socket_udp_connect	skynet/skynet-src/skynet_socket.c	/^skynet_socket_udp_connect(struct skynet_context *ctx, int id, const char * addr, int port) {$/;"	f
skynet_socket_udp_send	skynet/skynet-src/skynet_socket.h	/^static inline int skynet_socket_udp_send(struct skynet_context *ctx, int id, const char * address, const void *buffer, int sz) {$/;"	f
skynet_socket_udp_sendbuffer	skynet/skynet-src/skynet_socket.c	/^skynet_socket_udp_sendbuffer(struct skynet_context *ctx, const char * address, struct socket_sendbuffer *buffer) {$/;"	f
skynet_socket_updatetime	skynet/skynet-src/skynet_socket.c	/^skynet_socket_updatetime() {$/;"	f
skynet_start	skynet/skynet-src/skynet_start.c	/^skynet_start(struct skynet_config * config) {$/;"	f
skynet_starttime	skynet/skynet-src/skynet_timer.c	/^skynet_starttime(void) {$/;"	f
skynet_strdup	skynet/skynet-src/malloc_hook.c	/^skynet_strdup(const char *str) {$/;"	f
skynet_thread_time	skynet/skynet-src/skynet_timer.c	/^skynet_thread_time(void) {$/;"	f
skynet_timeout	skynet/skynet-src/skynet_timer.c	/^skynet_timeout(uint32_t handle, int time, int session) {$/;"	f
skynet_timer_init	skynet/skynet-src/skynet_timer.c	/^skynet_timer_init(void) {$/;"	f
skynet_updatetime	skynet/skynet-src/skynet_timer.c	/^skynet_updatetime(void) {$/;"	f
skynet_yielding	skynet/lualib/skynet/coroutine.lua	/^	local function skynet_yielding(co, ...)$/;"	f
skynetco.close	skynet/lualib/skynet/coroutine.lua	/^function skynetco.close(co)$/;"	f
skynetco.create	skynet/lualib/skynet/coroutine.lua	/^function skynetco.create(f)$/;"	f
skynetco.resume	skynet/lualib/skynet/coroutine.lua	/^	function skynetco.resume(co, ...)$/;"	f
skynetco.status	skynet/lualib/skynet/coroutine.lua	/^function skynetco.status(co)$/;"	f
skynetco.thread	skynet/lualib/skynet/coroutine.lua	/^	function skynetco.thread(co)$/;"	f
skynetco.wrap	skynet/lualib/skynet/coroutine.lua	/^function skynetco.wrap(f)$/;"	f
skynetco.yield	skynet/lualib/skynet/coroutine.lua	/^function skynetco.yield(...)$/;"	f
slave	skynet/service-src/service_harbor.c	/^	uint32_t slave;$/;"	m	struct:harbor	file:
slave	skynet/service-src/service_harbor.c	/^struct slave {$/;"	s	file:
sleep	skynet/skynet-src/skynet_start.c	/^	int sleep;$/;"	m	struct:monitor	file:
slot	skynet/skynet-src/skynet_handle.c	/^	struct skynet_context ** slot;$/;"	m	struct:handle_storage	typeref:struct:handle_storage::skynet_context	file:
slot	skynet/skynet-src/socket_server.c	/^	struct socket slot[MAX_SOCKET];$/;"	m	struct:socket_server	typeref:struct:socket_server::socket	file:
slot_size	skynet/skynet-src/skynet_handle.c	/^	int slot_size;$/;"	m	struct:handle_storage	file:
snax.bind	skynet/lualib/skynet/snax.lua	/^function snax.bind(handle, type)$/;"	f
snax.enablecluster	skynet/service/snaxd.lua	/^	function snax.enablecluster()$/;"	f
snax.exit	skynet/lualib/skynet/snax.lua	/^function snax.exit(...)$/;"	f
snax.globalservice	skynet/lualib/skynet/snax.lua	/^function snax.globalservice(name, ...)$/;"	f
snax.hotfix	skynet/lualib/skynet/snax.lua	/^function snax.hotfix(obj, source, ...)$/;"	f
snax.interface	skynet/lualib/skynet/snax.lua	/^function snax.interface(name)$/;"	f
snax.kill	skynet/lualib/skynet/snax.lua	/^function snax.kill(obj, ...)$/;"	f
snax.newservice	skynet/lualib/skynet/snax.lua	/^function snax.newservice(name, ...)$/;"	f
snax.printf	skynet/lualib/skynet/snax.lua	/^function snax.printf(fmt, ...)$/;"	f
snax.profile_info	skynet/lualib/skynet/snax.lua	/^function snax.profile_info(obj)$/;"	f
snax.queryglobal	skynet/lualib/skynet/snax.lua	/^function snax.queryglobal(name)$/;"	f
snax.queryservice	skynet/lualib/skynet/snax.lua	/^function snax.queryservice(name)$/;"	f
snax.rawnewservice	skynet/lualib/skynet/snax.lua	/^function snax.rawnewservice(name, ...)$/;"	f
snax.self	skynet/lualib/skynet/snax.lua	/^function snax.self()$/;"	f
snax.uniqueservice	skynet/lualib/skynet/snax.lua	/^function snax.uniqueservice(name, ...)$/;"	f
snlua	skynet/service-src/service_snlua.c	/^struct snlua {$/;"	s	file:
snlua_create	skynet/service-src/service_snlua.c	/^snlua_create(void) {$/;"	f
snlua_init	skynet/service-src/service_snlua.c	/^snlua_init(struct snlua *l, struct skynet_context *ctx, const char * args) {$/;"	f
snlua_release	skynet/service-src/service_snlua.c	/^snlua_release(struct snlua *l) {$/;"	f
snlua_signal	skynet/service-src/service_snlua.c	/^snlua_signal(struct snlua *l, int signal) {$/;"	f
sock	skynet/lualib-src/lua-mongo.c	/^	int sock;$/;"	m	struct:connection	file:
sock_err	skynet/lualib/skynet/socketchannel.lua	/^local function sock_err(self)$/;"	f
sockaddr_all	skynet/skynet-src/socket_server.c	/^union sockaddr_all {$/;"	u	file:
socket	skynet/skynet-src/socket_server.c	/^struct socket {$/;"	s	file:
socket.abandon	skynet/lualib/skynet/socket.lua	/^function socket.abandon(id)$/;"	f
socket.bind	skynet/lualib/skynet/socket.lua	/^function socket.bind(os_fd)$/;"	f
socket.block	skynet/lualib/skynet/socket.lua	/^function socket.block(id)$/;"	f
socket.close	skynet/lualib/skynet/socket.lua	/^function socket.close(id)$/;"	f
socket.close_fd	skynet/lualib/skynet/socket.lua	/^function socket.close_fd(id)$/;"	f
socket.disconnected	skynet/lualib/skynet/socket.lua	/^function socket.disconnected(id)$/;"	f
socket.invalid	skynet/lualib/skynet/socket.lua	/^function socket.invalid(id)$/;"	f
socket.limit	skynet/lualib/skynet/socket.lua	/^function socket.limit(id, limit)$/;"	f
socket.listen	skynet/lualib/skynet/socket.lua	/^function socket.listen(host, port, backlog)$/;"	f
socket.onclose	skynet/lualib/skynet/socket.lua	/^function socket.onclose(id, callback)$/;"	f
socket.open	skynet/lualib/skynet/socket.lua	/^function socket.open(addr, port)$/;"	f
socket.pause	skynet/lualib/skynet/socket.lua	/^function socket.pause(id)$/;"	f
socket.read	skynet/lualib/skynet/socket.lua	/^function socket.read(id, sz)$/;"	f
socket.readall	skynet/lualib/skynet/socket.lua	/^function socket.readall(id)$/;"	f
socket.readline	skynet/lualib/skynet/socket.lua	/^function socket.readline(id, sep)$/;"	f
socket.shutdown	skynet/lualib/skynet/socket.lua	/^function socket.shutdown(id)$/;"	f
socket.start	skynet/lualib/skynet/socket.lua	/^function socket.start(id, func)$/;"	f
socket.stdin	skynet/lualib/skynet/socket.lua	/^function socket.stdin()$/;"	f
socket.udp	skynet/lualib/skynet/socket.lua	/^function socket.udp(callback, host, port)$/;"	f
socket.udp_connect	skynet/lualib/skynet/socket.lua	/^function socket.udp_connect(id, addr, port, callback)$/;"	f
socket.warning	skynet/lualib/skynet/socket.lua	/^function socket.warning(id, callback)$/;"	f
socket_buffer	skynet/lualib-src/lua-clientsocket.c	/^struct socket_buffer {$/;"	s	file:
socket_buffer	skynet/lualib-src/lua-socket.c	/^struct socket_buffer {$/;"	s	file:
socket_buffer_h	skynet/skynet-src/socket_buffer.h	2;"	d
socket_channel.channel	skynet/lualib/skynet/socketchannel.lua	/^function socket_channel.channel(desc)$/;"	f
socket_info	skynet/skynet-src/socket_info.h	/^struct socket_info {$/;"	s
socket_info_create	skynet/skynet-src/socket_server.c	/^socket_info_create(struct socket_info *last) {$/;"	f
socket_info_h	skynet/skynet-src/socket_info.h	2;"	d
socket_info_release	skynet/skynet-src/socket_server.c	/^socket_info_release(struct socket_info *si) {$/;"	f
socket_invalid	skynet/skynet-src/socket_server.c	/^socket_invalid(struct socket *s, int id) {$/;"	f	file:
socket_keepalive	skynet/skynet-src/socket_server.c	/^socket_keepalive(int fd) {$/;"	f	file:
socket_lock	skynet/skynet-src/socket_server.c	/^socket_lock(struct socket_lock *sl) {$/;"	f	file:
socket_lock	skynet/skynet-src/socket_server.c	/^struct socket_lock {$/;"	s	file:
socket_lock_init	skynet/skynet-src/socket_server.c	/^socket_lock_init(struct socket *s, struct socket_lock *sl) {$/;"	f	file:
socket_message	skynet/skynet-src/socket_server.h	/^struct socket_message {$/;"	s
socket_message[1] 	skynet/lualib/skynet/socket.lua	/^socket_message[1] = function(id, size, data)$/;"	f
socket_message[2] 	skynet/lualib/skynet/socket.lua	/^socket_message[2] = function(id, ud , addr)$/;"	f
socket_message[3] 	skynet/lualib/skynet/socket.lua	/^socket_message[3] = function(id)$/;"	f
socket_message[4] 	skynet/lualib/skynet/socket.lua	/^socket_message[4] = function(id, newid, addr)$/;"	f
socket_message[5] 	skynet/lualib/skynet/socket.lua	/^socket_message[5] = function(id, _, err)$/;"	f
socket_message[6] 	skynet/lualib/skynet/socket.lua	/^socket_message[6] = function(id, size, data, address)$/;"	f
socket_message[7] 	skynet/lualib/skynet/socket.lua	/^socket_message[7] = function(id, size)$/;"	f
socket_object_interface	skynet/skynet-src/socket_server.h	/^struct socket_object_interface {$/;"	s
socket_poll_h	skynet/skynet-src/socket_poll.h	2;"	d
socket_sendbuffer	skynet/skynet-src/socket_buffer.h	/^struct socket_sendbuffer {$/;"	s
socket_server	skynet/skynet-src/socket_server.c	/^struct socket_server {$/;"	s	file:
socket_server_bind	skynet/skynet-src/socket_server.c	/^socket_server_bind(struct socket_server *ss, uintptr_t opaque, int fd) {$/;"	f
socket_server_close	skynet/skynet-src/socket_server.c	/^socket_server_close(struct socket_server *ss, uintptr_t opaque, int id) {$/;"	f
socket_server_connect	skynet/skynet-src/socket_server.c	/^socket_server_connect(struct socket_server *ss, uintptr_t opaque, const char * addr, int port) {$/;"	f
socket_server_create	skynet/skynet-src/socket_server.c	/^socket_server_create(uint64_t time) {$/;"	f
socket_server_exit	skynet/skynet-src/socket_server.c	/^socket_server_exit(struct socket_server *ss) {$/;"	f
socket_server_info	skynet/skynet-src/socket_server.c	/^socket_server_info(struct socket_server *ss) {$/;"	f
socket_server_listen	skynet/skynet-src/socket_server.c	/^socket_server_listen(struct socket_server *ss, uintptr_t opaque, const char * addr, int port, int backlog) {$/;"	f
socket_server_nodelay	skynet/skynet-src/socket_server.c	/^socket_server_nodelay(struct socket_server *ss, int id) {$/;"	f
socket_server_pause	skynet/skynet-src/socket_server.c	/^socket_server_pause(struct socket_server *ss, uintptr_t opaque, int id) {$/;"	f
socket_server_poll	skynet/skynet-src/socket_server.c	/^socket_server_poll(struct socket_server *ss, struct socket_message * result, int * more) {$/;"	f
socket_server_release	skynet/skynet-src/socket_server.c	/^socket_server_release(struct socket_server *ss) {$/;"	f
socket_server_send	skynet/skynet-src/socket_server.c	/^socket_server_send(struct socket_server *ss, struct socket_sendbuffer *buf) {$/;"	f
socket_server_send_lowpriority	skynet/skynet-src/socket_server.c	/^socket_server_send_lowpriority(struct socket_server *ss, struct socket_sendbuffer *buf) {$/;"	f
socket_server_shutdown	skynet/skynet-src/socket_server.c	/^socket_server_shutdown(struct socket_server *ss, uintptr_t opaque, int id) {$/;"	f
socket_server_start	skynet/skynet-src/socket_server.c	/^socket_server_start(struct socket_server *ss, uintptr_t opaque, int id) {$/;"	f
socket_server_udp	skynet/skynet-src/socket_server.c	/^socket_server_udp(struct socket_server *ss, uintptr_t opaque, const char * addr, int port) {$/;"	f
socket_server_udp_address	skynet/skynet-src/socket_server.c	/^socket_server_udp_address(struct socket_server *ss, struct socket_message *msg, int *addrsz) {$/;"	f
socket_server_udp_connect	skynet/skynet-src/socket_server.c	/^socket_server_udp_connect(struct socket_server *ss, int id, const char * addr, int port) {$/;"	f
socket_server_udp_send	skynet/skynet-src/socket_server.c	/^socket_server_udp_send(struct socket_server *ss, const struct socket_udp_address *addr, struct socket_sendbuffer *buf) {$/;"	f
socket_server_updatetime	skynet/skynet-src/socket_server.c	/^socket_server_updatetime(struct socket_server *ss, uint64_t time) {$/;"	f
socket_server_userobject	skynet/skynet-src/socket_server.c	/^socket_server_userobject(struct socket_server *ss, struct socket_object_interface *soi) {$/;"	f
socket_stat	skynet/skynet-src/socket_server.c	/^struct socket_stat {$/;"	s	file:
socket_trylock	skynet/skynet-src/socket_server.c	/^socket_trylock(struct socket_lock *sl) {$/;"	f	file:
socket_unlock	skynet/skynet-src/socket_server.c	/^socket_unlock(struct socket_lock *sl) {$/;"	f	file:
sockethelper.close	skynet/lualib/http/sockethelper.lua	/^function sockethelper.close(fd)$/;"	f
sockethelper.connect	skynet/lualib/http/sockethelper.lua	/^function sockethelper.connect(host, port, timeout)$/;"	f
sockethelper.readfunc	skynet/lualib/http/sockethelper.lua	/^function sockethelper.readfunc(fd, pre)$/;"	f
sockethelper.shutdown	skynet/lualib/http/sockethelper.lua	/^function sockethelper.shutdown(fd)$/;"	f
sockethelper.writefunc	skynet/lualib/http/sockethelper.lua	/^function sockethelper.writefunc(fd)$/;"	f
sof	skynet/3rd/lua/ltablib.c	238;"	d	file:
soi	skynet/skynet-src/socket_server.c	/^	struct socket_object_interface soi;$/;"	m	struct:socket_server	typeref:struct:socket_server::socket_object_interface	file:
solvegoto	skynet/3rd/lua/lparser.c	/^static void solvegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
solvegotos	skynet/3rd/lua/lparser.c	/^static int solvegotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
sort	skynet/3rd/lua/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	skynet/3rd/lua/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
source	skynet/3rd/lua/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	skynet/3rd/lua/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	skynet/3rd/lua/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
source	skynet/lualib-src/lua-skynet.c	/^	const char * source;$/;"	m	struct:source_info	file:
source	skynet/service-src/service_harbor.c	/^	uint32_t source;$/;"	m	struct:remote_message_header	file:
source	skynet/skynet-src/skynet_monitor.c	/^	uint32_t source;$/;"	m	struct:skynet_monitor	file:
source	skynet/skynet-src/skynet_mq.h	/^	uint32_t source;$/;"	m	struct:skynet_message
source_info	skynet/lualib-src/lua-skynet.c	/^struct source_info {$/;"	s	file:
sp_add	skynet/skynet-src/socket_epoll.h	/^sp_add(int efd, int sock, void *ud) {$/;"	f
sp_add	skynet/skynet-src/socket_kqueue.h	/^sp_add(int kfd, int sock, void *ud) {$/;"	f
sp_create	skynet/skynet-src/socket_epoll.h	/^sp_create() {$/;"	f
sp_create	skynet/skynet-src/socket_kqueue.h	/^sp_create() {$/;"	f
sp_del	skynet/skynet-src/socket_epoll.h	/^sp_del(int efd, int sock) {$/;"	f
sp_del	skynet/skynet-src/socket_kqueue.h	/^sp_del(int kfd, int sock) {$/;"	f
sp_enable	skynet/skynet-src/socket_epoll.h	/^sp_enable(int efd, int sock, void *ud, bool read_enable, bool write_enable) {$/;"	f
sp_enable	skynet/skynet-src/socket_kqueue.h	/^sp_enable(int kfd, int sock, void *ud, bool read_enable, bool write_enable) {$/;"	f
sp_invalid	skynet/skynet-src/socket_epoll.h	/^sp_invalid(int efd) {$/;"	f
sp_invalid	skynet/skynet-src/socket_kqueue.h	/^sp_invalid(int kfd) {$/;"	f
sp_nonblocking	skynet/skynet-src/socket_epoll.h	/^sp_nonblocking(int fd) {$/;"	f
sp_nonblocking	skynet/skynet-src/socket_kqueue.h	/^sp_nonblocking(int fd) {$/;"	f
sp_release	skynet/skynet-src/socket_epoll.h	/^sp_release(int efd) {$/;"	f
sp_release	skynet/skynet-src/socket_kqueue.h	/^sp_release(int kfd) {$/;"	f
sp_wait	skynet/skynet-src/socket_epoll.h	/^sp_wait(int efd, struct event *e, int max) {$/;"	f
sp_wait	skynet/skynet-src/socket_kqueue.h	/^sp_wait(int kfd, struct event *e, int max) {$/;"	f
space	skynet/3rd/lua/lobject.c	/^  char space[BUFVFS];  \/* holds last part of the result *\/$/;"	m	struct:BuffFS	file:
sparser.dump	skynet/lualib/sprotoparser.lua	/^function sparser.dump(str)$/;"	f
sparser.parse	skynet/lualib/sprotoparser.lua	/^function sparser.parse(text, name)$/;"	f
spinlock	skynet/skynet-src/spinlock.h	/^struct spinlock {$/;"	s
spinlock_destroy	skynet/skynet-src/spinlock.h	/^spinlock_destroy(struct spinlock *lock) {$/;"	f
spinlock_init	skynet/skynet-src/spinlock.h	/^spinlock_init(struct spinlock *lock) {$/;"	f
spinlock_lock	skynet/skynet-src/spinlock.h	/^spinlock_lock(struct spinlock *lock) {$/;"	f
spinlock_trylock	skynet/skynet-src/spinlock.h	/^spinlock_trylock(struct spinlock *lock) {$/;"	f
spinlock_unlock	skynet/skynet-src/spinlock.h	/^spinlock_unlock(struct spinlock *lock) {$/;"	f
split	skynet/3rd/lpeg/lpeg.html	/^function split (s, sep)$/;"	f
split_cmdline	skynet/service/console.lua	/^local function split_cmdline(cmdline)$/;"	f
split_cmdline	skynet/service/debug_console.lua	/^local function split_cmdline(cmdline)$/;"	f
sproto	skynet/lualib-src/sproto/sproto.c	/^struct sproto {$/;"	s	file:
sproto.new	skynet/lualib/sproto.lua	/^function sproto.new(bin)$/;"	f
sproto.parse	skynet/lualib/sproto.lua	/^function sproto.parse(ptext)$/;"	f
sproto.sharenew	skynet/lualib/sproto.lua	/^function sproto.sharenew(cobj)$/;"	f
sproto:decode	skynet/lualib/sproto.lua	/^function sproto:decode(typename, ...)$/;"	f
sproto:default	skynet/lualib/sproto.lua	/^function sproto:default(typename, type)$/;"	f
sproto:encode	skynet/lualib/sproto.lua	/^function sproto:encode(typename, tbl)$/;"	f
sproto:exist_proto	skynet/lualib/sproto.lua	/^function sproto:exist_proto(pname)$/;"	f
sproto:exist_type	skynet/lualib/sproto.lua	/^function sproto:exist_type(typename)$/;"	f
sproto:host	skynet/lualib/sproto.lua	/^function sproto:host( packagename )$/;"	f
sproto:pdecode	skynet/lualib/sproto.lua	/^function sproto:pdecode(typename, ...)$/;"	f
sproto:pencode	skynet/lualib/sproto.lua	/^function sproto:pencode(typename, tbl)$/;"	f
sproto:request_decode	skynet/lualib/sproto.lua	/^function sproto:request_decode(protoname, ...)$/;"	f
sproto:request_encode	skynet/lualib/sproto.lua	/^function sproto:request_encode(protoname, tbl)$/;"	f
sproto:response_decode	skynet/lualib/sproto.lua	/^function sproto:response_decode(protoname, ...)$/;"	f
sproto:response_encode	skynet/lualib/sproto.lua	/^function sproto:response_encode(protoname, tbl)$/;"	f
sproto_arg	skynet/lualib-src/sproto/sproto.h	/^struct sproto_arg {$/;"	s
sproto_callback	skynet/lualib-src/sproto/sproto.h	/^typedef int (*sproto_callback)(const struct sproto_arg *args);$/;"	t
sproto_create	skynet/lualib-src/sproto/sproto.c	/^sproto_create(const void * proto, size_t sz) {$/;"	f
sproto_decode	skynet/lualib-src/sproto/sproto.c	/^sproto_decode(const struct sproto_type *st, const void * data, int size, sproto_callback cb, void *ud) {$/;"	f
sproto_dump	skynet/lualib-src/sproto/sproto.c	/^sproto_dump(struct sproto *s) {$/;"	f
sproto_encode	skynet/lualib-src/sproto/sproto.c	/^sproto_encode(const struct sproto_type *st, void * buffer, int size, sproto_callback cb, void *ud) {$/;"	f
sproto_h	skynet/lualib-src/sproto/sproto.h	2;"	d
sproto_mt:__gc	skynet/lualib/sproto.lua	/^function sproto_mt:__gc()$/;"	f
sproto_name	skynet/lualib-src/sproto/sproto.c	/^sproto_name(struct sproto_type * st) {$/;"	f
sproto_pack	skynet/lualib-src/sproto/sproto.c	/^sproto_pack(const void * srcv, int srcsz, void * bufferv, int bufsz) {$/;"	f
sproto_protoname	skynet/lualib-src/sproto/sproto.c	/^sproto_protoname(const struct sproto *sp, int proto) {$/;"	f
sproto_protoquery	skynet/lualib-src/sproto/sproto.c	/^sproto_protoquery(const struct sproto *sp, int proto, int what) {$/;"	f
sproto_protoresponse	skynet/lualib-src/sproto/sproto.c	/^sproto_protoresponse(const struct sproto * sp, int proto) {$/;"	f
sproto_prototag	skynet/lualib-src/sproto/sproto.c	/^sproto_prototag(const struct sproto *sp, const char * name) {$/;"	f
sproto_release	skynet/lualib-src/sproto/sproto.c	/^sproto_release(struct sproto * s) {$/;"	f
sproto_type	skynet/lualib-src/sproto/sproto.c	/^sproto_type(const struct sproto *sp, const char * type_name) {$/;"	f
sproto_type	skynet/lualib-src/sproto/sproto.c	/^struct sproto_type {$/;"	s	file:
sproto_unpack	skynet/lualib-src/sproto/sproto.c	/^sproto_unpack(const void * srcv, int srcsz, void * bufferv, int bufsz) {$/;"	f
src	skynet/3rd/lua/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:
src_end	skynet/3rd/lua/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	skynet/3rd/lua/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
srclen	skynet/3rd/lua/lua.h	/^  size_t srclen;	\/* (S) *\/$/;"	m	struct:lua_Debug
ssl	skynet/lualib-src/ltls.c	/^    SSL* ssl;$/;"	m	struct:tls_context	file:
ssl_ctx	skynet/lualib-src/ltls.c	/^struct ssl_ctx {$/;"	s	file:
st	skynet/lualib-src/sproto/lsproto.c	/^	struct sproto_type *st;$/;"	m	struct:encode_ud	typeref:struct:encode_ud::sproto_type	file:
st	skynet/lualib-src/sproto/sproto.c	/^	struct sproto_type * st;$/;"	m	struct:field	typeref:struct:field::sproto_type	file:
stack	skynet/3rd/lua/lstate.h	/^  StkIdRel stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	skynet/3rd/lua/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	skynet/3rd/lua/lstate.h	/^  StkIdRel stack_last;  \/* end of stack (last element + 1) *\/$/;"	m	struct:lua_State
stackidx	skynet/3rd/lpeg/lptypes.h	80;"	d
stackinuse	skynet/3rd/lua/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacklevel	skynet/3rd/lua/ltests.c	/^static int stacklevel (lua_State *L) {$/;"	f	file:
stacksize	skynet/3rd/lua/lstate.h	147;"	d
start	skynet/skynet-src/skynet_start.c	/^start(int thread) {$/;"	f	file:
start_capture	skynet/3rd/lua/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_dig_mine 	game/myservice/player_t.lua	/^start_dig_mine = function(self)$/;"	f
start_listen	skynet/service-src/service_gate.c	/^start_listen(struct gate *g, char * listen_addr) {$/;"	f	file:
start_sell 	game/myservice/city_t.lua	/^start_sell = function(self, agent, name, items)$/;"	f
start_sell 	game/myservice/player_t.lua	/^start_sell = function(self)$/;"	f
starting_from	skynet/lualib-src/lua-mongo.c	/^	int starting_from;$/;"	m	struct:response	file:
startpc	skynet/3rd/lua/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
starttime	skynet/service-src/service_logger.c	/^	uint32_t starttime;$/;"	m	struct:logger	file:
starttime	skynet/skynet-src/skynet_timer.c	/^	uint32_t starttime; \/* toby@2022-03-10): 启动时间 *\/$/;"	m	struct:timer	file:
stat	skynet/skynet-src/socket_server.c	/^	struct socket_stat stat;$/;"	m	struct:socket	typeref:struct:socket::socket_stat	file:
stat_read	skynet/skynet-src/socket_server.c	/^stat_read(struct socket_server *ss, struct socket *s, int n) {$/;"	f	file:
stat_write	skynet/skynet-src/socket_server.c	/^stat_write(struct socket_server *ss, struct socket *s, int n) {$/;"	f	file:
statcodes	skynet/3rd/lua/ltests.c	/^static const char *const statcodes[] = {"OK", "YIELD", "ERRRUN",$/;"	v	file:
state	skynet/lualib-src/lsha1.c	/^	uint32_t state[5];$/;"	m	struct:__anon39	file:
state	skynet/lualib-src/lua-sharedata.c	/^struct state {$/;"	s	file:
state_check_on_rpc 	game/myservice/player_t.lua	/^state_check_on_rpc = function(self, fname, args)$/;"	f
state_ud	skynet/lualib-src/lua-sharetable.c	/^struct state_ud {$/;"	s	file:
statement	skynet/3rd/lua/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	skynet/3rd/lua/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
statname	skynet/3rd/lua/lcorolib.c	/^static const char *const statname[] =$/;"	v	file:
status	skynet/3rd/lua/ldo.c	/^  int status;$/;"	m	struct:CloseP	file:
status	skynet/3rd/lua/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	skynet/3rd/lua/ldump.c	/^  int status;$/;"	m	struct:__anon9	file:
status	skynet/3rd/lua/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status	skynet/service-src/service_harbor.c	/^	int status;$/;"	m	struct:slave	file:
status	skynet/test/testcoroutine.lua	/^local function status(co)$/;"	f
stepgenfull	skynet/3rd/lua/lgc.c	/^static void stepgenfull (lua_State *L, global_State *g) {$/;"	f	file:
stm_copy	skynet/lualib-src/lua-stm.c	/^stm_copy(struct stm_object *obj) {$/;"	f	file:
stm_copy	skynet/lualib-src/lua-stm.c	/^struct stm_copy {$/;"	s	file:
stm_grab	skynet/lualib-src/lua-stm.c	/^stm_grab(struct stm_object *obj) {$/;"	f	file:
stm_new	skynet/lualib-src/lua-stm.c	/^stm_new(void * msg, int32_t sz) {$/;"	f	file:
stm_newcopy	skynet/lualib-src/lua-stm.c	/^stm_newcopy(void * msg, int32_t sz) {$/;"	f	file:
stm_object	skynet/lualib-src/lua-stm.c	/^struct stm_object {$/;"	s	file:
stm_release	skynet/lualib-src/lua-stm.c	/^stm_release(struct stm_object *obj) {$/;"	f	file:
stm_releasecopy	skynet/lualib-src/lua-stm.c	/^stm_releasecopy(struct stm_copy *copy) {$/;"	f	file:
stm_releasereader	skynet/lualib-src/lua-stm.c	/^stm_releasereader(struct stm_object *obj) {$/;"	f	file:
stm_update	skynet/lualib-src/lua-stm.c	/^stm_update(struct stm_object *obj, void *msg, int32_t sz) {$/;"	f	file:
store_types["nil"] 	skynet/lualib/skynet/db/mysql.lua	/^store_types["nil"] = function(v)$/;"	f
str2K	skynet/3rd/lua/lcode.c	/^static void str2K (FuncState *fs, expdesc *e) {$/;"	f	file:
str_Writer	skynet/3rd/lua/lstrlib.c	/^struct str_Writer {$/;"	s	file:
str_byte	skynet/3rd/lua/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	skynet/3rd/lua/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	skynet/3rd/lua/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	skynet/3rd/lua/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	skynet/3rd/lua/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	skynet/3rd/lua/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	skynet/3rd/lua/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	skynet/3rd/lua/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	skynet/3rd/lua/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	skynet/3rd/lua/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	skynet/3rd/lua/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_pack	skynet/3rd/lua/lstrlib.c	/^static int str_pack (lua_State *L) {$/;"	f	file:
str_packsize	skynet/3rd/lua/lstrlib.c	/^static int str_packsize (lua_State *L) {$/;"	f	file:
str_rep	skynet/3rd/lua/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	skynet/3rd/lua/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	skynet/3rd/lua/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_unpack	skynet/3rd/lua/lstrlib.c	/^static int str_unpack (lua_State *L) {$/;"	f	file:
str_upper	skynet/3rd/lua/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcache	skynet/3rd/lua/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State
stream:close	skynet/lualib/http/internal.lua	/^function stream:close()$/;"	f
stream:padding	skynet/lualib/http/internal.lua	/^function stream:padding()$/;"	f
stream_all	skynet/lualib/http/internal.lua	/^local function stream_all(stream)$/;"	f
stream_chunked	skynet/lualib/http/internal.lua	/^local function stream_chunked(stream)$/;"	f
stream_length	skynet/lualib/http/internal.lua	/^local function stream_length(length)$/;"	f
stream_nobody	skynet/lualib/http/internal.lua	/^local function stream_nobody(stream)$/;"	f
stream_read	skynet/lualib/http/internal.lua	/^local function stream_read(stream)$/;"	f
string	skynet/lualib-src/lua-sharedata.c	/^	int string;$/;"	m	union:value	file:
string 	skynet/lualib/skynet/db/mysql.lua	/^    string = function(v)$/;"	f
stringK	skynet/3rd/lua/lcode.c	/^static int stringK (FuncState *fs, TString *s) {$/;"	f	file:
string_index	skynet/lualib-src/lua-sharedata.c	/^	int string_index;$/;"	m	struct:context	file:
string_query	skynet/3rd/lua/ltests.c	/^static int string_query (lua_State *L) {$/;"	f	file:
stringcap	skynet/3rd/lpeg/lpcap.c	/^static void stringcap (luaL_Buffer *b, CapState *cs) {$/;"	f	file:
stringify	game/myservice/tool.lua	/^function stringify(object, depth, maxlen)$/;"	f
stringindex	skynet/lualib-src/lua-sharedata.c	/^stringindex(struct context *ctx, const char * str, size_t sz) {$/;"	f	file:
stringmetamethods	skynet/3rd/lua/lstrlib.c	/^static const luaL_Reg stringmetamethods[] = {$/;"	v	file:
stringtable	skynet/3rd/lua/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	skynet/3rd/lua/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	skynet/3rd/lua/ldump.c	/^  int strip;$/;"	m	struct:__anon9	file:
stripping	skynet/3rd/lua/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	skynet/3rd/lua/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strt	skynet/3rd/lua/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
strtbl	skynet/lualib-src/lua-datasheet.c	/^	uint32_t strtbl;$/;"	m	struct:document	file:
struct_field	skynet/lualib-src/sproto/sproto.c	/^struct_field(const uint8_t * stream, size_t sz) {$/;"	f	file:
strval	skynet/3rd/lua/lparser.h	/^    TString *strval;  \/* for VKSTR *\/$/;"	m	union:expdesc::__anon23
subexpr	skynet/3rd/lua/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
substcap	skynet/3rd/lpeg/lpcap.c	/^static void substcap (luaL_Buffer *b, CapState *cs) {$/;"	f	file:
subtype	skynet/lualib-src/sproto/sproto.h	/^	struct sproto_type *subtype;$/;"	m	struct:sproto_arg	typeref:struct:sproto_arg::sproto_type
suffixedexp	skynet/3rd/lua/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
survival	skynet/3rd/lua/lstate.h	/^  GCObject *survival;  \/* start of objects that survived one GC cycle *\/$/;"	m	struct:global_State
suspend	skynet/lualib/skynet.lua	/^function suspend(co, result, command)$/;"	f
suspend	skynet/lualib/skynet/dns.lua	/^local function suspend(tid, name, qtype)$/;"	f
suspend	skynet/lualib/skynet/socket.lua	/^local function suspend(s)$/;"	f
suspend_sleep	skynet/lualib/skynet.lua	/^local function suspend_sleep(session, token)$/;"	f
svalue	skynet/3rd/lua/lobject.h	408;"	d
swapexps	skynet/3rd/lua/lcode.c	/^static void swapexps (expdesc *e1, expdesc *e2) {$/;"	f	file:
sweep2old	skynet/3rd/lua/lgc.c	/^static void sweep2old (lua_State *L, GCObject **p) {$/;"	f	file:
sweepgc	skynet/3rd/lua/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State
sweepgen	skynet/3rd/lua/lgc.c	/^static GCObject **sweepgen (lua_State *L, global_State *g, GCObject **p,$/;"	f	file:
sweeplist	skynet/3rd/lua/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, int countin,$/;"	f	file:
sweepstep	skynet/3rd/lua/lgc.c	/^static int sweepstep (lua_State *L, global_State *g,$/;"	f	file:
sweeptolive	skynet/3rd/lua/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p) {$/;"	f	file:
switchL	skynet/service-src/service_snlua.c	/^switchL(lua_State *L, struct snlua *l) {$/;"	f	file:
sync.once.Do	skynet/lualib/skynet/db/redis/cluster.lua	/^function sync.once.Do(id,func,...)$/;"	f
sys	request_ak.py	/^import sys$/;"	i
syslib	skynet/3rd/lua/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
system_print 	game/myclient/player_client_t.lua	/^system_print = function(self, fmt, ...)$/;"	f
systime	skynet/skynet-src/skynet_timer.c	/^systime(uint32_t *sec, uint32_t *cs) {$/;"	f	file:
sz	skynet/lualib-src/lua-clientsocket.c	/^	int sz;$/;"	m	struct:socket_buffer	file:
sz	skynet/lualib-src/lua-debugchannel.c	/^	size_t sz;$/;"	m	struct:command	file:
sz	skynet/lualib-src/lua-socket.c	/^	int sz;$/;"	m	struct:buffer_node	file:
sz	skynet/lualib-src/lua-stm.c	/^	uint32_t sz;$/;"	m	struct:stm_copy	file:
sz	skynet/skynet-src/skynet_harbor.h	/^	size_t sz;$/;"	m	struct:remote_message
sz	skynet/skynet-src/skynet_mq.h	/^	size_t sz;$/;"	m	struct:skynet_message
sz	skynet/skynet-src/socket_buffer.h	/^	size_t sz;$/;"	m	struct:socket_sendbuffer
sz	skynet/skynet-src/socket_server.c	/^	size_t sz;$/;"	m	struct:request_send	file:
sz	skynet/skynet-src/socket_server.c	/^	size_t sz;$/;"	m	struct:send_object	file:
sz	skynet/skynet-src/socket_server.c	/^	size_t sz;$/;"	m	struct:write_buffer	file:
t	skynet/3rd/lua/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	skynet/3rd/lua/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	skynet/3rd/lua/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon23::__anon24
t	skynet/3rd/lua/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc
t	skynet/skynet-src/skynet_timer.c	/^	struct link_list t[4][TIME_LEVEL];$/;"	m	struct:timer	typeref:struct:timer::link_list	file:
t 	skynet/3rd/lpeg/test.lua	/^t = m.match(m.Ct((m.C(1) \/ function (x,y) return y, x end * m.Cc(1))^0), "abc")$/;"	f
t 	skynet/3rd/lpeg/test.lua	/^t = {m.match((m.C(1) \/ function (x) return x, x.."x" end)^0, "abc")}$/;"	f
t.monitor[source]	skynet/lualib/skynet/datasheet/builder.lua	/^		t.monitor[source]= function(ok, handle)$/;"	f
t[cmd] 	skynet/lualib/skynet/db/redis/cluster.lua	/^		t[cmd] = function (self,...)$/;"	f
tab_funcs	skynet/3rd/lua/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	skynet/lualib-src/lua-datasheet.c	/^struct table {$/;"	s	file:
table	skynet/lualib-src/lua-sharedata.c	/^struct table {$/;"	s	file:
table.acquire	game/myservice/table_ext.lua	/^function table.acquire(t, ...)$/;"	f
table.add	game/myservice/table_ext.lua	/^function table.add(...)$/;"	f
table.addM	game/myservice/table_ext.lua	/^function table.addM(t1, ...)$/;"	f
table.add_readonly 	game/myservice/table_ext.lua	/^table.add_readonly = function(t)$/;"	f
table.append	game/myservice/table_ext.lua	/^function table.append(t1, t2)$/;"	f
table.appendM	game/myservice/table_ext.lua	/^function table.appendM(t1, t2)$/;"	f
table.bound_high 	game/myservice/table_ext.lua	/^table.bound_high = function(t, standard, high, low)$/;"	f
table.cleanup	game/myservice/table_ext.lua	/^function table.cleanup(t)$/;"	f
table.clear	game/myservice/table_ext.lua	/^function table.clear(t, ...)$/;"	f
table.cmp	game/myservice/table_ext.lua	/^function table.cmp(a, b)$/;"	f
table.count	game/myservice/table_ext.lua	/^function table.count(t, value)$/;"	f
table.detect	game/myservice/table_ext.lua	/^function table.detect(t, value, ...)$/;"	f
table.empty	game/myservice/table_ext.lua	/^function table.empty(val)$/;"	f
table.extend	game/myservice/table_ext.lua	/^function table.extend(t1, ...)$/;"	f
table.filter	game/myservice/table_ext.lua	/^function table.filter(t, f, ...)$/;"	f
table.filter_keys	game/myservice/table_ext.lua	/^function table.filter_keys(t, f, ...)$/;"	f
table.find	game/myservice/table_ext.lua	/^function table.find(t, f, ...)$/;"	f
table.find_index	game/myservice/table_ext.lua	/^function table.find_index(t, f)$/;"	f
table.first_equal	game/myservice/table_ext.lua	/^function table.first_equal(t, f, ...)$/;"	f
table.flatten	game/myservice/table_ext.lua	/^function table.flatten(t)$/;"	f
table.fold	game/myservice/table_ext.lua	/^function table.fold(t, d, fn)$/;"	f
table.foreach 	game/myservice/table_ext.lua	/^table.foreach = table.foreach or function(t, func)$/;"	f
table.foreachi 	game/myservice/table_ext.lua	/^table.foreachi = table.foreachi or function(t, func)$/;"	f
table.get	game/myservice/table_ext.lua	/^function table.get(t, k)$/;"	f
table.icompare	game/myservice/table_ext.lua	/^function table.icompare(t1, t2)$/;"	f
table.index	game/myservice/table_ext.lua	/^function table.index(t, val)$/;"	f
table.inject	game/myservice/table_ext.lua	/^function table.inject(t, ...)$/;"	f
table.is_array	game/myservice/table_ext.lua	/^function table.is_array(t)$/;"	f
table.is_empty	game/myservice/table_ext.lua	/^function table.is_empty(val)$/;"	f
table.keys	game/myservice/table_ext.lua	/^function table.keys(t)$/;"	f
table.last_equal	game/myservice/table_ext.lua	/^function table.last_equal(t, f, ...)$/;"	f
table.len	game/myservice/table_ext.lua	/^function table.len(t)$/;"	f
table.len_val	game/myservice/table_ext.lua	/^function table.len_val(t, val)$/;"	f
table.list2pair 	game/myservice/table_ext.lua	/^table.list2pair = function(t)$/;"	f
table.list_del 	game/myservice/table_ext.lua	/^table.list_del = function(list, val)$/;"	f
table.map	game/myservice/table_ext.lua	/^function table.map(t, func, ...)$/;"	f
table.maxkey	game/myservice/table_ext.lua	/^function table.maxkey(t)$/;"	f
table.merge	game/myservice/table_ext.lua	/^function table.merge(...)$/;"	f
table.mergeM	game/myservice/table_ext.lua	/^function table.mergeM(t1, t2)$/;"	f
table.multiply	game/myservice/table_ext.lua	/^function table.multiply(t, x)$/;"	f
table.not_empty	game/myservice/table_ext.lua	/^function table.not_empty(val)$/;"	f
table.pack 	game/myservice/table_ext.lua	/^table.pack = table.pack or function(...)$/;"	f
table.pair2list 	game/myservice/table_ext.lua	/^table.pair2list = function(t)$/;"	f
table.peek	game/myservice/table_ext.lua	/^function table.peek(tab, ...)$/;"	f
table.pick	game/myservice/table_ext.lua	/^function table.pick(tab, keys)$/;"	f
table.range	game/myservice/table_ext.lua	/^function table.range(tab, start, stop, step)$/;"	f
table.reverse	game/myservice/table_ext.lua	/^function table.reverse(t)$/;"	f
table.search	game/myservice/table_ext.lua	/^function table.search(t, value, ...)$/;"	f
table.set_readonly 	game/myservice/table_ext.lua	/^table.set_readonly = function(t)$/;"	f
table.shallow_copy	game/myservice/table_ext.lua	/^function table.shallow_copy(data)$/;"	f
table.slice	game/myservice/table_ext.lua	/^function table.slice(t, start, stop, step)$/;"	f
table.sub	game/myservice/table_ext.lua	/^function table.sub(base, ...)$/;"	f
table.subM	game/myservice/table_ext.lua	/^function table.subM(t1, ...)$/;"	f
table.sum	game/myservice/table_ext.lua	/^function table.sum(t)$/;"	f
table.sum_by_key	game/myservice/table_ext.lua	/^function table.sum_by_key(t, key)$/;"	f
table.swap	game/myservice/table_ext.lua	/^function table.swap(t)$/;"	f
table.topk	game/myservice/table_ext.lua	/^function table.topk(t, knum, lesscmp)$/;"	f
table.update	game/myservice/table_ext.lua	/^function table.update(t1, ...)$/;"	f
table.values	game/myservice/table_ext.lua	/^function table.values(t)$/;"	f
table.weak	game/myservice/table_ext.lua	/^function table.weak(mode)$/;"	f
table_query	skynet/3rd/lua/ltests.c	/^static int table_query (lua_State *L) {$/;"	f	file:
tablecap	skynet/3rd/lpeg/lpcap.c	/^static int tablecap (CapState *cs) {$/;"	f	file:
tablerehash	skynet/3rd/lua/lstring.c	/^static void tablerehash (TString **vect, int osize, int nsize) {$/;"	f	file:
tag	skynet/3rd/lpeg/lptree.h	/^  byte tag;$/;"	m	struct:TTree
tag	skynet/lualib-src/sproto/sproto.c	/^	int tag;$/;"	m	struct:field	file:
tag	skynet/lualib-src/sproto/sproto.c	/^	int tag;$/;"	m	struct:protocol	file:
tag_error	skynet/3rd/lua/lauxlib.c	/^static void tag_error (lua_State *L, int arg, int tag) {$/;"	f	file:
tagid	skynet/lualib-src/sproto/sproto.h	/^	int tagid;$/;"	m	struct:sproto_arg
tagname	skynet/lualib-src/sproto/sproto.h	/^	const char *tagname;$/;"	m	struct:sproto_arg
tagnames	skynet/3rd/lpeg/lpprint.c	/^static const char *tagnames[] = {$/;"	v	file:
tail	skynet/lualib-src/lua-clientsocket.c	/^	int tail;$/;"	m	struct:queue	file:
tail	skynet/lualib-src/lua-debugchannel.c	/^	struct command * tail;$/;"	m	struct:channel	typeref:struct:channel::command	file:
tail	skynet/lualib-src/lua-netpack.c	/^	int tail;$/;"	m	struct:queue	file:
tail	skynet/lualib-src/lua-socket.c	/^	struct buffer_node *tail;$/;"	m	struct:socket_buffer	typeref:struct:socket_buffer::buffer_node	file:
tail	skynet/service-src/databuffer.h	/^	struct message * tail;$/;"	m	struct:databuffer	typeref:struct:databuffer::message
tail	skynet/service-src/service_harbor.c	/^	int tail;$/;"	m	struct:harbor_msg_queue	file:
tail	skynet/skynet-src/skynet_mq.c	/^	int tail;$/;"	m	struct:message_queue	file:
tail	skynet/skynet-src/skynet_mq.c	/^	struct message_queue *tail;$/;"	m	struct:global_queue	typeref:struct:global_queue::message_queue	file:
tail	skynet/skynet-src/skynet_timer.c	/^	struct timer_node *tail;$/;"	m	struct:link_list	typeref:struct:link_list::timer_node	file:
tail	skynet/skynet-src/socket_server.c	/^	struct write_buffer * tail;$/;"	m	struct:wb_list	typeref:struct:wb_list::write_buffer	file:
talk	game/myservice/player_handler.lua	/^function talk(self, args)$/;"	f
talk 	game/myservice/npc_t.lua	/^talk = function(self, clear, question, ...)$/;"	f
target	skynet/3rd/lpeg/lpcode.c	515;"	d	file:
tbclist	skynet/3rd/lua/lobject.h	/^  } tbclist;$/;"	m	union:StackValue	typeref:struct:StackValue::__anon13
tbclist	skynet/3rd/lua/lstate.h	/^  StkIdRel tbclist;  \/* list of to-be-closed variables *\/$/;"	m	struct:lua_State
tbl	skynet/lualib-src/lua-sharedata.c	/^	struct table * tbl;$/;"	m	struct:context	typeref:struct:context::table	file:
tbl	skynet/lualib-src/lua-sharedata.c	/^	struct table * tbl;$/;"	m	union:value	typeref:struct:value::table	file:
tbl_index	skynet/lualib-src/sproto/lsproto.c	/^	int tbl_index;$/;"	m	struct:encode_ud	file:
tbl_next	skynet/test/testbson.lua	/^local function tbl_next(...)$/;"	f
tbl_pairs	skynet/test/testbson.lua	/^local function tbl_pairs(obj)$/;"	f
tconcat	skynet/3rd/lua/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
term	skynet/test/testterm.lua	/^local function term()$/;"	f
term_dispatch_thread	skynet/lualib/skynet/socketchannel.lua	/^local function term_dispatch_thread(self)$/;"	f
test	skynet/test/testcoroutine.lua	/^local function test(n)$/;"	f
test	skynet/test/testtimer.lua	/^local function test()$/;"	f
test2	skynet/3rd/lua/liolib.c	/^static int test2 (RN *rn, const char *set) {$/;"	f	file:
test2	skynet/test/testmysql.lua	/^local function test2( db)$/;"	f
test3	skynet/test/testmysql.lua	/^local function test3( db)$/;"	f
test4	skynet/test/testmysql.lua	/^local function test4( db)$/;"	f
testAMode	skynet/3rd/lua/lopcodes.h	384;"	d
testC	skynet/3rd/lua/ltests.c	/^static int testC (lua_State *L) {$/;"	f	file:
testITMode	skynet/3rd/lua/lopcodes.h	386;"	d
testMMMode	skynet/3rd/lua/lopcodes.h	388;"	d
testOTMode	skynet/3rd/lua/lopcodes.h	387;"	d
testTMode	skynet/3rd/lua/lopcodes.h	385;"	d
test_auth	skynet/test/testmongodb.lua	/^function test_auth()$/;"	f
test_eof	skynet/3rd/lua/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_expire_index	skynet/test/testmongodb.lua	/^function test_expire_index()$/;"	f
test_find_and_remove	skynet/test/testmongodb.lua	/^function test_find_and_remove()$/;"	f
test_image_recognition	game/myservice/testhttp.lua	/^local function test_image_recognition()$/;"	f
test_insert_with_index	skynet/test/testmongodb.lua	/^function test_insert_with_index()$/;"	f
test_insert_without_index	skynet/test/testmongodb.lua	/^function test_insert_without_index()$/;"	f
test_result	skynet/lualib/skynet/snax.lua	/^local function test_result(ok, ...)$/;"	f
test_runcommand	skynet/test/testmongodb.lua	/^function test_runcommand()$/;"	f
test_safe_batch_delete	skynet/test/testmongodb.lua	/^local function test_safe_batch_delete()$/;"	f
test_safe_batch_insert	skynet/test/testmongodb.lua	/^local function test_safe_batch_insert()$/;"	f
test_service	skynet/test/testtimeout.lua	/^local function test_service()$/;"	f
test_signed	skynet/test/testmysql.lua	/^local function test_signed(db)$/;"	f
test_sp_blob	skynet/test/testmysql.lua	/^local function test_sp_blob(db)$/;"	f
test_then_block	skynet/3rd/lua/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testbit	skynet/3rd/lua/lgc.h	67;"	d
testbits	skynet/3rd/lua/lgc.h	62;"	d
testchar	skynet/3rd/lpeg/lptypes.h	146;"	d
testnext	skynet/3rd/lua/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testobjref	skynet/3rd/lua/ltests.c	/^static int testobjref (global_State *g, GCObject *f, GCObject *t) {$/;"	f	file:
testobjref1	skynet/3rd/lua/ltests.c	/^static int testobjref1 (global_State *g, GCObject *f, GCObject *t) {$/;"	f	file:
testpattern	skynet/3rd/lpeg/lptree.c	/^static int testpattern (lua_State *L, int idx) {$/;"	f	file:
testprop	skynet/3rd/lua/lctype.h	52;"	d
tests_funcs	skynet/3rd/lua/ltests.c	/^static const struct luaL_Reg tests_funcs[] = {$/;"	v	typeref:struct:luaL_Reg	file:
th	skynet/3rd/lua/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State
thread	skynet/skynet-src/skynet_imp.h	/^	int thread;$/;"	m	struct:skynet_config
thread_monitor	skynet/skynet-src/skynet_start.c	/^thread_monitor(void *p) {$/;"	f	file:
thread_socket	skynet/skynet-src/skynet_start.c	/^thread_socket(void *p) {$/;"	f	file:
thread_timer	skynet/skynet-src/skynet_start.c	/^thread_timer(void *p) {$/;"	f	file:
thread_worker	skynet/skynet-src/skynet_start.c	/^thread_worker(void *p) {$/;"	f	file:
thvalue	skynet/3rd/lua/lobject.h	266;"	d
time	skynet/service/debug_console.lua	/^	local function time(t)$/;"	f
time	skynet/skynet-src/skynet_timer.c	/^	uint32_t time;$/;"	m	struct:timer	file:
time	skynet/skynet-src/socket_server.c	/^	volatile uint64_t time;$/;"	m	struct:socket_server	file:
timeout	skynet/service/debug_console.lua	/^local function timeout(ti)$/;"	f
timeout	skynet/test/testtimer.lua	/^local function timeout(t)$/;"	f
timeout_call	skynet/test/testtimeout.lua	/^local function timeout_call(ti, ...)$/;"	f
timeout_check	skynet/examples/checkdeadloop.lua	/^local function timeout_check(ti)$/;"	f
timer	skynet/skynet-src/skynet_timer.c	/^struct timer {$/;"	s	file:
timer_add	skynet/skynet-src/skynet_timer.c	/^timer_add(struct timer *T,void *arg,size_t sz,int time) {$/;"	f	file:
timer_create_timer	skynet/skynet-src/skynet_timer.c	/^timer_create_timer() {$/;"	f	file:
timer_event	skynet/skynet-src/skynet_timer.c	/^struct timer_event {$/;"	s	file:
timer_execute	skynet/skynet-src/skynet_timer.c	/^timer_execute(struct timer *T) {$/;"	f	file:
timer_execute_func	skynet/skynet-src/skynet_timer.c	/^typedef void (*timer_execute_func)(void *ud,void *arg);$/;"	t	file:
timer_node	skynet/skynet-src/skynet_timer.c	/^struct timer_node {$/;"	s	file:
timer_shift	skynet/skynet-src/skynet_timer.c	/^timer_shift(struct timer *T) {$/;"	f	file:
timer_update	skynet/skynet-src/skynet_timer.c	/^timer_update(struct timer *T) {$/;"	f	file:
times5	skynet/3rd/lua/lmathlib.c	/^static Rand64 times5 (Rand64 i) {$/;"	f	file:
times9	skynet/3rd/lua/lmathlib.c	/^static Rand64 times9 (Rand64 i) {$/;"	f	file:
timestring	skynet/service-src/service_logger.c	/^timestring(struct logger *inst, char tmp[SIZETIMEFMT]) {$/;"	f	file:
timing	skynet/service/snaxd.lua	/^local function timing( method, ... )$/;"	f
timing_enable	skynet/service-src/service_snlua.c	/^timing_enable(lua_State *L, int co_index, lua_Number *start_time) {$/;"	f	file:
timing_resume	skynet/service-src/service_snlua.c	/^timing_resume(lua_State *L, int co_index, int n) {$/;"	f	file:
timing_total	skynet/service-src/service_snlua.c	/^timing_total(lua_State *L, int co_index) {$/;"	f	file:
tinsert	skynet/3rd/lua/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tips 	game/myservice/player_t.lua	/^tips = function(self, fmt, ...)$/;"	f
tls_context	skynet/lualib-src/ltls.c	/^struct tls_context {$/;"	s	file:
tlshelper.closefunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.closefunc(tls_ctx)$/;"	f
tlshelper.init_requestfunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.init_requestfunc(fd, tls_ctx)$/;"	f
tlshelper.init_responsefunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.init_responsefunc(fd, tls_ctx)$/;"	f
tlshelper.newctx	skynet/lualib/http/tlshelper.lua	/^function tlshelper.newctx()$/;"	f
tlshelper.newtls	skynet/lualib/http/tlshelper.lua	/^function tlshelper.newtls(method, ssl_ctx, hostname)$/;"	f
tlshelper.readallfunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.readallfunc(fd, tls_ctx)$/;"	f
tlshelper.readfunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.readfunc(fd, tls_ctx)$/;"	f
tlshelper.writefunc	skynet/lualib/http/tlshelper.lua	/^function tlshelper.writefunc(fd, tls_ctx)$/;"	f
tmname	skynet/3rd/lua/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmname	skynet/3rd/lua/luac.c	/^static TString **tmname;$/;"	v	file:
tmove	skynet/3rd/lua/ltablib.c	/^static int tmove (lua_State *L) {$/;"	f	file:
to_bigendian	skynet/service-src/service_harbor.c	/^to_bigendian(uint8_t *buffer, uint32_t n) {$/;"	f	file:
tobefnz	skynet/3rd/lua/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
toboolean	skynet/service/debug_console.lua	/^local function toboolean(x)$/;"	f
tobooleanx	skynet/lualib-src/sproto/lsproto.c	/^tobooleanx (lua_State *L, int idx, int *isbool) {$/;"	f	file:
tocharset	skynet/3rd/lpeg/lpcset.c	/^int tocharset (TTree *tree, Charset *cs) {$/;"	f
todword	skynet/lualib-src/sproto/sproto.c	/^todword(const uint8_t *p) {$/;"	f	file:
tofile	skynet/3rd/lua/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofinalize	skynet/3rd/lua/lgc.h	92;"	d
tohandle	skynet/skynet-src/skynet_server.c	/^tohandle(struct skynet_context * context, const char * param) {$/;"	f	file:
tointeger	skynet/3rd/lua/lvm.h	62;"	d
tointegerns	skynet/3rd/lua/lvm.h	68;"	d
tointegerx	skynet/lualib-src/sproto/lsproto.c	/^tointegerx (lua_State *L, int idx, int *isnum) {$/;"	f	file:
tointegerx	skynet/lualib-src/sproto/lsproto.c	116;"	d	file:
token	skynet/3rd/lua/llex.h	/^  int token;$/;"	m	struct:Token
tolstream	skynet/3rd/lua/liolib.c	158;"	d	file:
tolstring	skynet/lualib-src/lua-netpack.c	/^tolstring(lua_State *L, size_t *sz, int index) {$/;"	f	file:
tolstringx	skynet/lualib-src/sproto/lsproto.c	/^tolstringx (lua_State *L, int idx, size_t *len, int *isstring) {$/;"	f	file:
tonum	skynet/3rd/lua/lstrlib.c	/^static int tonum (lua_State *L, int arg) {$/;"	f	file:
tonumber	skynet/3rd/lua/lvm.h	51;"	d
tonumberns	skynet/3rd/lua/lvm.h	56;"	d
tonumeral	skynet/3rd/lua/lcode.c	/^static int tonumeral (const expdesc *e, TValue *v) {$/;"	f	file:
top	skynet/3rd/lua/lstate.h	/^  StkIdRel	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	skynet/3rd/lua/lstate.h	/^  StkIdRel top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
toproto	skynet/3rd/lua/luac.c	141;"	d	file:
tostore	skynet/3rd/lua/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	skynet/3rd/lua/lvm.c	620;"	d	file:
tostringbuff	skynet/3rd/lua/lobject.c	/^static int tostringbuff (TValue *obj, char *buff) {$/;"	f	file:
total	skynet/3rd/lua/ltests.h	/^  unsigned long total;$/;"	m	struct:Memcontrol
total	skynet/skynet-src/skynet_server.c	/^	ATOM_INT total;$/;"	m	struct:skynet_node	file:
totalbytes	skynet/3rd/lua/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
touch_server	skynet/lualib/skynet/dns.lua	/^local function touch_server()$/;"	f
touserdata	skynet/3rd/lua/lapi.c	/^l_sinline void *touserdata (const TValue *o) {$/;"	f
toword	skynet/lualib-src/sproto/sproto.c	/^toword(const uint8_t * p) {$/;"	f	file:
tpack	skynet/3rd/lua/ltablib.c	/^static int tpack (lua_State *L) {$/;"	f	file:
tpanic	skynet/3rd/lua/ltests.c	/^static int tpanic (lua_State *L) {$/;"	f	file:
trace_coroutine	skynet/lualib/skynet.lua	/^	local function trace_coroutine(func, ti)$/;"	f
traceback	skynet/lualib-src/lua-skynet.c	/^traceback (lua_State *L) {$/;"	f	file:
traceback	skynet/service-src/service_snlua.c	/^traceback (lua_State *L) {$/;"	f	file:
transferinfo	skynet/3rd/lua/lstate.h	/^    } transferinfo;$/;"	m	union:CallInfo::__anon31	typeref:struct:CallInfo::__anon31::__anon32
trap	skynet/3rd/lua/lstate.h	/^      volatile l_signalT trap;$/;"	m	struct:CallInfo::__anon28::__anon29
trap	skynet/service-src/service_snlua.c	/^	ATOM_INT trap;$/;"	m	struct:snlua	file:
traverseCclosure	skynet/3rd/lua/lgc.c	/^static int traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	skynet/3rd/lua/lgc.c	/^static int traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	skynet/3rd/lua/lgc.c	/^static int traverseephemeron (global_State *g, Table *h, int inv) {$/;"	f	file:
traverseproto	skynet/3rd/lua/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestrongtable	skynet/3rd/lua/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	skynet/3rd/lua/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traversethread	skynet/3rd/lua/lgc.c	/^static int traversethread (global_State *g, lua_State *th) {$/;"	f	file:
traverseudata	skynet/3rd/lua/lgc.c	/^static int traverseudata (global_State *g, Udata *u) {$/;"	f	file:
traverseweakvalue	skynet/3rd/lua/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	skynet/3rd/lua/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tree	skynet/3rd/lpeg/lptree.h	/^  TTree tree[1];$/;"	m	struct:Pattern
tree2cset	skynet/3rd/lpeg/lpcset.c	/^void tree2cset (TTree *tree, charsetinfo *info) {$/;"	f
treebuffer	skynet/3rd/lpeg/lptree.h	66;"	d
tref	skynet/3rd/lua/ltests.c	/^static int tref (lua_State *L) {$/;"	f	file:
tremove	skynet/3rd/lua/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trigger_write	skynet/skynet-src/socket_server.c	/^trigger_write(struct socket_server *ss, struct request_send * request, struct socket_message *result) {$/;"	f	file:
trim32	skynet/3rd/lua/lmathlib.c	374;"	d	file:
trim64	skynet/3rd/lua/lmathlib.c	300;"	d	file:
try_connect	skynet/lualib/skynet/socketchannel.lua	/^local function try_connect(self , once)$/;"	f
try_handle	skynet/lualib/http/websocket.lua	/^local function try_handle(self, method, ...)$/;"	f
try_recv	skynet/examples/login/client.lua	/^	local function try_recv(fd, last)$/;"	f
tryagain	skynet/3rd/lua/lmem.c	/^static void *tryagain (lua_State *L, void *block,$/;"	f	file:
trymt	skynet/3rd/lua/lstrlib.c	/^static void trymt (lua_State *L, const char *mtname) {$/;"	f	file:
ts	skynet/3rd/lua/llex.h	/^  TString *ts;$/;"	m	union:__anon11
ts	skynet/3rd/lua/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString
tsslen	skynet/3rd/lua/lobject.h	411;"	d
tsvalue	skynet/3rd/lua/lobject.h	369;"	d
tsvalueraw	skynet/3rd/lua/lobject.h	367;"	d
ttisCclosure	skynet/3rd/lua/lobject.h	598;"	d
ttisLclosure	skynet/3rd/lua/lobject.h	596;"	d
ttisboolean	skynet/3rd/lua/lobject.h	242;"	d
ttisclosure	skynet/3rd/lua/lobject.h	599;"	d
ttisfalse	skynet/3rd/lua/lobject.h	243;"	d
ttisfloat	skynet/3rd/lua/lobject.h	327;"	d
ttisfulluserdata	skynet/3rd/lua/lobject.h	435;"	d
ttisfunction	skynet/3rd/lua/lobject.h	595;"	d
ttisinteger	skynet/3rd/lua/lobject.h	328;"	d
ttislcf	skynet/3rd/lua/lobject.h	597;"	d
ttislightuserdata	skynet/3rd/lua/lobject.h	434;"	d
ttislngstring	skynet/3rd/lua/lobject.h	365;"	d
ttisnil	skynet/3rd/lua/lobject.h	193;"	d
ttisnumber	skynet/3rd/lua/lobject.h	326;"	d
ttisshrstring	skynet/3rd/lua/lobject.h	364;"	d
ttisstrictnil	skynet/3rd/lua/lobject.h	197;"	d
ttisstring	skynet/3rd/lua/lobject.h	363;"	d
ttistable	skynet/3rd/lua/lobject.h	683;"	d
ttisthread	skynet/3rd/lua/lobject.h	264;"	d
ttistrue	skynet/3rd/lua/lobject.h	244;"	d
ttype	skynet/3rd/lua/lobject.h	87;"	d
ttypename	skynet/3rd/lua/ltm.h	70;"	d
ttypetag	skynet/3rd/lua/lobject.h	84;"	d
tunpack	skynet/3rd/lua/ltablib.c	/^static int tunpack (lua_State *L) {$/;"	f	file:
twoto	skynet/3rd/lua/lobject.h	793;"	d
twups	skynet/3rd/lua/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
twups	skynet/3rd/lua/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State
txtToken	skynet/3rd/lua/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	skynet/3rd/lua/ltests.c	/^    int type;$/;"	m	struct:Header::__anon35	file:
type	skynet/lualib-src/lua-datasheet.c	/^	uint8_t type[1];$/;"	m	struct:table	file:
type	skynet/lualib-src/sproto/sproto.c	/^	int type;$/;"	m	struct:field	file:
type	skynet/lualib-src/sproto/sproto.c	/^	struct sproto_type * type;$/;"	m	struct:sproto	typeref:struct:sproto::sproto_type	file:
type	skynet/lualib-src/sproto/sproto.h	/^	int type;$/;"	m	struct:sproto_arg
type	skynet/skynet-src/skynet_harbor.h	/^	int type;$/;"	m	struct:remote_message
type	skynet/skynet-src/skynet_socket.h	/^	int type;$/;"	m	struct:skynet_socket_message
type	skynet/skynet-src/socket_buffer.h	/^	int type;$/;"	m	struct:socket_sendbuffer
type	skynet/skynet-src/socket_info.h	/^	int type;$/;"	m	struct:socket_info
type	skynet/skynet-src/socket_server.c	/^	ATOM_INT type;$/;"	m	struct:socket	file:
type_n	skynet/lualib-src/sproto/sproto.c	/^	int type_n;$/;"	m	struct:sproto	file:
typeclosure	skynet/lualib-src/lua-bson.c	/^typeclosure(lua_State *L) {$/;"	f	file:
typeerror	skynet/3rd/lua/ldebug.c	/^static l_noret typeerror (lua_State *L, const TValue *o, const char *op,$/;"	f	file:
u	skynet/3rd/lpeg/lpcap.c	/^  } u;$/;"	m	struct:StrAux	typeref:union:StrAux::__anon1	file:
u	skynet/3rd/lpeg/lptree.h	/^  } u;$/;"	m	struct:TTree	typeref:union:TTree::__anon4
u	skynet/3rd/lua/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon15
u	skynet/3rd/lua/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon18
u	skynet/3rd/lua/lobject.h	/^  } u;$/;"	m	union:Node	typeref:struct:Node::NodeKey
u	skynet/3rd/lua/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon23
u	skynet/3rd/lua/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata
u	skynet/3rd/lua/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon28
u	skynet/skynet-src/socket_server.c	/^	} u;$/;"	m	struct:request_package	typeref:union:request_package::__anon42	file:
u2	skynet/3rd/lua/lstate.h	/^  } u2;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon31
u_posrelat	skynet/3rd/lua/lutf8lib.c	/^static lua_Integer u_posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
ub	skynet/3rd/lua/lobject.h	/^  lu_byte ub;$/;"	m	union:Value
uchar	skynet/3rd/lua/lstrlib.c	40;"	d	file:
ud	skynet/3rd/lua/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State
ud	skynet/lualib-src/sproto/sproto.h	/^	void *ud;$/;"	m	struct:sproto_arg
ud	skynet/skynet-src/skynet_socket.h	/^	int ud;$/;"	m	struct:skynet_socket_message
ud	skynet/skynet-src/socket_server.h	/^	int ud;	\/\/ for accept, ud is new connection id ; for data, ud is size of data $/;"	m	struct:socket_message
ud_warn	skynet/3rd/lua/lstate.h	/^  void *ud_warn;         \/* auxiliary data to 'warnf' *\/$/;"	m	struct:global_State
udata2finalize	skynet/3rd/lua/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatamemoffset	skynet/3rd/lua/lobject.h	491;"	d
udatatypename	skynet/3rd/lua/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
udataval	skynet/3rd/lua/ltests.c	/^static int udataval (lua_State *L) {$/;"	f	file:
udp	skynet/skynet-src/socket_server.c	/^		struct request_udp udp;$/;"	m	union:request_package::__anon42	typeref:struct:request_package::__anon42::request_udp	file:
udp_address	skynet/skynet-src/socket_server.c	/^		uint8_t udp_address[UDP_ADDRESS_SIZE];$/;"	m	union:socket::__anon41	file:
udp_address	skynet/skynet-src/socket_server.c	/^	uint8_t udp_address[UDP_ADDRESS_SIZE];$/;"	m	struct:write_buffer_udp	file:
udp_socket_address	skynet/skynet-src/socket_server.c	/^udp_socket_address(struct socket *s, const uint8_t udp_address[UDP_ADDRESS_SIZE], union sockaddr_all *sa) {$/;"	f	file:
udpbuffer	skynet/skynet-src/socket_server.c	/^	uint8_t udpbuffer[MAX_UDP_PACKAGE];$/;"	m	struct:socket_server	file:
udpconnecting	skynet/skynet-src/socket_server.c	/^	ATOM_INT udpconnecting;$/;"	m	struct:socket	file:
uint	skynet/3rd/lpeg/lptypes.h	/^typedef unsigned int uint;$/;"	t
uint16_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned short    uint16_t;$/;"	t
uint32_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned int      uint32_t;$/;"	t
uint32_to_uint64	skynet/lualib-src/sproto/sproto.c	/^uint32_to_uint64(int negative, uint8_t *buffer) {$/;"	f	file:
uint64_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	skynet/lualib-src/sproto/msvcint.h	/^typedef unsigned char     uint8_t;$/;"	t
uncomplete	skynet/lualib-src/lua-netpack.c	/^struct uncomplete {$/;"	s	file:
undefgoto	skynet/3rd/lua/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
unfold	skynet/lualib/skynet/db/mongo.lua	/^local function unfold(list, key, ...)$/;"	f
unforward	skynet/service/gate.lua	/^local function unforward(c)$/;"	f
unique_string	skynet/lualib/skynet/datasheet/builder.lua	/^local function unique_string(str)$/;"	f
unknown_request	skynet/lualib/skynet.lua	/^local function unknown_request(session, address, msg, sz, prototype)$/;"	f
unknown_response	skynet/lualib/skynet.lua	/^local function unknown_response(session, address, msg, sz)$/;"	f
unlock	skynet/lualib/skynet/coroutine.lua	/^	local function unlock(co, ...)$/;"	f
unmakemask	skynet/3rd/lua/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unmount_sub_cmd 	game/myclient/player_client_t.lua	/^unmount_sub_cmd = function(self)$/;"	f
unopr2op	skynet/3rd/lua/lcode.c	/^l_sinline OpCode unopr2op (UnOpr opr) {$/;"	f
unpack 	game/myservice/player_agent.lua	/^	unpack = function (msg, sz)$/;"	f
unpack 	skynet/examples/agent.lua	/^	unpack = function (msg, sz)$/;"	f
unpack 	skynet/examples/simplemonitor.lua	/^	unpack = function() end,$/;"	f
unpack 	skynet/examples/userlog.lua	/^	unpack = function(...) return ... end,$/;"	f
unpack 	skynet/lualib/skynet.lua	/^		unpack = function(...) return ... end,$/;"	f
unpack 	skynet/lualib/snax/gateserver.lua	/^		unpack = function ( msg, sz )$/;"	f
unpack 	skynet/service/clusterproxy.lua	/^	unpack = function (...) return ... end,$/;"	f
unpack 	skynet/service/multicastd.lua	/^	unpack = function(msg, sz)$/;"	f
unpack_answer	skynet/lualib/skynet/dns.lua	/^local function unpack_answer(chunk, left)$/;"	f
unpack_dict	skynet/lualib-src/lua-bson.c	/^unpack_dict(lua_State *L, struct bson_reader *br, bool array) {$/;"	f	file:
unpack_f	skynet/examples/login/client.lua	/^local function unpack_f(f)$/;"	f
unpack_header	skynet/lualib/skynet/dns.lua	/^local function unpack_header(chunk)$/;"	f
unpack_line	skynet/examples/login/client.lua	/^local function unpack_line(text)$/;"	f
unpack_name	skynet/lualib/skynet/dns.lua	/^local function unpack_name(chunk, left)$/;"	f
unpack_one	skynet/lualib-src/lua-seri.c	/^unpack_one(lua_State *L, struct read_block *rb) {$/;"	f	file:
unpack_package	game/myclient/client.lua	/^local function unpack_package(text)$/;"	f
unpack_package	skynet/examples/client.lua	/^local function unpack_package(text)$/;"	f
unpack_package	skynet/examples/login/client.lua	/^local function unpack_package(text)$/;"	f
unpack_question	skynet/lualib/skynet/dns.lua	/^local function unpack_question(chunk, left)$/;"	f
unpack_rdata	skynet/lualib/skynet/dns.lua	/^local function unpack_rdata(qtype, chunk)$/;"	f
unpack_reply	skynet/lualib-src/lua-mongo.c	/^unpack_reply(lua_State *L) {$/;"	f	file:
unpack_table	skynet/lualib-src/lua-seri.c	/^unpack_table(lua_State *L, struct read_block *rb, int array_size) {$/;"	f	file:
unpack_uint32	skynet/lualib-src/lua-cluster.c	/^unpack_uint32(const uint8_t * buf) {$/;"	f	file:
unpackint	skynet/3rd/lua/lstrlib.c	/^static lua_Integer unpackint (lua_State *L, const char *str,$/;"	f	file:
unpackmreq_number	skynet/lualib-src/lua-cluster.c	/^unpackmreq_number(lua_State *L, const uint8_t * buf, int sz, int is_push) {$/;"	f	file:
unpackmreq_part	skynet/lualib-src/lua-cluster.c	/^unpackmreq_part(lua_State *L, const uint8_t * buf, int sz) {$/;"	f	file:
unpackmreq_string	skynet/lualib-src/lua-cluster.c	/^unpackmreq_string(lua_State *L, const uint8_t * buf, int sz, int is_push) {$/;"	f	file:
unpackreq_number	skynet/lualib-src/lua-cluster.c	/^unpackreq_number(lua_State *L, const uint8_t * buf, int sz) {$/;"	f	file:
unpackreq_string	skynet/lualib-src/lua-cluster.c	/^unpackreq_string(lua_State *L, const uint8_t * buf, int sz) {$/;"	f	file:
unpacktrace	skynet/lualib-src/lua-cluster.c	/^unpacktrace(lua_State *L, const char * buf, int sz) {$/;"	f	file:
unref	skynet/3rd/lua/ltests.c	/^static int unref (lua_State *L) {$/;"	f	file:
unroll	skynet/3rd/lua/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
update	skynet/lualib-src/lua-sharedata.c	/^	struct table * update;$/;"	m	struct:ctrl	typeref:struct:ctrl::table	file:
update	skynet/lualib/skynet/sharedata/corelib.lua	/^local function update(root, cobj, gcobj)$/;"	f
update	skynet/service/datacenterd.lua	/^local function update(db, key, value, ...)$/;"	f
update_cache	skynet/lualib-src/lua-datasheet.c	/^update_cache(lua_State *L, const void *data, const void * newdata) {$/;"	f	file:
update_name	skynet/service-src/service_harbor.c	/^update_name(struct harbor *h, const char name[GLOBALNAME_LENGTH], uint32_t handle) {$/;"	f	file:
update_stat	skynet/service/snaxd.lua	/^local function update_stat(name, ti)$/;"	f
update_xmalloc_stat_alloc	skynet/skynet-src/malloc_hook.c	/^update_xmalloc_stat_alloc(uint32_t handle, size_t __n) {$/;"	f	file:
update_xmalloc_stat_free	skynet/skynet-src/malloc_hook.c	/^update_xmalloc_stat_free(uint32_t handle, size_t __n) {$/;"	f	file:
updatebase	skynet/3rd/lua/lvm.c	1074;"	d	file:
updatecache	skynet/3rd/lpeg/lpcap.c	/^static int updatecache (CapState *cs, int v) {$/;"	f	file:
updatelocale 	skynet/3rd/lpeg/re.lua	/^local function updatelocale ()$/;"	f
updateobject	skynet/lualib/skynet/datasheet/init.lua	/^local function updateobject(name)$/;"	f
updatestack	skynet/3rd/lua/lvm.c	1077;"	d	file:
updatetrap	skynet/3rd/lua/lvm.c	1072;"	d	file:
upgrade_lv 	game/myservice/player_t.lua	/^upgrade_lv = function(self)$/;"	f
upisopen	skynet/3rd/lua/lfunc.h	32;"	d
uplevel	skynet/3rd/lua/lfunc.h	35;"	d
upv	skynet/3rd/lua/lstate.h	/^  struct UpVal upv;$/;"	m	union:GCUnion	typeref:struct:GCUnion::UpVal
upval	skynet/3rd/lua/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	skynet/3rd/lua/ldebug.c	/^static const char *upvalname (const Proto *p, int uv) {$/;"	f	file:
upvals	skynet/3rd/lua/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	skynet/3rd/lua/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalue	skynet/3rd/lua/ltests.c	/^static int upvalue (lua_State *L) {$/;"	f	file:
upvalues	skynet/3rd/lua/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
url.parse	skynet/lualib/http/url.lua	/^function url.parse(u)$/;"	f
url.parse_query	skynet/lualib/http/url.lua	/^function url.parse_query(q)$/;"	f
usage	skynet/3rd/lua/luac.c	/^static void usage(const char* message)$/;"	f	file:
userobject	skynet/skynet-src/socket_server.c	/^	bool userobject;$/;"	m	struct:write_buffer	file:
utf8_copy	skynet/lualib-src/lua-bson.c	/^utf8_copy(const char *s, char *d, size_t limit) {$/;"	f	file:
utf8_decode	skynet/3rd/lpeg/lpvm.c	/^static const char *utf8_decode (const char *o, int *val) {$/;"	f	file:
utf8_decode	skynet/3rd/lua/lutf8lib.c	/^static const char *utf8_decode (const char *s, utfint *val, int strict) {$/;"	f	file:
utf8esc	skynet/3rd/lua/llex.c	/^static void utf8esc (LexState *ls) {$/;"	f	file:
utf_to	skynet/3rd/lpeg/lpvm.h	70;"	d
utfchar	skynet/3rd/lua/lutf8lib.c	/^static int utfchar (lua_State *L) {$/;"	f	file:
utfint	skynet/3rd/lua/lutf8lib.c	/^typedef unsigned int utfint;$/;"	t	file:
utfint	skynet/3rd/lua/lutf8lib.c	/^typedef unsigned long utfint;$/;"	t	file:
utflen	skynet/3rd/lua/lutf8lib.c	/^static int utflen (lua_State *L) {$/;"	f	file:
uv	skynet/3rd/lua/lobject.h	/^  TValue uv;$/;"	m	union:UValue
uv	skynet/3rd/lua/lobject.h	/^  UValue uv[1];  \/* user values *\/$/;"	m	struct:Udata
uvalue	skynet/3rd/lua/lobject.h	438;"	d
v	skynet/3rd/lua/lobject.h	/^  } v;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon17
v	skynet/3rd/lua/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	skynet/3rd/lua/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v	skynet/lualib-src/lua-sharedata.c	/^	union value v;$/;"	m	struct:node	typeref:union:node::value	file:
v4	skynet/skynet-src/socket_server.c	/^	struct sockaddr_in v4;$/;"	m	union:sockaddr_all	typeref:struct:sockaddr_all::sockaddr_in	file:
v6	skynet/skynet-src/socket_server.c	/^	struct sockaddr_in6 v6;$/;"	m	union:sockaddr_all	typeref:struct:sockaddr_all::sockaddr_in6	file:
vRB	skynet/3rd/lua/lvm.c	1063;"	d	file:
vRC	skynet/3rd/lua/lvm.c	1066;"	d	file:
val	skynet/3rd/lua/lobject.h	/^  TValue val;$/;"	m	union:StackValue
val2str	skynet/3rd/lpeg/lptree.c	/^static const char *val2str (lua_State *L, int idx) {$/;"	f	file:
val_	skynet/3rd/lua/lobject.h	72;"	d
validop	skynet/3rd/lua/lcode.c	/^static int validop (int op, TValue *v1, TValue *v2) {$/;"	f	file:
valiswhite	skynet/3rd/lua/lgc.c	83;"	d	file:
valraw	skynet/3rd/lua/lobject.h	73;"	d
value	skynet/3rd/lua/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon18
value	skynet/lualib-src/lua-sharedata.c	/^union value {$/;"	u	file:
value	skynet/lualib-src/sproto/sproto.h	/^	void *value;$/;"	m	struct:sproto_arg
value	skynet/lualib/skynet/datasheet/dump.lua	/^		local function value(t)$/;"	f
value	skynet/service-src/service_harbor.c	/^	uint32_t value;$/;"	m	struct:keyvalue	file:
value	skynet/skynet-src/socket_server.c	/^	int value;$/;"	m	struct:request_setopt	file:
valuecached	skynet/3rd/lpeg/lpcap.h	/^  int valuecached;  \/* value stored in cache slot *\/$/;"	m	struct:CapState
valuetype	skynet/lualib-src/lua-sharedata.c	/^	uint8_t valuetype;	\/\/ value type can be number\/string\/boolean\/table$/;"	m	struct:node	file:
var	skynet/3rd/lua/lparser.h	/^    } var;$/;"	m	union:expdesc::__anon23	typeref:struct:expdesc::__anon23::__anon25
varinfo	skynet/3rd/lua/ldebug.c	/^static const char *varinfo (lua_State *L, const TValue *o) {$/;"	f	file:
varname	skynet/3rd/lua/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
vd	skynet/3rd/lua/lparser.h	/^  } vd;$/;"	m	union:Vardesc	typeref:struct:Vardesc::__anon26
verify_domain_name	skynet/lualib/skynet/dns.lua	/^local function verify_domain_name(name)$/;"	f
verifyerror	skynet/3rd/lpeg/lptree.c	/^static int verifyerror (lua_State *L, unsigned short *passed, int npassed) {$/;"	f	file:
verifygrammar	skynet/3rd/lpeg/lptree.c	/^static void verifygrammar (lua_State *L, TTree *grammar) {$/;"	f	file:
verifyrule	skynet/3rd/lpeg/lptree.c	/^static int verifyrule (lua_State *L, TTree *tree, unsigned short *passed,$/;"	f	file:
version	skynet/skynet-src/skynet_monitor.c	/^	ATOM_INT version;$/;"	m	struct:skynet_monitor	file:
vidx	skynet/3rd/lua/lparser.h	/^      unsigned short vidx;  \/* compiler index (in 'actvar.arr')  *\/$/;"	m	struct:expdesc::__anon23::__anon25
vkisindexed	skynet/3rd/lua/lparser.h	65;"	d
vkisvar	skynet/3rd/lua/lparser.h	64;"	d
vmbreak	skynet/3rd/lua/ljumptab.h	10;"	d
vmbreak	skynet/3rd/lua/ljumptab.h	16;"	d
vmbreak	skynet/3rd/lua/lvm.c	1145;"	d	file:
vmcase	skynet/3rd/lua/ljumptab.h	14;"	d
vmcase	skynet/3rd/lua/ljumptab.h	9;"	d
vmcase	skynet/3rd/lua/lvm.c	1144;"	d	file:
vmdispatch	skynet/3rd/lua/ljumptab.h	12;"	d
vmdispatch	skynet/3rd/lua/ljumptab.h	8;"	d
vmdispatch	skynet/3rd/lua/lvm.c	1143;"	d	file:
vmfetch	skynet/3rd/lua/lvm.c	1135;"	d	file:
voidf	skynet/3rd/lua/loadlib.c	/^typedef void (*voidf)(void);$/;"	t	file:
vslen	skynet/3rd/lua/lobject.h	414;"	d
vtagname	skynet/lualib-src/sproto/sproto.h	/^	const char *vtagname;$/;"	m	struct:sproto_arg
wait_for_response	skynet/lualib/skynet/socketchannel.lua	/^local function wait_for_response(self, response)$/;"	f
waitfor	skynet/service/datacenterd.lua	/^local function waitfor(db, key1, key2, ...)$/;"	f
waitfor	skynet/service/service_mgr.lua	/^local function waitfor(name , func, ...)$/;"	f
waitfor_remote	skynet/service/service_mgr.lua	/^	local function waitfor_remote(cmd, name, ...)$/;"	f
wakeup	skynet/lualib/skynet/socket.lua	/^local function wakeup(s)$/;"	f
wakeup	skynet/service/datacenterd.lua	/^local function wakeup(db, key1, ...)$/;"	f
wakeup	skynet/skynet-src/skynet_start.c	/^wakeup(struct monitor *m, int busy) {$/;"	f	file:
wakeup	skynet/test/testtimer.lua	/^local function wakeup(co)$/;"	f
wakeup_all	skynet/lualib/skynet/socketchannel.lua	/^local function wakeup_all(self, errmsg)$/;"	f
warn_size	skynet/skynet-src/socket_server.c	/^	int64_t warn_size;$/;"	m	struct:socket	file:
warnf	skynet/3rd/lua/lstate.h	/^  lua_WarnFunction warnf;  \/* warning function *\/$/;"	m	struct:global_State
warnf	skynet/3rd/lua/ltests.c	/^static void warnf (void *ud, const char *msg, int tocont) {$/;"	f	file:
warnfcont	skynet/3rd/lua/lauxlib.c	/^static void warnfcont (void *ud, const char *message, int tocont) {$/;"	f	file:
warnfoff	skynet/3rd/lua/lauxlib.c	/^static void warnfoff (void *ud, const char *message, int tocont) {$/;"	f	file:
warnfon	skynet/3rd/lua/lauxlib.c	/^static void warnfon (void *ud, const char *message, int tocont) {$/;"	f	file:
watch:disconnect	skynet/lualib/skynet/db/redis.lua	/^function watch:disconnect()$/;"	f
watch:message	skynet/lualib/skynet/db/redis.lua	/^function watch:message()$/;"	f
watch[name] 	skynet/lualib/skynet/db/redis.lua	/^	watch[name] = function(self, ...)$/;"	f
watch_cmd	skynet/lualib/skynet/remotedebug.lua	/^	local function watch_cmd(cmd)$/;"	f
watch_func	skynet/lualib/skynet/db/redis.lua	/^local function watch_func( name )$/;"	f
watch_login	skynet/lualib/skynet/db/redis.lua	/^local function watch_login(conf, obj)$/;"	f
watch_proto	skynet/lualib/skynet/remotedebug.lua	/^local function watch_proto(protoname, cond)$/;"	f
watchdog	skynet/service-src/service_gate.c	/^	uint32_t watchdog;$/;"	m	struct:gate	file:
watching	skynet/test/testredis.lua	/^local function watching()$/;"	f
wb_boolean	skynet/lualib-src/lua-seri.c	/^wb_boolean(struct write_block *wb, int boolean) {$/;"	f	file:
wb_free	skynet/lualib-src/lua-seri.c	/^wb_free(struct write_block *wb) {$/;"	f	file:
wb_init	skynet/lualib-src/lua-seri.c	/^wb_init(struct write_block *wb , struct block *b) {$/;"	f	file:
wb_integer	skynet/lualib-src/lua-seri.c	/^wb_integer(struct write_block *wb, lua_Integer v) {$/;"	f	file:
wb_list	skynet/skynet-src/socket_server.c	/^struct wb_list {$/;"	s	file:
wb_nil	skynet/lualib-src/lua-seri.c	/^wb_nil(struct write_block *wb) {$/;"	f	file:
wb_pointer	skynet/lualib-src/lua-seri.c	/^wb_pointer(struct write_block *wb, void *v) {$/;"	f	file:
wb_push	skynet/lualib-src/lua-seri.c	/^wb_push(struct write_block *b, const void *buf, int sz) {$/;"	f	file:
wb_real	skynet/lualib-src/lua-seri.c	/^wb_real(struct write_block *wb, double v) {$/;"	f	file:
wb_size	skynet/skynet-src/socket_server.c	/^	int64_t wb_size;$/;"	m	struct:socket	file:
wb_string	skynet/lualib-src/lua-seri.c	/^wb_string(struct write_block *wb, const char *str, int len) {$/;"	f	file:
wb_table	skynet/lualib-src/lua-seri.c	/^wb_table(lua_State *L, struct write_block *wb, int index, int depth) {$/;"	f	file:
wb_table_array	skynet/lualib-src/lua-seri.c	/^wb_table_array(lua_State *L, struct write_block * wb, int index, int depth) {$/;"	f	file:
wb_table_hash	skynet/lualib-src/lua-seri.c	/^wb_table_hash(lua_State *L, struct write_block * wb, int index, int depth, int array_size) {$/;"	f	file:
wb_table_metapairs	skynet/lualib-src/lua-seri.c	/^wb_table_metapairs(lua_State *L, struct write_block *wb, int index, int depth) {$/;"	f	file:
wbuffer	skynet/skynet-src/socket_info.h	/^	int64_t wbuffer;$/;"	m	struct:socket_info
weak	skynet/3rd/lua/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
weight	skynet/skynet-src/skynet_start.c	/^	int weight;$/;"	m	struct:worker_parm	file:
werror	skynet/lualib/skynet/db/mongo.lua	/^local function werror(r)$/;"	f
what	skynet/3rd/lua/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
what	skynet/skynet-src/socket_server.c	/^	int what;$/;"	m	struct:request_setopt	file:
when a new user login, alloc a subid for it. 	skynet/lualib/snax/msgserver.lua	/^	conf.login_handler(uid, secret) -> subid : the function when a new user login, alloc a subid for it. (may call by login server)$/;"	f
whilestat	skynet/3rd/lua/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
whitelist	skynet/3rd/lua/lgc.c	/^static void whitelist (global_State *g, GCObject *p) {$/;"	f	file:
withvariant	skynet/3rd/lua/lobject.h	83;"	d
word32tobytes	skynet/3rd/lua-md5/md5.c	/^static void word32tobytes (const WORD32 *input, char *output) {$/;"	f	file:
worker_parm	skynet/skynet-src/skynet_start.c	/^struct worker_parm {$/;"	s	file:
wrapKey 	skynet/test/testmysql.lua	/^    wrapKey = function(val)$/;"	f
wrapVal 	skynet/test/testmysql.lua	/^    wrapVal = function(val, level)$/;"	f
wrap_co	skynet/lualib/skynet/coroutine.lua	/^	local function wrap_co(ok, ...)$/;"	f
wrap_locals	skynet/lualib/skynet/injectcode.lua	/^local function wrap_locals(co, source, level, ext_funcs)$/;"	f
wrapper	skynet/lualib/skynet/snax.lua	/^local function wrapper(handle, name, type)$/;"	f
wrapper_socket_function	skynet/lualib/skynet/socketchannel.lua	/^local function wrapper_socket_function(f)$/;"	f
write	skynet/lualib/snax/loginserver.lua	/^local function write(service, fd, text)$/;"	f
write	skynet/skynet-src/rwlock.h	/^	ATOM_INT write;$/;"	m	struct:rwlock
write	skynet/skynet-src/socket_info.h	/^	uint64_t write;$/;"	m	struct:socket_info
write	skynet/skynet-src/socket_poll.h	/^	bool write;$/;"	m	struct:event
write	skynet/skynet-src/socket_server.c	/^	uint64_t write;$/;"	m	struct:socket_stat	file:
write_binary	skynet/lualib-src/lua-bson.c	/^write_binary(struct bson *b, const void * buffer, size_t sz) {$/;"	f	file:
write_block	skynet/lualib-src/lua-seri.c	/^struct write_block {$/;"	s	file:
write_buffer	skynet/skynet-src/socket_server.c	/^struct write_buffer {$/;"	s	file:
write_buffer_free	skynet/skynet-src/socket_server.c	/^write_buffer_free(struct socket_server *ss, struct write_buffer *wb) {$/;"	f	file:
write_buffer_udp	skynet/skynet-src/socket_server.c	/^struct write_buffer_udp {$/;"	s	file:
write_byte	skynet/lualib-src/lua-bson.c	/^write_byte(struct bson *b, uint8_t v) {$/;"	f	file:
write_double	skynet/lualib-src/lua-bson.c	/^write_double(struct bson *b, lua_Number d) {$/;"	f	file:
write_ff	skynet/lualib-src/sproto/sproto.c	/^write_ff(const uint8_t * src, const uint8_t * src_end, uint8_t * des, int n) {$/;"	f	file:
write_frame	skynet/lualib/http/websocket.lua	/^local function write_frame(self, op, payload_data, masking_key)$/;"	f
write_handshake	skynet/lualib/http/websocket.lua	/^local function write_handshake(self, host, url, header)$/;"	f
write_int32	skynet/lualib-src/lua-bson.c	/^write_int32(struct bson *b, int32_t v) {$/;"	f	file:
write_int32	skynet/lualib-src/lua-mongo.c	/^write_int32(struct buffer *b, int32_t v) {$/;"	f	file:
write_int64	skynet/lualib-src/lua-bson.c	/^write_int64(struct bson *b, int64_t v) {$/;"	f	file:
write_int8	skynet/lualib-src/lua-mongo.c	/^write_int8(struct buffer *b, int8_t v) {$/;"	f	file:
write_length	skynet/lualib-src/lua-bson.c	/^write_length(struct bson *b, int32_t v, int off) {$/;"	f	file:
write_length	skynet/lualib-src/lua-mongo.c	/^write_length(struct buffer *b, int32_t v, int off) {$/;"	f	file:
write_pid	skynet/skynet-src/skynet_daemon.c	/^write_pid(const char *pidfile) {$/;"	f	file:
write_size	skynet/lualib-src/lua-netpack.c	/^write_size(uint8_t * buffer, int len) {$/;"	f	file:
write_string	skynet/lualib-src/lua-bson.c	/^write_string(struct bson *b, lua_State *L, const char *key, size_t sz) {$/;"	f	file:
writeall	skynet/lualib/http/httpd.lua	/^local function writeall(writefunc, statuscode, bodyfunc, header)$/;"	f
writeline	skynet/examples/login/client.lua	/^local function writeline(fd, text)$/;"	f
writer	skynet/3rd/lua/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon9	file:
writer	skynet/3rd/lua/lstrlib.c	/^static int writer (lua_State *L, const void *b, size_t size, void *ud) {$/;"	f	file:
writer	skynet/3rd/lua/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
writing	skynet/skynet-src/socket_info.h	/^	uint8_t writing;$/;"	m	struct:socket_info
writing	skynet/skynet-src/socket_server.c	/^	bool writing;$/;"	m	struct:socket	file:
wtime	skynet/skynet-src/socket_info.h	/^	uint64_t wtime;$/;"	m	struct:socket_info
wtime	skynet/skynet-src/socket_server.c	/^	uint64_t wtime;$/;"	m	struct:socket_stat	file:
xor_key	skynet/lualib-src/lsha1.c	/^xor_key(uint8_t key[BLOCKSIZE], uint32_t xor_) {$/;"	f	file:
xpcall_ret	skynet/lualib/skynet/queue.lua	/^	local function xpcall_ret(ok, ...)$/;"	f
ycm_core	skynet/.ycm_extra_conf.py	/^import ycm_core$/;"	i
yield_call	skynet/lualib/skynet.lua	/^local function yield_call(service, session)$/;"	f
yieldable	skynet/3rd/lua/lstate.h	104;"	d
yindex	skynet/3rd/lua/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
youngcollection	skynet/3rd/lua/lgc.c	/^static void youngcollection (lua_State *L, global_State *g) {$/;"	f	file:
z	skynet/3rd/lua/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	skynet/3rd/lua/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	skynet/3rd/lua/lzio.h	20;"	d
{ __gc 	skynet/lualib/skynet/socket.lua	/^	{ __gc = function(p)$/;"	f
{ m.Cmt(']' * m.C(m.P'	skynet/3rd/lpeg/test.lua	/^    { m.Cmt(']' * m.C(m.P'='^0) * ']' * m.Cb("init"), function (_, _, s1, s2)$/;"	f
